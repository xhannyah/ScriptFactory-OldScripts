<Script>FushigiBot:f(x) Tanner:1.0
<Description>Supports both p2p and f2p. Only needs cash (750k+ for f2p) and 1.3m+ for p2p). Will make Leather in f2p and Blue dragon leather in p2p.
<Integer>UABInOutZoomSelector:0
<Integer>ABC2GenerateTabSwitchPreference:0
<Integer>ABC2ShouldMoveToAnticipated:0
<Integer>ABC2GenerateEatAtHP:0
<Integer>UABShouldBankAFK:0
<Integer>ABC2ShouldLeaveGame:0
<Integer>ABC2ShouldCheckTabs:0
<Integer>RestockStage:0
<Integer>ABC2GenerateRunActivation:0
<Integer>ABC2GenerateReactionTime:0
<Integer>ABC2GenerateOpenBankPreference:0
<Integer>UABZoomStopper:0
<Integer>FirstDeathStage:0
<Integer>ABC2ShouldHoverNextTarget:0
<Boolean>EnableBlueLeather:false
<Boolean>IsAnimating:false
<Boolean>EnableLeather:false
<Boolean>IsDead:false
<Boolean>RestockBlueDragonhide:false
<Boolean>InBreak:true
<Boolean>FreshRun:true
<Boolean>RestockCowhide:false
<Boolean>InMiniBreak:false
<Boolean>EnableDeathHandler:true
<Boolean>NeedToHopWorlds:false
<Boolean>EnableCustomBreaks:true
<Boolean>EnableCraftingGuild:false
<Boolean>EnableUniqueAntiban:true
<Boolean>RestockApron:false
<Boolean>NeedToBank:false
<Boolean>NeedToRestock:false
<Boolean>EnableTribotAntiban:true
<Boolean>FirstDeath:false
<Boolean>NeedApron:false
<Position>TannerAlKharid:3275,3191,0
<Position>GrandExchange:3164,3485,0
<Position>CraftingGuild1F:2933,3284,0
<Position>BankAlKharid:3269,3167,0
<Area>VarrockPlusEdgeville:3071,3517,3291,3382,0
<Area>TannerAlKharid:3270,3194,3277,3189,0
<Area>BankAlKharid:3269,3170,3270,3166,0
<Poly Area>GrandExchange:Areaarea=newArea(newint{{3161,3500},{3155,3494},{3155,3486},{3161,3480},{3169,3480},{3175,3486},{3175,3494},{3169,3500}});:0
<Poly Area>CraftingGuild1F:Areaarea=newArea(newint{{2931,3293},{2929,3293},{2928,3292},{2928,3287},{2930,3285},{2930,3281},{2927,3278},{2927,3276},{2928,3275},{2930,3275},{2931,3276},{2931,3277},{2933,3279},{2937,3279},{2937,3278},{2939,3276},{2943,3276},{2944,3277},{2944,3291},{2943,3292},{2939,3292},{2938,3293},{2936,3293},{2935,3292},{2935,3290},{2934,3289},{2933,3289},{2932,3290},{2932,3292}});:0
<Timer><Global>IsAnimating:6000,true,2000,false
<Timer>UABShouldCrazyClick:3360000,true,960000,true
<Timer>UABShouldTakeMiniBreak:1920000,true,1080000,true
<Timer>ABC2ShouldExamineEntity:3360000,true,1080000,true
<Timer>MiniBreak:22000,true,48000,false
<Timer>Botting:1080000,true,480000,true
<Timer>ABC2ShouldCheckTabs:900000,true,420000,true
<Timer>ABC2ShouldMoveMouse:300000,true,240000,true
<Timer>PreparingForBreak:10000,false,0,false
<Timer>UABShouldReplyToPlayer:5400000,false,0,true
<Timer>UABTannerInteractDelay:300000,true,120000,true
<Timer>UABShouldHopWorlds:2520000,true,840000,true
<Timer>ABC2ShouldCheckXP:2520000,true,960000,true
<Timer>RestockReset:60000,false,0,false
<Timer>UABShouldInspectLoot:2160000,true,1320000,true
<Timer>ABC2ShouldPickupMouse:240000,true,180000,true
<Timer>UABShouldZoom:1860000,true,1020000,true
<Timer>ABC2ShouldRightClick:1140000,true,420000,true
<Timer>ABC2ShouldRotateCamera:1560000,true,660000,true
<User Input>Script Settings:EnableDeathHandler|Death Handler|true/~/EnableCustomBreaks|Custom Breaks|true/~/EnableTribotAntiban|Tribot ABC2 (Antiban)|true/~/EnableUniqueAntiban|Unique ABC (Antiban)|true/~/
[1, Debug, comment, 1:[Start]]
[2, Variables, getBoolean, 1:FreshRun, 3:true]
[2, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[2, Timers, reset, 1:[ABC2ShouldCheckXP]]
[2, Timers, reset, 1:[ABC2ShouldExamineEntity]]
[2, Timers, reset, 1:[ABC2ShouldMoveMouse]]
[2, Timers, reset, 1:[ABC2ShouldPickupMouse]]
[2, Timers, reset, 1:[ABC2ShouldRightClick]]
[2, Timers, reset, 1:[ABC2ShouldRotateCamera]]
[2, Timers, reset, 1:[UABShouldCrazyClick]]
[2, Timers, reset, 1:[UABShouldHopWorlds]]
[2, Timers, reset, 1:[UABShouldInspectLoot]]
[2, Timers, reset, 1:[UABShouldTakeMiniBreak]]
[2, Variables, editBoolean, 1:FreshRun, 3:false]
[3, Debug, comment, 1:[First Death Handler]]
[4, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[4, Variables, getBoolean, 1:IsDead, 3:true]
[4, NPC, isExists, {false}, 1:[Death]]
[4, Debug, debug, 1:[Successfully left Death's Lair.]]
[4, Variables, editBoolean, 1:IsDead, 3:false]
[4, Variables, editBoolean, 1:FirstDeath, 3:false]
[5, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[5, Variables, getBoolean, 1:IsDead, 3:false]
[5, NPC, isExists, {true}, 1:[Death]]
[5, Debug, debug, 1:[Oh no. You are dead.]]
[5, Variables, editBoolean, 1:IsDead, 3:true]
[6, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[6, Variables, getBoolean, 1:IsDead, 3:true]
[6, Variables, getBoolean, 1:FirstDeath, 3:false]
[6, Debug, debug, 1:[Trying to leave Death's Lair.]]
[6, RS2Object, interactWith, 1:Portal, 1:Use, 3:true, 3:false, 3:true, 3:false, 3:false]
[7, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[7, Variables, getBoolean, 1:FirstDeath, 3:true]
[7, RS2Widget, isVisibleContainingText, {true}, 1:<str>Tell me about gravestones again.</str>, 3:false]
[7, RS2Widget, isVisibleContainingText, {true}, 1:<str>How do I pay a gravestone fee?</str>, 3:false]
[7, RS2Widget, isVisibleContainingText, {true}, 1:<str>How long do I have to return to my gravestone?</str>, 3:false]
[7, RS2Widget, isVisibleContainingText, {true}, 1:<str>How do I know what will happen to my items when I die?</str>, 3:false]
[7, Variables, editBoolean, 1:FirstDeath, 3:false]
[8, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[8, Variables, getBoolean, 1:IsDead, 3:true]
[8, Variables, getBoolean, 1:FirstDeath, 3:false]
[8, RS2Widget, isVisibleContainingText, {true}, 1:I haven't finished talking to you yet, 3:false]
[8, Variables, editBoolean, 1:FirstDeath, 3:true]
[9, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[9, Variables, getBoolean, 1:IsDead, 3:true]
[9, Variables, getBoolean, 1:FirstDeath, 3:true]
[9, Dialogues, isInDialogue, {false}]
[9, NPC, interactWith, 1:Death, 1:Talk-to, 3:true, 3:false, 3:true, 3:false, 3:false]
[10, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[10, Variables, getBoolean, 1:IsDead, 3:true]
[10, Dialogues, isInDialogue, {true}]
[10, Dialogues, clickContinue]
[11, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[11, Variables, getBoolean, 1:FirstDeath, 3:true]
[11, RS2Widget, isVisibleContainingText, {false}, 1:<str>Tell me about gravestones again.</str>, 3:false]
[11, RS2Widget, isVisibleContainingText, {true}, 1:Tell me about gravestones again., 3:true]
[11, RS2Widget, interactWithWidgetContainingText, 1:Tell me about gravestones again., 1:Continue, 3:false]
[12, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[12, Variables, getBoolean, 1:FirstDeath, 3:true]
[12, RS2Widget, isVisibleContainingText, {false}, 1:<str>How do I pay a gravestone fee?</str>, 3:false]
[12, RS2Widget, isVisibleContainingText, {true}, 1:How do I pay a gravestone fee?, 3:true]
[12, RS2Widget, interactWithWidgetContainingText, 1:How do I pay a gravestone fee?, 1:Continue, 3:false]
[13, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[13, Variables, getBoolean, 1:FirstDeath, 3:true]
[13, RS2Widget, isVisibleContainingText, {false}, 1:<str>How long do I have to return to my gravestone?</str>, 3:false]
[13, RS2Widget, isVisibleContainingText, {true}, 1:How long do I have to return to my gravestone?, 3:false]
[13, RS2Widget, interactWithWidgetContainingText, 1:How long do I have to return to my gravestone?, 1:Continue, 3:false]
[14, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[14, Variables, getBoolean, 1:FirstDeath, 3:true]
[14, RS2Widget, isVisibleContainingText, {false}, 1:<str>How do I know what will happen to my items when I die?</str>, 3:false]
[14, RS2Widget, isVisibleContainingText, {true}, 1:How do I know what will happen to my items when I die?, 3:false]
[14, RS2Widget, interactWithWidgetContainingText, 1:How do I know what will happen to my items when I die?, 1:Continue, 3:false]
[15, Debug, comment, 1:[Breaks]]
[20, Debug, comment, 1:[Antiban - Tribot ABC2]]
[21, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[21, Variables, getBoolean, 1:FreshRun, 3:false]
[21, Timers, isRunning, {false}, 1:ABC2ShouldPickupMouse]
[21, Debug, debug, 1:[Antiban - Pretending to pick up mouse.]]
[21, Mouse, moveMouseSlightly, 2:[25]]
[21, Timers, reset, 1:[ABC2ShouldPickupMouse]]
[22, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[22, Variables, getBoolean, 1:FreshRun, 3:false]
[22, Timers, isRunning, {false}, 1:ABC2ShouldMoveMouse]
[22, Debug, debug, 1:[Antiban - Moving mouse.]]
[22, Mouse, moveMouse, 2:400, 2:250, 2:175]
[22, Timers, reset, 1:[ABC2ShouldMoveMouse]]
[23, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[23, Variables, getBoolean, 1:FreshRun, 3:false]
[23, Timers, isRunning, {false}, 1:ABC2ShouldRightClick]
[23, GrandExchange, isOpen, {false}]
[23, Debug, debug, 1:[Antiban - Right clicking.]]
[23, Mouse, moveMouse, 2:400, 2:250, 2:175]
[23, Mouse, rightClick]
[23, Sleeping, sleepRandom, 2:100, 2:900]
[23, Mouse, moveMouse, 2:400, 2:250, 2:175]
[23, Timers, reset, 1:[ABC2ShouldRightClick]]
[24, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[24, Variables, getBoolean, 1:FreshRun, 3:false]
[24, Timers, isRunning, {false}, 1:ABC2ShouldRotateCamera]
[24, Debug, debug, 1:[Antiban - Moving camera.]]
[24, Camera, movePitch, 2:55, 2:67]
[24, Camera, moveYaw, 2:1, 2:359]
[24, Timers, reset, 1:[ABC2ShouldRotateCamera]]
[25, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[25, Variables, getBoolean, 1:FreshRun, 3:false]
[25, Timers, isRunning, {false}, 1:ABC2ShouldCheckXP]
[25, GrandExchange, isOpen, {false}]
[25, Debug, debug, 1:[Antiban - Checking xp.]]
[25, Tabs, open, {false}, 1:[SKILLS]]
[25, RS2Widget, hoverWidget, 2:548, 2:80]
[25, Sleeping, sleepRandom, 2:300, 2:900]
[25, Timers, reset, 1:[ABC2ShouldCheckXP]]
[26, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[26, Variables, getBoolean, 1:FreshRun, 3:false]
[26, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[26, Debug, debug, 1:[Antiban - Preparing to check random tab.]]
[26, Variables, generateRandomInteger, 1:ABC2ShouldCheckTabs, 2:1, 2:11]
[27, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[27, Variables, getBoolean, 1:FreshRun, 3:false]
[27, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[27, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:1]
[27, Tabs, isOpen, {false}, 1:[ATTACK]]
[27, GrandExchange, isOpen, {false}]
[27, Debug, debug, 1:[Antiban - Checking attack tab.]]
[27, Tabs, open, {false}, 1:[ATTACK]]
[27, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[28, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[28, Variables, getBoolean, 1:FreshRun, 3:false]
[28, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[28, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:2]
[28, Tabs, isOpen, {false}, 1:[QUEST]]
[28, GrandExchange, isOpen, {false}]
[28, Debug, debug, 1:[Antiban - Checking quest tab.]]
[28, Tabs, open, {false}, 1:[QUEST]]
[28, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[29, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[29, Variables, getBoolean, 1:FreshRun, 3:false]
[29, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[29, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:3]
[29, Tabs, isOpen, {false}, 1:[EQUIPMENT]]
[29, GrandExchange, isOpen, {false}]
[29, Debug, debug, 1:[Antiban - Checking equipment tab.]]
[29, Tabs, open, {false}, 1:[EQUIPMENT]]
[29, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[30, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[30, Variables, getBoolean, 1:FreshRun, 3:false]
[30, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[30, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:4]
[30, Tabs, isOpen, {false}, 1:[PRAYER]]
[30, GrandExchange, isOpen, {false}]
[30, Debug, debug, 1:[Antiban - Checking prayer tab.]]
[30, Tabs, open, {false}, 1:[PRAYER]]
[30, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[31, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[31, Variables, getBoolean, 1:FreshRun, 3:false]
[31, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[31, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:5]
[31, Tabs, isOpen, {false}, 1:[MAGIC]]
[31, GrandExchange, isOpen, {false}]
[31, Debug, debug, 1:[Antiban - Checking magic tab.]]
[31, Tabs, open, {false}, 1:[MAGIC]]
[31, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[32, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[32, Variables, getBoolean, 1:FreshRun, 3:false]
[32, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[32, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:6]
[32, Tabs, isOpen, {false}, 1:[CLANCHAT]]
[32, GrandExchange, isOpen, {false}]
[32, Debug, debug, 1:[Antiban - Checking clanchat tab.]]
[32, Tabs, open, {false}, 1:[CLANCHAT]]
[32, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[33, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[33, Variables, getBoolean, 1:FreshRun, 3:false]
[33, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[33, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:7]
[33, Tabs, isOpen, {false}, 1:[FRIENDS]]
[33, GrandExchange, isOpen, {false}]
[33, Debug, debug, 1:[Antiban - Checking friends list.]]
[33, Tabs, open, {false}, 1:[FRIENDS]]
[33, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[34, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[34, Variables, getBoolean, 1:FreshRun, 3:false]
[34, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[34, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:8]
[34, Tabs, isOpen, {false}, 1:[ACCOUNT_MANAGEMENT]]
[34, GrandExchange, isOpen, {false}]
[34, Debug, debug, 1:[Antiban - Checking account tab.]]
[34, Tabs, open, {false}, 1:[ACCOUNT_MANAGEMENT]]
[34, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[35, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[35, Variables, getBoolean, 1:FreshRun, 3:false]
[35, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[35, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:9]
[35, Tabs, isOpen, {false}, 1:[SETTINGS]]
[35, GrandExchange, isOpen, {false}]
[35, Debug, debug, 1:[Antiban - Checking settings tab.]]
[35, Tabs, open, {false}, 1:[SETTINGS]]
[35, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[36, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[36, Variables, getBoolean, 1:FreshRun, 3:false]
[36, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[36, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:10]
[36, Tabs, isOpen, {false}, 1:[EMOTES]]
[36, GrandExchange, isOpen, {false}]
[36, Debug, debug, 1:[Antiban - Checking emotes tab.]]
[36, Tabs, open, {false}, 1:[EMOTES]]
[36, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[37, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[37, Variables, getBoolean, 1:FreshRun, 3:false]
[37, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[37, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:11]
[37, Tabs, isOpen, {false}, 1:[MUSIC]]
[37, GrandExchange, isOpen, {false}]
[37, Debug, debug, 1:[Antiban - Checking music tab.]]
[37, Tabs, open, {false}, 1:[MUSIC]]
[37, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[38, Debug, comment, 1:[Antiban - Unique]]
[39, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[39, Variables, getBoolean, 1:InMiniBreak, 3:false]
[39, Timers, isRunning, {true}, 1:MiniBreak]
[39, Variables, editBoolean, 1:InMiniBreak, 3:true]
[40, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[40, Variables, getBoolean, 1:InMiniBreak, 3:true]
[40, Timers, isRunning, {false}, 1:MiniBreak]
[40, Variables, editBoolean, 1:InMiniBreak, 3:false]
[41, Variables, getBoolean, 1:NeedToHopWorlds, 3:true]
[41, Bank, isOpen, {false}]
[41, GrandExchange, isOpen, {false}]
[41, Debug, debug, 1:[Preparing to hop worlds.]]
[41, Timers, reset, 1:[UABShouldHopWorlds]]
[41, Variables, editBoolean, 1:NeedToHopWorlds, 3:false]
[41, Worlds, hopToRandomWorld]
[42, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[42, Variables, getBoolean, 1:NeedToHopWorlds, 3:false]
[42, Timers, isRunning, {false}, 1:UABShouldHopWorlds]
[42, Variables, addOr]
[42, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[42, Variables, getBoolean, 1:NeedToHopWorlds, 3:false]
[42, Messages, messageContains, {true}, 1:bot, 1:PLAYER]
[42, GrandExchange, isOpen, {false}]
[42, Bank, isOpen, {false}]
[42, Stores, isOpen, {false}]
[42, Variables, addOr]
[42, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[42, Variables, getBoolean, 1:NeedToHopWorlds, 3:false]
[42, Messages, messageContains, {true}, 1:bot, 1:PLAYER]
[42, Variables, editBoolean, 1:NeedToHopWorlds, 3:true]
[43, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[43, Timers, isRunning, {false}, 1:UABShouldCrazyClick]
[43, GrandExchange, isOpen, {false}]
[43, Bank, isOpen, {false}]
[43, Stores, isOpen, {false}]
[43, Debug, debug, 1:[Antiban - Crazy clicks.]]
[43, Timers, reset, 1:[UABShouldCrazyClick]]
[43, Mouse, moveMouseAndClickMultipleTimes, 2:400, 2:250, 2:1, 2:4, 2:200]
[43, Mouse, moveMouseAndClickMultipleTimes, 2:400, 2:250, 2:1, 2:4, 2:200]
[44, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[44, Timers, isRunning, {false}, 1:UABShouldTakeMiniBreak]
[44, Debug, debug, 1:[Antiban - Taking Mini Break.]]
[44, Timers, reset, 1:[UABShouldTakeMiniBreak]]
[44, Timers, reset, 1:[MiniBreak]]
[45, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[45, Timers, isRunning, {false}, 1:UABShouldInspectLoot]
[45, Debug, debug, 1:[Antiban - Inspecting loot.]]
[45, Timers, reset, 1:[UABShouldInspectLoot]]
[45, Mouse, hoverEntity, 1:Bones, 1:GroundItem]
[45, Mouse, hoverEntity, 1:Big Bones, 1:GroundItem]
[45, Mouse, hoverEntity, 1:Dragon bones, 1:GroundItem]
[45, Mouse, rightClick]
[46, Debug, comment, 1:[Global Timers]]
[47, MyPlayer, isAnimating, {true}]
[47, Timers, reset, 1:[<Global>IsAnimating]]
[48, Variables, getBoolean, 1:IsAnimating, 3:false]
[48, Timers, isRunning, {true}, 1:<Global>IsAnimating]
[48, Variables, editBoolean, 1:IsAnimating, 3:true]
[49, Variables, getBoolean, 1:IsAnimating, 3:true]
[49, Timers, isRunning, {false}, 1:<Global>IsAnimating]
[49, Variables, editBoolean, 1:IsAnimating, 3:false]
[50, Debug, comment, 1:[Global Sleep]]
[51, MyPlayer, isAnimating, {true}]
[51, Sleeping, sleepTeleporting]
[52, Debug, comment, 1:[Script Logic]]
[53, Variables, getBoolean, 1:EnableCraftingGuild, 3:false]
[53, MyPlayer, isExists, {false}]
[53, Skills, getSkillLevel, 1:CRAFTING, 1:>=, 2:40, 3:false]
[53, Variables, editBoolean, 1:EnableCraftingGuild, 3:true]
[54, Variables, getBoolean, 1:EnableCraftingGuild, 3:true]
[54, MyPlayer, isExists, {true}]
[54, Variables, editBoolean, 1:EnableCraftingGuild, 3:false]
[55, Variables, getBoolean, 1:EnableBlueLeather, 3:false]
[55, Worlds, isMembers, {true}]
[55, Variables, editBoolean, 1:EnableBlueLeather, 3:true]
[56, Variables, getBoolean, 1:EnableBlueLeather, 3:true]
[56, Worlds, isMembers, {false}]
[56, Variables, editBoolean, 1:EnableBlueLeather, 3:false]
[57, Variables, getBoolean, 1:EnableLeather, 3:false]
[57, Worlds, isMembers, {false}]
[57, Variables, editBoolean, 1:EnableLeather, 3:true]
[58, Variables, getBoolean, 1:EnableLeather, 3:true]
[58, Worlds, isMembers, {true}]
[58, Variables, editBoolean, 1:EnableLeather, 3:false]
[59, Debug, comment, 1:[Crafting Guild Apron Logic]]
[60, Variables, getBoolean, 1:NeedApron, 3:false]
[60, Equipment, hasGearEquipped, {false}, 1:Brown apron]
[60, Variables, getBoolean, 1:EnableCraftingGuild, 3:true]
[60, Variables, editBoolean, 1:NeedApron, 3:true]
[61, Variables, getBoolean, 1:NeedApron, 3:true]
[61, Variables, getBoolean, 1:EnableCraftingGuild, 3:true]
[61, Equipment, hasGearEquipped, {true}, 1:Brown apron]
[61, Variables, addOr]
[61, Variables, getBoolean, 1:NeedApron, 3:true]
[61, Variables, getBoolean, 1:EnableCraftingGuild, 3:false]
[61, Variables, editBoolean, 1:NeedApron, 3:false]
[62, Debug, comment, 1:[Banking Logic]]
[63, Variables, getBoolean, 1:NeedToBank, 3:false]
[63, Inventory, getAmount, 1:Coins, 2:10000, 1:<=]
[63, Variables, addOr]
[63, Variables, getBoolean, 1:NeedToBank, 3:false]
[63, Variables, getBoolean, 1:EnableCraftingGuild, 3:true]
[63, Variables, getBoolean, 1:NeedApron, 3:true]
[63, Variables, addOr]
[63, Variables, getBoolean, 1:NeedToBank, 3:false]
[63, Variables, getBoolean, 1:EnableBlueLeather, 3:true]
[63, Inventory, contains, {false}, 2:1751]
[63, Variables, addOr]
[63, Variables, getBoolean, 1:NeedToBank, 3:false]
[63, Variables, getBoolean, 1:EnableLeather, 3:true]
[63, Inventory, contains, {false}, 2:1739]
[63, Variables, editBoolean, 1:NeedToBank, 3:true]
[64, Variables, getBoolean, 1:NeedToBank, 3:true]
[64, Variables, getBoolean, 1:EnableBlueLeather, 3:true]
[64, Variables, getBoolean, 1:EnableCraftingGuild, 3:true]
[64, Variables, getBoolean, 1:NeedApron, 3:false]
[64, Inventory, getAmount, 1:Coins, 2:10001, 1:>=]
[64, Inventory, contains, {true}, 2:1751]
[64, Variables, addOr]
[64, Variables, getBoolean, 1:NeedToBank, 3:true]
[64, Variables, getBoolean, 1:EnableBlueLeather, 3:true]
[64, Variables, getBoolean, 1:EnableCraftingGuild, 3:false]
[64, Inventory, getAmount, 1:Coins, 2:10001, 1:>=]
[64, Inventory, contains, {true}, 2:1751]
[64, Variables, addOr]
[64, Variables, getBoolean, 1:NeedToBank, 3:true]
[64, Variables, getBoolean, 1:EnableLeather, 3:true]
[64, Variables, getBoolean, 1:EnableCraftingGuild, 3:false]
[64, Inventory, contains, {true}, 2:1739]
[64, Variables, editBoolean, 1:NeedToBank, 3:false]
[65, Debug, comment, 1:[GE - Disengage Logic]]
[66, Variables, getBoolean, 1:NeedToRestock, 3:true]
[66, Variables, getBoolean, 1:RestockApron, 3:false]
[66, Variables, getBoolean, 1:RestockBlueDragonhide, 3:false]
[66, Variables, getBoolean, 1:RestockCowhide, 3:false]
[66, Variables, editBoolean, 1:NeedToRestock, 3:false]
[67, Variables, getBoolean, 1:RestockApron, 3:true]
[67, Inventory, contains, {true}, 1:Brown apron]
[67, Variables, addOr]
[67, Variables, getBoolean, 1:RestockApron, 3:true]
[67, Bank, contains, {true}, 1:Brown apron]
[67, Variables, addOr]
[67, Variables, getBoolean, 1:RestockApron, 3:true]
[67, Equipment, hasGearEquipped, {true}, 1:Brown apron]
[67, Variables, editBoolean, 1:RestockApron, 3:false]
[68, Variables, getBoolean, 1:RestockBlueDragonhide, 3:true]
[68, Inventory, contains, {true}, 1:Blue dragonhide]
[68, Variables, addOr]
[68, Variables, getBoolean, 1:RestockBlueDragonhide, 3:true]
[68, Bank, contains, {true}, 1:Blue dragonhide]
[68, Variables, editBoolean, 1:RestockBlueDragonhide, 3:false]
[69, Variables, getBoolean, 1:RestockCowhide, 3:true]
[69, Inventory, contains, {true}, 1:Cowhide]
[69, Variables, addOr]
[69, Variables, getBoolean, 1:RestockCowhide, 3:true]
[69, Bank, contains, {true}, 1:Cowhide]
[69, Variables, editBoolean, 1:RestockCowhide, 3:false]
[70, Debug, comment, 1:[GE - Teleport to GE]]
[71, Variables, getBoolean, 1:NeedToRestock, 3:true]
[71, MyPlayer, areaContainsPlayer, {false}, 1:[VarrockPlusEdgeville]]
[71, Inventory, contains, {true}, 1:Varrock teleport]
[71, Inventory, interactWith, 1:Varrock teleport, 1:Break]
[72, Debug, comment, 1:[GE - Walk to GE]]
[73, Variables, getBoolean, 1:NeedToRestock, 3:true]
[73, Bank, isOpen, {false}]
[73, MyPlayer, areaContainsPlayer, {false}, 1:[GrandExchange]]
[73, Inventory, contains, {false}, 1:Varrock teleport]
[73, Variables, addOr]
[73, Variables, getBoolean, 1:NeedToRestock, 3:true]
[73, MyPlayer, areaContainsPlayer, {true}, 1:[VarrockPlusEdgeville]]
[73, MyPlayer, areaContainsPlayer, {false}, 1:[GrandExchange]]
[73, Inventory, contains, {true}, 1:Varrock teleport]
[73, WalkTo, walkToPosition, 1:GrandExchange, 3:true, 3:false, 3:false, 3:false, 3:false, 3:false, 3:false, 3:false]
[74, Debug, comment, 1:[GE - Open Bank]]
[75, Variables, getBoolean, 1:NeedToRestock, 3:true]
[75, Bank, isOpen, {false}]
[75, GrandExchange, isOpen, {false}]
[75, MyPlayer, areaContainsPlayer, {true}, 1:[GrandExchange]]
[75, Variables, getInteger, 1:RestockStage, 1:<=, 2:1]
[75, Variables, addOr]
[75, Variables, getBoolean, 1:NeedToRestock, 3:true]
[75, Bank, isOpen, {false}]
[75, GrandExchange, isOpen, {false}]
[75, NPC, isExists, {true}, 1:[Grand Exchange Clerk]]
[75, Variables, getInteger, 1:RestockStage, 1:<=, 2:1]
[75, Variables, operationInteger, 1:RestockStage, 1:Set as, 2:1]
[75, Bank, open]
[76, Debug, comment, 1:[GE - Bank Actions]]
[77, Variables, getBoolean, 1:NeedToRestock, 3:true]
[77, MyPlayer, areaContainsPlayer, {true}, 1:[GrandExchange]]
[77, Variables, getInteger, 1:RestockStage, 1:<=, 2:1]
[77, Bank, isOpen, {true}]
[77, Variables, addOr]
[77, Variables, getBoolean, 1:NeedToRestock, 3:true]
[77, MyPlayer, areaContainsPlayer, {true}, 1:[GrandExchange]]
[77, Inventory, isFull, {true}]
[77, Bank, isOpen, {true}]
[77, Variables, operationInteger, 1:RestockStage, 1:Set as, 2:2]
[77, Timers, reset, 1:[RestockReset]]
[77, Bank, depositAll]
[78, Variables, getBoolean, 1:NeedToRestock, 3:true]
[78, MyPlayer, areaContainsPlayer, {true}, 1:[GrandExchange]]
[78, Bank, isOpen, {true}]
[78, Bank, isNoted, {false}]
[78, Bank, enableNoted, {true}]
[79, Variables, getBoolean, 1:NeedToRestock, 3:true]
[79, MyPlayer, areaContainsPlayer, {true}, 1:[GrandExchange]]
[79, Bank, isOpen, {true}]
[79, Bank, isNoted, {true}]
[79, Bank, containsAny, {true}, 1:Coins, 1:Blue dragon leather, 1:Leather, 1:Varrock teleport]
[79, Bank, withdrawAllX, 1:Coins, 1:Blue dragon leather, 1:Leather, 1:Varrock teleport]
[80, Variables, getBoolean, 1:NeedToRestock, 3:true]
[80, MyPlayer, areaContainsPlayer, {true}, 1:[GrandExchange]]
[80, Bank, containsAny, {false}, 1:Coins, 1:Blue dragon leather, 1:Leather, 1:Varrock teleport]
[80, Variables, getInteger, 1:RestockStage, 1:==, 2:2]
[80, Bank, close]
[81, Debug, comment, 1:[Reset GE Interactions]]
[82, Variables, getInteger, 1:RestockStage, 1:==, 2:2]
[82, Timers, isRunning, {false}, 1:RestockReset]
[82, Variables, operationInteger, 1:RestockStage, 1:Set as, 2:0]
[83, Debug, comment, 1:[GE - Open Grand Exchange]]
[84, Variables, getBoolean, 1:NeedToRestock, 3:true]
[84, GrandExchange, isOpen, {false}]
[84, Bank, isOpen, {false}]
[84, Variables, getInteger, 1:RestockStage, 1:==, 2:2]
[84, GrandExchange, open]
[85, Debug, comment, 1:[GE - Threaded Collect Items]]
[86, GrandExchange, isOpen, {true}]
[86, RS2Widget, isVisibleContainingText, {true}, 1:Collect, 3:false]
[86, GrandExchange, collect]
[86, Sleeping, sleep, 2:[2800]]
[87, Debug, comment, 1:[GE - Threaded Anti Stuck]]
[88, GrandExchange, isOpen, {true}]
[88, GrandExchange, isBuyOfferOpen, {true}]
[88, Variables, addOr]
[88, GrandExchange, isOpen, {true}]
[88, GrandExchange, isSellOfferOpen, {true}]
[88, RS2Widget, clickWidget, 2:465, 2:4]
[89, Debug, comment, 1:[GE - Sell Items]]
[90, Inventory, contains, {true}, 1:Blue dragon leather]
[90, GrandExchange, isOpen, {true}]
[90, GrandExchange, isBuyOfferOpen, {false}]
[90, GrandExchange, isSellOfferOpen, {false}]
[90, GrandExchange, sellDynamic, 2:2506, 2:0, 1:Low, 2:15, 1:negative, 3:true]
[90, Sleeping, sleep, 2:[1800]]
[91, Inventory, contains, {false}, 1:Blue dragon leather]
[91, Inventory, contains, {true}, 1:Leather]
[91, GrandExchange, isOpen, {true}]
[91, GrandExchange, isBuyOfferOpen, {false}]
[91, GrandExchange, isSellOfferOpen, {false}]
[91, GrandExchange, sellDynamic, 2:1742, 2:0, 1:Low, 2:15, 1:negative, 3:true]
[91, Sleeping, sleep, 2:[1800]]
[92, Debug, comment, 1:[GE - Buy Items]]
[93, Variables, getBoolean, 1:EnableBlueLeather, 3:true]
[93, Variables, getBoolean, 1:RestockBlueDragonhide, 3:true]
[93, Inventory, contains, {false}, 1:Blue dragon leather]
[93, Inventory, contains, {false}, 1:Leather]
[93, Inventory, contains, {false}, 1:Blue dragonhide]
[93, GrandExchange, isOpen, {true}]
[93, GrandExchange, isEmpty, {true}]
[93, Inventory, getAmount, 1:Coins, 2:2299999, 1:<=]
[93, GrandExchange, buyDynamic, 2:1751, 1:Blue dragonhide, 2:500, 1:Default, 2:15, 1:positive]
[93, Sleeping, sleep, 2:[1800]]
[94, Variables, getBoolean, 1:EnableBlueLeather, 3:true]
[94, Variables, getBoolean, 1:RestockBlueDragonhide, 3:true]
[94, Inventory, contains, {false}, 1:Blue dragon leather]
[94, Inventory, contains, {false}, 1:Leather]
[94, Inventory, contains, {false}, 1:Blue dragonhide]
[94, GrandExchange, isOpen, {true}]
[94, GrandExchange, isEmpty, {true}]
[94, Inventory, getAmount, 1:Coins, 2:2300000, 1:>=]
[94, Inventory, getAmount, 1:Coins, 2:4599999, 1:<=]
[94, GrandExchange, buyDynamic, 2:1751, 1:Blue dragonhide, 2:1000, 1:Default, 2:15, 1:positive]
[94, Sleeping, sleep, 2:[1800]]
[95, Variables, getBoolean, 1:EnableBlueLeather, 3:true]
[95, Variables, getBoolean, 1:RestockBlueDragonhide, 3:true]
[95, Inventory, contains, {false}, 1:Blue dragon leather]
[95, Inventory, contains, {false}, 1:Leather]
[95, Inventory, contains, {false}, 1:Blue dragonhide]
[95, GrandExchange, isOpen, {true}]
[95, GrandExchange, isEmpty, {true}]
[95, Inventory, getAmount, 1:Coins, 2:4600000, 1:>=]
[95, GrandExchange, buyDynamic, 2:1751, 1:Blue dragonhide, 2:2000, 1:Default, 2:15, 1:positive]
[95, Sleeping, sleep, 2:[1800]]
[96, Variables, getBoolean, 1:EnableLeather, 3:true]
[96, Variables, getBoolean, 1:RestockCowhide, 3:true]
[96, Inventory, contains, {false}, 1:Blue dragon leather]
[96, Inventory, contains, {false}, 1:Leather]
[96, Inventory, contains, {false}, 1:Cowhide]
[96, GrandExchange, isOpen, {true}]
[96, GrandExchange, isEmpty, {true}]
[96, GrandExchange, buyDynamic, 2:1739, 1:Cowhide, 2:2000, 1:Default, 2:25, 1:positive]
[96, Sleeping, sleep, 2:[1800]]
[97, Variables, getBoolean, 1:RestockApron, 3:true]
[97, Inventory, contains, {false}, 1:Blue dragon leather]
[97, Inventory, contains, {false}, 1:Leather]
[97, Inventory, contains, {false}, 1:Brown apron]
[97, GrandExchange, isOpen, {true}]
[97, GrandExchange, isEmpty, {true}]
[97, GrandExchange, buyDynamic, 2:1757, 1:Brown apron, 2:1, 1:Default, 2:50, 1:positive]
[97, Sleeping, sleep, 2:[1800]]
[98, Debug, comment, 1:[Walk to Nearest Bank]]
[99, Variables, getBoolean, 1:NeedToBank, 3:true]
[99, Variables, getBoolean, 1:EnableCraftingGuild, 3:true]
[99, Variables, getBoolean, 1:NeedApron, 3:true]
[99, Bank, isAtClosestBank, {false}]
[99, WalkTo, walkToClosestBank]
[100, Debug, comment, 1:[Walk to Crafting Guild]]
[101, Variables, getBoolean, 1:NeedToBank, 3:true]
[101, Variables, getBoolean, 1:NeedToRestock, 3:false]
[101, Variables, getBoolean, 1:EnableCraftingGuild, 3:true]
[101, Variables, getBoolean, 1:NeedApron, 3:false]
[101, MyPlayer, areaContainsPlayer, {false}, 1:[CraftingGuild1F]]
[101, WalkTo, walkToPosition, 1:CraftingGuild1F, 3:true, 3:false, 3:false, 3:false, 3:false, 3:false, 3:false, 3:false]
[102, Debug, comment, 1:[Walk to Al Kharid Bank]]
[103, Variables, getBoolean, 1:NeedToBank, 3:true]
[103, Variables, getBoolean, 1:NeedToRestock, 3:false]
[103, Variables, getBoolean, 1:EnableCraftingGuild, 3:false]
[103, MyPlayer, areaContainsPlayer, {false}, 1:[BankAlKharid]]
[103, WalkTo, walkToPosition, 1:BankAlKharid, 3:true, 3:false, 3:false, 3:false, 3:false, 3:false, 3:false, 3:false]
[104, Debug, comment, 1:[Banking - Open Bank]]
[105, Variables, getBoolean, 1:NeedToBank, 3:true]
[105, Variables, getBoolean, 1:NeedToRestock, 3:false]
[105, Bank, isAtClosestBank, {true}]
[105, Bank, isOpen, {false}]
[105, Variables, addOr]
[105, Variables, getBoolean, 1:NeedToBank, 3:true]
[105, Variables, getBoolean, 1:NeedToRestock, 3:false]
[105, MyPlayer, getDistanceTo, 1:Banker, 1:NPC, 1:<=, 2:11, 3:true]
[105, Bank, isOpen, {false}]
[105, Variables, addOr]
[105, Variables, getBoolean, 1:NeedToBank, 3:true]
[105, Variables, getBoolean, 1:NeedToRestock, 3:false]
[105, RS2Object, isExists, {true}, 1:[Bank chest]]
[105, Bank, isOpen, {false}]
[105, Variables, generateRandomInteger, 1:UABShouldBankAFK, 2:1, 2:23]
[105, Bank, open]
[106, Debug, comment, 1:[Bank AFK]]
[107, Bank, isOpen, {true}]
[107, Variables, getInteger, 1:UABShouldBankAFK, 1:==, 2:23]
[107, Variables, operationInteger, 1:UABShouldBankAFK, 1:Set as, 2:0]
[107, Mouse, moveOutsideScreen]
[107, Sleeping, sleepRandom, 2:12811, 2:37104]
[108, Debug, comment, 1:[Banking - Restocking Checks]]
[109, Variables, getBoolean, 1:NeedToBank, 3:true]
[109, Variables, getBoolean, 1:RestockApron, 3:false]
[109, Variables, getBoolean, 1:EnableCraftingGuild, 3:true]
[109, Bank, isOpen, {true}]
[109, Inventory, contains, {false}, 1:Brown apron]
[109, Bank, contains, {false}, 1:Brown apron]
[109, Equipment, hasGearEquipped, {false}, 1:Brown apron]
[109, Variables, editBoolean, 1:NeedToRestock, 3:true]
[109, Variables, editBoolean, 1:RestockApron, 3:true]
[110, Variables, getBoolean, 1:NeedToBank, 3:true]
[110, Variables, getBoolean, 1:EnableBlueLeather, 3:true]
[110, Variables, getBoolean, 1:RestockBlueDragonhide, 3:false]
[110, Bank, isOpen, {true}]
[110, Inventory, contains, {false}, 1:Blue dragonhide]
[110, Bank, contains, {false}, 1:Blue dragonhide]
[110, Variables, editBoolean, 1:NeedToRestock, 3:true]
[110, Variables, editBoolean, 1:RestockBlueDragonhide, 3:true]
[111, Variables, getBoolean, 1:NeedToBank, 3:true]
[111, Variables, getBoolean, 1:EnableLeather, 3:true]
[111, Variables, getBoolean, 1:RestockCowhide, 3:false]
[111, Bank, isOpen, {true}]
[111, Bank, contains, {false}, 1:Cowhide]
[111, Inventory, contains, {false}, 1:Cowhide]
[111, Variables, editBoolean, 1:NeedToRestock, 3:true]
[111, Variables, editBoolean, 1:RestockCowhide, 3:true]
[112, Debug, comment, 1:[Banking - Deposit Inventory]]
[113, Variables, getBoolean, 1:NeedToBank, 3:true]
[113, Variables, getBoolean, 1:NeedToRestock, 3:false]
[113, Variables, getBoolean, 1:EnableBlueLeather, 3:true]
[113, Inventory, containsAnyOtherThan, 2:995, 2:1751]
[113, Bank, isOpen, {true}]
[113, Variables, addOr]
[113, Variables, getBoolean, 1:NeedToBank, 3:true]
[113, Variables, getBoolean, 1:NeedToRestock, 3:false]
[113, Variables, getBoolean, 1:EnableLeather, 3:true]
[113, Inventory, containsAnyOtherThan, 2:995, 2:1739]
[113, Bank, isOpen, {true}]
[113, Variables, addOr]
[113, Variables, getBoolean, 1:NeedToBank, 3:true]
[113, Variables, getBoolean, 1:NeedToRestock, 3:false]
[113, Inventory, contains, {false}, 1:Coins]
[113, Bank, isOpen, {true}]
[113, Inventory, isFull, {true}]
[113, Bank, depositAllExcept, 1:Coins]
[114, Debug, comment, 1:[Restocking - Withdraw Varrock Teleport]]
[115, Variables, getBoolean, 1:NeedToRestock, 3:true]
[115, MyPlayer, areaContainsPlayer, {false}, 1:[VarrockPlusEdgeville]]
[115, Bank, isOpen, {true}]
[115, Inventory, isFull, {true}]
[115, Bank, depositAllWornItems]
[116, Variables, getBoolean, 1:NeedToRestock, 3:true]
[116, MyPlayer, areaContainsPlayer, {false}, 1:[VarrockPlusEdgeville]]
[116, Bank, isOpen, {true}]
[116, Inventory, isFull, {false}]
[116, Bank, contains, {true}, 1:Varrock teleport]
[116, Bank, withdrawAll, 1:[Varrock teleport]]
[117, Variables, getBoolean, 1:NeedToRestock, 3:true]
[117, MyPlayer, areaContainsPlayer, {false}, 1:[VarrockPlusEdgeville]]
[117, Bank, isOpen, {true}]
[117, Bank, contains, {false}, 1:Varrock teleport]
[117, Bank, close]
[118, Debug, comment, 1:[Banking - Withdraw Apron]]
[119, Variables, getBoolean, 1:NeedToBank, 3:true]
[119, Variables, getBoolean, 1:NeedToRestock, 3:false]
[119, Variables, getBoolean, 1:NeedApron, 3:true]
[119, Inventory, contains, {false}, 1:Brown apron]
[119, Bank, contains, {true}, 1:Brown apron]
[119, Bank, isOpen, {true}]
[119, Bank, withdrawX, 1:Brown apron, 2:1]
[119, Sleeping, sleep, 2:[1800]]
[120, Debug, comment, 1:[Equip Apron]]
[121, Variables, getBoolean, 1:NeedApron, 3:true]
[121, Inventory, contains, {true}, 1:Brown apron]
[121, Debug, comment, 1:Withdraw Coins]
[121, Inventory, interactWith, 1:Brown apron, 1:Wear]
[122, Variables, getBoolean, 1:NeedToBank, 3:true]
[122, Variables, getBoolean, 1:NeedToRestock, 3:false]
[122, Variables, getBoolean, 1:InMiniBreak, 3:false]
[122, Bank, contains, {true}, 1:Coins]
[122, Inventory, isFull, {false}]
[122, Bank, withdrawAll, 1:Coins]
[123, Debug, comment, 1:[Withdraw blue dragonhide]]
[124, Variables, getBoolean, 1:NeedToBank, 3:true]
[124, Variables, getBoolean, 1:EnableBlueLeather, 3:true]
[124, Variables, getBoolean, 1:NeedToRestock, 3:false]
[124, Variables, getBoolean, 1:InMiniBreak, 3:false]
[124, Inventory, contains, {true}, 1:Coins]
[124, Bank, isNoted, {false}]
[124, Inventory, isFull, {false}]
[124, Bank, withdrawAll, 1:[Blue dragonhide]]
[125, Debug, comment, 1:[Withdraw Cowhide]]
[126, Variables, getBoolean, 1:NeedToBank, 3:true]
[126, Variables, getBoolean, 1:EnableLeather, 3:true]
[126, Variables, getBoolean, 1:NeedToRestock, 3:false]
[126, Variables, getBoolean, 1:InMiniBreak, 3:false]
[126, Inventory, contains, {true}, 1:Coins]
[126, Bank, isNoted, {false}]
[126, Inventory, isFull, {false}]
[126, Bank, withdrawAll, 1:[Cowhide]]
[127, Debug, comment, 1:[Al Kharid - Walk to Tanner]]
[128, Variables, getBoolean, 1:NeedToBank, 3:false]
[128, Variables, getBoolean, 1:NeedToRestock, 3:false]
[128, MyPlayer, areaContainsPlayer, {false}, 1:[TannerAlKharid]]
[128, Variables, getBoolean, 1:InMiniBreak, 3:false]
[128, RS2Widget, isVisibleContainingText, {false}, 1:What hides, 3:false]
[128, WalkTo, walkToPosition, 1:TannerAlKharid, 3:true, 3:false, 3:false, 3:false, 3:false, 3:false, 3:false, 3:false]
[129, Debug, comment, 1:Antiban - Trade Delay]
[130, MyPlayer, areaContainsPlayer, {true}, 1:TannerAlKharid]
[130, Timers, isRunning, {false}, 1:UABTannerInteractDelay]
[130, Variables, addOr]
[130, MyPlayer, getDistanceTo, 1:Ellis, 1:NPC, 1:<=, 2:12, 3:true]
[130, Timers, isRunning, {false}, 1:UABTannerInteractDelay]
[130, Sleeping, sleepRandom, 2:7420, 2:21848]
[130, Timers, reset, 1:UABTannerInteractDelay]
[131, Debug, comment, 1:[Al Kharid - Open Tanner Shop]]
[132, Variables, getBoolean, 1:NeedToBank, 3:false]
[132, Variables, getBoolean, 1:NeedToRestock, 3:false]
[132, Variables, getBoolean, 1:InMiniBreak, 3:false]
[132, MyPlayer, areaContainsPlayer, {true}, 1:[TannerAlKharid]]
[132, RS2Widget, isVisibleContainingText, {false}, 1:What hides, 3:false]
[132, Variables, addOr]
[132, Variables, getBoolean, 1:NeedToBank, 3:false]
[132, Variables, getBoolean, 1:NeedToRestock, 3:false]
[132, Variables, getBoolean, 1:InMiniBreak, 3:false]
[132, MyPlayer, getDistanceTo, 1:Ellis, 1:NPC, 1:<=, 2:12, 3:true]
[132, RS2Widget, isVisibleContainingText, {false}, 1:What hides, 3:false]
[132, NPC, interactWith, 1:Ellis, 1:Trade, 3:true, 3:false, 3:true, 3:false, 3:false]
[133, Debug, comment, 1:[Crafting Guild - Open Tanner Shop]]
[134, Debug, comment, 1:[Tan Blue Leather]]
[135, Variables, getBoolean, 1:EnableBlueLeather, 3:true]
[135, Variables, getBoolean, 1:NeedToBank, 3:false]
[135, Variables, getBoolean, 1:NeedToRestock, 3:false]
[135, RS2Widget, isVisibleContainingText, {true}, 1:What hides, 3:false]
[135, RS2Widget, interactWithWidgetContainingText, 1:Blue d'hide, 1:Tan All, 3:false]
[135, Sleeping, sleep, 2:[240]]
[136, Debug, comment, 1:[Tan Leather]]
[137, Variables, getBoolean, 1:EnableLeather, 3:true]
[137, Variables, getBoolean, 1:NeedToBank, 3:false]
[137, Variables, getBoolean, 1:NeedToRestock, 3:false]
[137, RS2Widget, isVisibleContainingText, {true}, 1:What hides, 3:false]
[137, RS2Widget, interactWithWidgetContainingText, 1:Soft leather, 1:Tan All, 3:false]
[137, Sleeping, sleep, 2:[240]]
[138, Debug, comment, 1:[End]]
