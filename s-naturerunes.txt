<Script>FushigiBot:f(x) Fairy Nature:1.0
<Description>Crafts Nature runes using the Fairy teleport method. No pouches support. Requirements: 65 Combat, 42 Runecrafting, Fairy Rings unlocked, Pure essence, Ring of Duelings(8), Necklace of passage(5), Catalytic or Nature tiara, Dramen staff.
<Integer>ABC2GenerateTabSwitchPreference:0
<Integer>ABC2ShouldMoveToAnticipated:0
<Integer>UABZoomSelector:0
<Integer>ABC2GenerateEatAtHP:0
<Integer>UABNatureRuinsAFK:0
<Integer>UABBankAFK:0
<Integer>ABC2ShouldLeaveGame:0
<Integer>ABC2ShouldCheckTabs:0
<Integer>UABZoomMoveMouse:0
<Integer>ABC2GenerateRunActivation:0
<Integer>ABC2GenerateReactionTime:0
<Integer>ABC2GenerateOpenBankPreference:0
<Integer>UABZoomStopper:0
<Integer>FirstDeathStage:0
<Integer>ABC2ShouldHoverNextTarget:0
<Boolean>NeedDramenStaff:false
<Boolean>NeedRingOfDueling:false
<Boolean>IsAnimating:false
<Boolean>IsDead:false
<Boolean>InBreak:true
<Boolean>FreshRun:true
<Boolean>InMiniBreak:false
<Boolean>EnableDeathHandler:true
<Boolean>NeedToHopWorlds:false
<Boolean>EnableCustomBreaks:true
<Boolean>EnableUniqueAntiban:true
<Boolean>NeedNecklaceOfPassage:false
<Boolean>NeedToBank:false
<Boolean>NeedToRestock:false
<Boolean>EnableTribotAntiban:true
<Boolean>NeedPureEssence:false
<Boolean>FirstDeath:false
<Boolean>NeedTiara:false
<Position>BankVarrockWest:3183,3440,0
<Position>FeroxEnclave:3134,3629,0
<Position>GrandExchange:3164,3485,0
<Position>FairyRing:3110,3149,0
<Position>NatureRuins:2864,3016,0
<Position>BankFaladorEast:3012,3355,0
<Area>BankVarrockWest:3185,3444,3182,3436,0
<Area>NatureAltar:2386,4854,2415,4826,0
<Area>NatureRuins:2863,3018,2867,3014,0
<Area>BankFaladorEast:3010,3356,3015,3355,0
<Poly Area>WizardsTower:Areaarea=newArea(newint{{3112,3208},{3116,3208},{3116,3175},{3125,3175},{3126,3143},{3092,3143},{3092,3177},{3112,3177}});:0
<Poly Area>FeroxEnclave:Areaarea=newArea(newint{{3146,3645},{3145,3646},{3139,3646},{3138,3645},{3138,3640},{3125,3640},{3125,3622},{3126,3622},{3126,3618},{3144,3618},{3144,3626},{3156,3626},{3156,3647},{3148,3647},{3148,3645}});:0
<Poly Area>Karamja:Areaarea=newArea(newint{{2816,2974},{2794,2974},{2801,3056},{2901,3056},{2897,3008},{2822,3007},{2816,3002}});:0
<Poly Area>GrandExchange:Areaarea=newArea(newint{{3161,3500},{3155,3494},{3155,3486},{3161,3480},{3169,3480},{3175,3486},{3175,3494},{3169,3500}});:0
<Timer><Global>IsAnimating:6000,true,2000,false
<Timer>UABShouldCrazyClick:3360000,true,960000,true
<Timer>UABShouldTakeMiniBreak:1920000,true,1080000,true
<Timer>ABC2ShouldExamineEntity:3360000,true,1080000,true
<Timer>MiniBreak:22000,true,48000,false
<Timer>Botting:1080000,true,480000,true
<Timer>ABC2ShouldCheckTabs:900000,true,420000,true
<Timer>ABC2ShouldMoveMouse:300000,true,240000,true
<Timer>PreparingForBreak:10000,false,0,false
<Timer>UABShouldReplyToPlayer:5400000,false,0,true
<Timer>UABShouldHopWorlds:2520000,true,840000,true
<Timer>ABC2ShouldCheckXP:2520000,true,960000,true
<Timer>UABShouldInspectLoot:2160000,true,1320000,true
<Timer>UABShouldRandomZoom:1800000,true,900000,true
<Timer>ABC2ShouldPickupMouse:240000,true,180000,true
<Timer>ABC2ShouldRightClick:1140000,true,420000,true
<Timer>ABC2ShouldRotateCamera:1560000,true,660000,true
<User Input>Script Settings:EnableDeathHandler|Death Handler|true/~/EnableCustomBreaks|Custom Breaks|true/~/EnableTribotAntiban|Tribot ABC2 (Antiban)|true/~/EnableUniqueAntiban|Unique ABC (Antiban)|true/~/
[1, Debug, comment, 1:[Start]]
[2, Variables, getBoolean, 1:FreshRun, 3:true]
[2, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[2, Timers, reset, 1:[ABC2ShouldCheckXP]]
[2, Timers, reset, 1:[ABC2ShouldExamineEntity]]
[2, Timers, reset, 1:[ABC2ShouldMoveMouse]]
[2, Timers, reset, 1:[ABC2ShouldPickupMouse]]
[2, Timers, reset, 1:[ABC2ShouldRightClick]]
[2, Timers, reset, 1:[ABC2ShouldRotateCamera]]
[2, Timers, reset, 1:[UABShouldCrazyClick]]
[2, Timers, reset, 1:[UABShouldHopWorlds]]
[2, Timers, reset, 1:[UABShouldInspectLoot]]
[2, Timers, reset, 1:[UABShouldTakeMiniBreak]]
[2, Timers, reset, 1:[UABShouldRandomZoom]]
[2, Variables, editBoolean, 1:FreshRun, 3:false]
[3, Debug, comment, 1:[First Death Handler]]
[4, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[4, Variables, getBoolean, 1:IsDead, 3:true]
[4, NPC, isExists, {false}, 1:[Death]]
[4, Debug, debug, 1:[Successfully left Death's Lair.]]
[4, Variables, editBoolean, 1:IsDead, 3:false]
[4, Variables, editBoolean, 1:FirstDeath, 3:false]
[5, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[5, Variables, getBoolean, 1:IsDead, 3:false]
[5, NPC, isExists, {true}, 1:[Death]]
[5, Debug, debug, 1:[Oh no. You are dead.]]
[5, Variables, editBoolean, 1:IsDead, 3:true]
[6, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[6, Variables, getBoolean, 1:IsDead, 3:true]
[6, Variables, getBoolean, 1:FirstDeath, 3:false]
[6, Debug, debug, 1:[Trying to leave Death's Lair.]]
[6, RS2Object, interactWith, 1:Portal, 1:Use, 3:true, 3:false, 3:true, 3:false, 3:false]
[7, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[7, Variables, getBoolean, 1:FirstDeath, 3:true]
[7, RS2Widget, isVisibleContainingText, {true}, 1:<str>Tell me about gravestones again.</str>, 3:false]
[7, RS2Widget, isVisibleContainingText, {true}, 1:<str>How do I pay a gravestone fee?</str>, 3:false]
[7, RS2Widget, isVisibleContainingText, {true}, 1:<str>How long do I have to return to my gravestone?</str>, 3:false]
[7, RS2Widget, isVisibleContainingText, {true}, 1:<str>How do I know what will happen to my items when I die?</str>, 3:false]
[7, Variables, editBoolean, 1:FirstDeath, 3:false]
[8, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[8, Variables, getBoolean, 1:IsDead, 3:true]
[8, Variables, getBoolean, 1:FirstDeath, 3:false]
[8, RS2Widget, isVisibleContainingText, {true}, 1:I haven't finished talking to you yet, 3:false]
[8, Variables, editBoolean, 1:FirstDeath, 3:true]
[9, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[9, Variables, getBoolean, 1:IsDead, 3:true]
[9, Variables, getBoolean, 1:FirstDeath, 3:true]
[9, Dialogues, isInDialogue, {false}]
[9, NPC, interactWith, 1:Death, 1:Talk-to, 3:true, 3:false, 3:true, 3:false, 3:false]
[10, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[10, Variables, getBoolean, 1:IsDead, 3:true]
[10, Dialogues, isInDialogue, {true}]
[10, Dialogues, clickContinue]
[11, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[11, Variables, getBoolean, 1:FirstDeath, 3:true]
[11, RS2Widget, isVisibleContainingText, {false}, 1:<str>Tell me about gravestones again.</str>, 3:false]
[11, RS2Widget, isVisibleContainingText, {true}, 1:Tell me about gravestones again., 3:true]
[11, RS2Widget, interactWithWidgetContainingText, 1:Tell me about gravestones again., 1:Continue, 3:false]
[12, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[12, Variables, getBoolean, 1:FirstDeath, 3:true]
[12, RS2Widget, isVisibleContainingText, {false}, 1:<str>How do I pay a gravestone fee?</str>, 3:false]
[12, RS2Widget, isVisibleContainingText, {true}, 1:How do I pay a gravestone fee?, 3:true]
[12, RS2Widget, interactWithWidgetContainingText, 1:How do I pay a gravestone fee?, 1:Continue, 3:false]
[13, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[13, Variables, getBoolean, 1:FirstDeath, 3:true]
[13, RS2Widget, isVisibleContainingText, {false}, 1:<str>How long do I have to return to my gravestone?</str>, 3:false]
[13, RS2Widget, isVisibleContainingText, {true}, 1:How long do I have to return to my gravestone?, 3:false]
[13, RS2Widget, interactWithWidgetContainingText, 1:How long do I have to return to my gravestone?, 1:Continue, 3:false]
[14, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[14, Variables, getBoolean, 1:FirstDeath, 3:true]
[14, RS2Widget, isVisibleContainingText, {false}, 1:<str>How do I know what will happen to my items when I die?</str>, 3:false]
[14, RS2Widget, isVisibleContainingText, {true}, 1:How do I know what will happen to my items when I die?, 3:false]
[14, RS2Widget, interactWithWidgetContainingText, 1:How do I know what will happen to my items when I die?, 1:Continue, 3:false]
[15, Debug, comment, 1:[Breaks]]
[20, Debug, comment, 1:[Antiban - Tribot ABC2]]
[21, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[21, Variables, getBoolean, 1:FreshRun, 3:false]
[21, Timers, isRunning, {false}, 1:ABC2ShouldPickupMouse]
[21, Debug, debug, 1:[Antiban - Pretending to pick up mouse.]]
[21, Mouse, moveMouseSlightly, 2:[25]]
[21, Timers, reset, 1:[ABC2ShouldPickupMouse]]
[22, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[22, Variables, getBoolean, 1:FreshRun, 3:false]
[22, Timers, isRunning, {false}, 1:ABC2ShouldMoveMouse]
[22, Debug, debug, 1:[Antiban - Moving mouse.]]
[22, Mouse, moveMouse, 2:400, 2:250, 2:175]
[22, Timers, reset, 1:[ABC2ShouldMoveMouse]]
[23, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[23, Variables, getBoolean, 1:FreshRun, 3:false]
[23, Timers, isRunning, {false}, 1:ABC2ShouldRightClick]
[23, Debug, debug, 1:[Antiban - Right clicking.]]
[23, Mouse, moveMouse, 2:400, 2:250, 2:175]
[23, Mouse, rightClick]
[23, Sleeping, sleepRandom, 2:100, 2:900]
[23, Mouse, moveMouse, 2:400, 2:250, 2:175]
[23, Timers, reset, 1:[ABC2ShouldRightClick]]
[24, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[24, Variables, getBoolean, 1:FreshRun, 3:false]
[24, Timers, isRunning, {false}, 1:ABC2ShouldRotateCamera]
[24, Debug, debug, 1:[Antiban - Moving camera.]]
[24, Camera, movePitch, 2:55, 2:67]
[24, Camera, moveYaw, 2:1, 2:359]
[24, Timers, reset, 1:[ABC2ShouldRotateCamera]]
[25, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[25, Variables, getBoolean, 1:FreshRun, 3:false]
[25, Timers, isRunning, {false}, 1:ABC2ShouldCheckXP]
[25, Debug, debug, 1:[Antiban - Checking xp.]]
[25, Tabs, open, {false}, 1:[SKILLS]]
[25, RS2Widget, hoverWidget, 2:548, 2:80]
[25, Sleeping, sleepRandom, 2:300, 2:900]
[25, Timers, reset, 1:[ABC2ShouldCheckXP]]
[26, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[26, Variables, getBoolean, 1:FreshRun, 3:false]
[26, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[26, Debug, debug, 1:[Antiban - Preparing to check random tab.]]
[26, Variables, generateRandomInteger, 1:ABC2ShouldCheckTabs, 2:1, 2:11]
[27, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[27, Variables, getBoolean, 1:FreshRun, 3:false]
[27, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[27, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:1]
[27, Tabs, isOpen, {false}, 1:[ATTACK]]
[27, Debug, debug, 1:[Antiban - Checking attack tab.]]
[27, Tabs, open, {false}, 1:[ATTACK]]
[27, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[28, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[28, Variables, getBoolean, 1:FreshRun, 3:false]
[28, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[28, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:2]
[28, Tabs, isOpen, {false}, 1:[QUEST]]
[28, Debug, debug, 1:[Antiban - Checking quest tab.]]
[28, Tabs, open, {false}, 1:[QUEST]]
[28, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[29, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[29, Variables, getBoolean, 1:FreshRun, 3:false]
[29, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[29, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:3]
[29, Tabs, isOpen, {false}, 1:[EQUIPMENT]]
[29, Debug, debug, 1:[Antiban - Checking equipment tab.]]
[29, Tabs, open, {false}, 1:[EQUIPMENT]]
[29, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[30, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[30, Variables, getBoolean, 1:FreshRun, 3:false]
[30, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[30, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:4]
[30, Tabs, isOpen, {false}, 1:[PRAYER]]
[30, Debug, debug, 1:[Antiban - Checking prayer tab.]]
[30, Tabs, open, {false}, 1:[PRAYER]]
[30, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[31, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[31, Variables, getBoolean, 1:FreshRun, 3:false]
[31, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[31, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:5]
[31, Tabs, isOpen, {false}, 1:[MAGIC]]
[31, Debug, debug, 1:[Antiban - Checking magic tab.]]
[31, Tabs, open, {false}, 1:[MAGIC]]
[31, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[32, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[32, Variables, getBoolean, 1:FreshRun, 3:false]
[32, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[32, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:6]
[32, Tabs, isOpen, {false}, 1:[CLANCHAT]]
[32, Debug, debug, 1:[Antiban - Checking clanchat tab.]]
[32, Tabs, open, {false}, 1:[CLANCHAT]]
[32, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[33, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[33, Variables, getBoolean, 1:FreshRun, 3:false]
[33, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[33, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:7]
[33, Tabs, isOpen, {false}, 1:[FRIENDS]]
[33, Debug, debug, 1:[Antiban - Checking friends list.]]
[33, Tabs, open, {false}, 1:[FRIENDS]]
[33, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[34, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[34, Variables, getBoolean, 1:FreshRun, 3:false]
[34, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[34, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:8]
[34, Tabs, isOpen, {false}, 1:[ACCOUNT_MANAGEMENT]]
[34, Debug, debug, 1:[Antiban - Checking account tab.]]
[34, Tabs, open, {false}, 1:[ACCOUNT_MANAGEMENT]]
[34, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[35, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[35, Variables, getBoolean, 1:FreshRun, 3:false]
[35, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[35, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:9]
[35, Tabs, isOpen, {false}, 1:[SETTINGS]]
[35, Debug, debug, 1:[Antiban - Checking settings tab.]]
[35, Tabs, open, {false}, 1:[SETTINGS]]
[35, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[36, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[36, Variables, getBoolean, 1:FreshRun, 3:false]
[36, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[36, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:10]
[36, Tabs, isOpen, {false}, 1:[EMOTES]]
[36, Debug, debug, 1:[Antiban - Checking emotes tab.]]
[36, Tabs, open, {false}, 1:[EMOTES]]
[36, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[37, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[37, Variables, getBoolean, 1:FreshRun, 3:false]
[37, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[37, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:11]
[37, Tabs, isOpen, {false}, 1:[MUSIC]]
[37, Debug, debug, 1:[Antiban - Checking music tab.]]
[37, Tabs, open, {false}, 1:[MUSIC]]
[37, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[38, Debug, comment, 1:[Antiban - Unique]]
[39, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[39, Variables, getBoolean, 1:InMiniBreak, 3:false]
[39, Timers, isRunning, {true}, 1:MiniBreak]
[39, Variables, editBoolean, 1:InMiniBreak, 3:true]
[40, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[40, Variables, getBoolean, 1:InMiniBreak, 3:true]
[40, Timers, isRunning, {false}, 1:MiniBreak]
[40, Variables, editBoolean, 1:InMiniBreak, 3:false]
[41, Variables, getBoolean, 1:NeedToHopWorlds, 3:true]
[41, Debug, debug, 1:[Preparing to hop worlds.]]
[41, Timers, reset, 1:[UABShouldHopWorlds]]
[41, Sleeping, sleep, 2:[9000]]
[41, Variables, editBoolean, 1:NeedToHopWorlds, 3:false]
[41, Worlds, hopToRandomWorld]
[42, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[42, Variables, getBoolean, 1:NeedToHopWorlds, 3:false]
[42, Timers, isRunning, {false}, 1:UABShouldHopWorlds]
[42, Variables, addOr]
[42, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[42, Variables, getBoolean, 1:NeedToHopWorlds, 3:false]
[42, Messages, messageContains, {true}, 1:bot, 1:PLAYER]
[42, GrandExchange, isOpen, {false}]
[42, Bank, isOpen, {false}]
[42, Stores, isOpen, {false}]
[42, Variables, editBoolean, 1:NeedToHopWorlds, 3:true]
[43, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[43, Timers, isRunning, {false}, 1:UABShouldCrazyClick]
[43, MyPlayer, areaContainsPlayer, {false}, 1:[FeroxEnclave]]
[43, GrandExchange, isOpen, {false}]
[43, Bank, isOpen, {false}]
[43, Stores, isOpen, {false}]
[43, Debug, debug, 1:[Antiban - Crazy clicks.]]
[43, Timers, reset, 1:[UABShouldCrazyClick]]
[43, Mouse, moveMouseAndClickMultipleTimes, 2:400, 2:250, 2:1, 2:4, 2:200]
[43, Mouse, moveMouseAndClickMultipleTimes, 2:400, 2:250, 2:1, 2:4, 2:200]
[44, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[44, Timers, isRunning, {false}, 1:UABShouldTakeMiniBreak]
[44, Debug, debug, 1:[Antiban - Taking Mini Break.]]
[44, Timers, reset, 1:[UABShouldTakeMiniBreak]]
[44, Timers, reset, 1:[MiniBreak]]
[45, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[45, Timers, isRunning, {false}, 1:UABShouldInspectLoot]
[45, Debug, debug, 1:[Antiban - Inspecting loot.]]
[45, Timers, reset, 1:[UABShouldInspectLoot]]
[45, Mouse, hoverEntity, 1:Bones, 1:GroundItem]
[45, Mouse, hoverEntity, 1:Big Bones, 1:GroundItem]
[45, Mouse, hoverEntity, 1:Dragon bones, 1:GroundItem]
[45, Mouse, rightClick]
[46, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[46, Timers, isRunning, {false}, 1:UABShouldRandomZoom]
[46, GrandExchange, isOpen, {false}]
[46, Bank, isOpen, {false}]
[46, Variables, generateRandomInteger, 1:UABZoomSelector, 2:1, 2:3]
[47, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[47, Timers, isRunning, {false}, 1:UABShouldRandomZoom]
[47, Variables, getInteger, 1:UABZoomMoveMouse, 1:==, 2:0]
[47, Bank, isOpen, {false}]
[47, Variables, operationInteger, 1:UABZoomMoveMouse, 1:Set as, 2:1]
[47, Mouse, moveMouse, 2:250, 2:150, 2:25]
[48, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[48, Variables, getInteger, 1:UABZoomStopper, 1:==, 2:15]
[48, Bank, isOpen, {false}]
[48, Variables, operationInteger, 1:UABZoomStopper, 1:Set as, 2:0]
[48, Variables, operationInteger, 1:UABZoomSelector, 1:Set as, 2:0]
[48, Variables, operationInteger, 1:UABZoomMoveMouse, 1:Set as, 2:0]
[48, Timers, reset, 1:[UABShouldRandomZoom]]
[49, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[49, Timers, isRunning, {false}, 1:UABShouldRandomZoom]
[49, Variables, getInteger, 1:UABZoomMoveMouse, 1:==, 2:1]
[49, Variables, getInteger, 1:UABZoomSelector, 1:==, 2:1]
[49, Bank, isOpen, {false}]
[49, Variables, generateRandomInteger, 1:UABZoomStopper, 2:0, 2:15]
[49, Mouse, scrollUp]
[50, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[50, Timers, isRunning, {false}, 1:UABShouldRandomZoom]
[50, Variables, getInteger, 1:UABZoomMoveMouse, 1:==, 2:1]
[50, Variables, getInteger, 1:UABZoomSelector, 1:>=, 2:2]
[50, Bank, isOpen, {false}]
[50, Variables, generateRandomInteger, 1:UABZoomStopper, 2:0, 2:15]
[50, Mouse, scrollDown]
[51, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[51, Timers, isRunning, {false}, 1:UABShouldRandomZoom]
[51, Variables, getInteger, 1:UABZoomStopper, 1:!=, 2:15]
[51, Bank, isOpen, {false}]
[51, Variables, goTo, 2:[46]]
[52, Debug, comment, 1:[Global Timers]]
[53, MyPlayer, isAnimating, {true}]
[53, Timers, reset, 1:[<Global>IsAnimating]]
[54, Variables, getBoolean, 1:IsAnimating, 3:false]
[54, Timers, isRunning, {true}, 1:<Global>IsAnimating]
[54, Variables, editBoolean, 1:IsAnimating, 3:true]
[55, Variables, getBoolean, 1:IsAnimating, 3:true]
[55, Timers, isRunning, {false}, 1:<Global>IsAnimating]
[55, Variables, editBoolean, 1:IsAnimating, 3:false]
[56, Debug, comment, 1:[Dramen Staff Logic]]
[57, Variables, getBoolean, 1:NeedDramenStaff, 3:false]
[57, Equipment, hasGearEquipped, {false}, 1:Dramen staff]
[57, Variables, editBoolean, 1:NeedDramenStaff, 3:true]
[58, Variables, getBoolean, 1:NeedDramenStaff, 3:true]
[58, Equipment, hasGearEquipped, {true}, 1:Dramen staff]
[58, Variables, editBoolean, 1:NeedDramenStaff, 3:false]
[59, Debug, comment, 1:[Ring Of Dueling Logic]]
[60, Variables, getBoolean, 1:NeedRingOfDueling, 3:false]
[60, Equipment, isWearingItemThatContains, {false}, 1:Ring of dueling, 1:RING]
[60, Variables, editBoolean, 1:NeedRingOfDueling, 3:true]
[61, Variables, getBoolean, 1:NeedRingOfDueling, 3:true]
[61, Equipment, isWearingItemThatContains, {true}, 1:Ring of dueling, 1:RING]
[61, Variables, editBoolean, 1:NeedRingOfDueling, 3:false]
[62, Debug, comment, 1:[Necklace of Passage Logic]]
[63, Variables, getBoolean, 1:NeedNecklaceOfPassage, 3:false]
[63, Equipment, isWearingItemThatContains, {false}, 1:Necklace of passage, 1:AMULET]
[63, Variables, editBoolean, 1:NeedNecklaceOfPassage, 3:true]
[64, Variables, getBoolean, 1:NeedNecklaceOfPassage, 3:true]
[64, Equipment, isWearingItemThatContains, {true}, 1:Necklace of passage, 1:AMULET]
[64, Variables, editBoolean, 1:NeedNecklaceOfPassage, 3:false]
[65, Debug, comment, 1:[Pure Essence Logic]]
[66, Variables, getBoolean, 1:NeedPureEssence, 3:false]
[66, Inventory, contains, {false}, 2:7936]
[66, Variables, editBoolean, 1:NeedPureEssence, 3:true]
[67, Variables, getBoolean, 1:NeedPureEssence, 3:true]
[67, Inventory, contains, {true}, 2:7936]
[67, Variables, editBoolean, 1:NeedPureEssence, 3:false]
[68, Debug, comment, 1:[Tiara Logic]]
[69, Variables, getBoolean, 1:NeedTiara, 3:false]
[69, Equipment, isWearingItem, {false}, 1:Nature tiara, 1:HAT]
[69, Equipment, isWearingItem, {false}, 1:Catalytic tiara, 1:HAT]
[69, Variables, editBoolean, 1:NeedTiara, 3:true]
[70, Equipment, isWearingItem, {true}, 1:Nature tiara, 1:HAT]
[70, Equipment, isWearingItem, {true}, 1:Nature tiara, 1:HAT]
[70, Variables, addOr]
[70, Variables, getBoolean, 1:NeedTiara, 3:true]
[70, Equipment, isWearingItem, {true}, 1:Catalytic tiara, 1:HAT]
[70, Variables, editBoolean, 1:NeedTiara, 3:false]
[71, Debug, comment, 1:[Banking Logic]]
[72, Variables, getBoolean, 1:NeedToBank, 3:false]
[72, Variables, getBoolean, 1:NeedDramenStaff, 3:true]
[72, Variables, addOr]
[72, Variables, getBoolean, 1:NeedToBank, 3:false]
[72, Variables, getBoolean, 1:NeedNecklaceOfPassage, 3:true]
[72, Variables, addOr]
[72, Variables, getBoolean, 1:NeedToBank, 3:false]
[72, Variables, getBoolean, 1:NeedRingOfDueling, 3:true]
[72, Variables, addOr]
[72, Variables, getBoolean, 1:NeedToBank, 3:false]
[72, Variables, getBoolean, 1:NeedPureEssence, 3:true]
[72, Variables, addOr]
[72, Variables, getBoolean, 1:NeedToBank, 3:false]
[72, Variables, getBoolean, 1:NeedTiara, 3:true]
[72, Variables, editBoolean, 1:NeedToBank, 3:true]
[73, Variables, getBoolean, 1:NeedToBank, 3:true]
[73, Variables, getBoolean, 1:NeedDramenStaff, 3:false]
[73, Variables, getBoolean, 1:NeedNecklaceOfPassage, 3:false]
[73, Variables, getBoolean, 1:NeedRingOfDueling, 3:false]
[73, Variables, getBoolean, 1:NeedTiara, 3:false]
[73, Variables, getBoolean, 1:NeedPureEssence, 3:false]
[73, Variables, editBoolean, 1:NeedToBank, 3:false]
[74, Debug, comment, 1:[Keep Equipment Open]]
[75, Bank, isOpen, {false}]
[75, Tabs, isOpen, {false}, 1:[EQUIPMENT]]
[75, Tabs, open, {false}, 1:[EQUIPMENT]]
[76, Debug, comment, 1:[Teleport to Bank]]
[77, Variables, getBoolean, 1:NeedToBank, 3:true]
[77, Variables, getBoolean, 1:NeedPureEssence, 3:true]
[77, Variables, getBoolean, 1:NeedRingOfDueling, 3:false]
[77, Variables, getBoolean, 1:InMiniBreak, 3:false]
[77, MyPlayer, areaContainsPlayer, {false}, 1:[FeroxEnclave]]
[77, RS2Widget, interact, 2:387, 2:24, 1:Ferox Enclave]
[77, Sleeping, sleep, 2:[400]]
[77, Sleeping, sleepTeleporting]
[78, Debug, comment, 1:[Walk to Nearest Bank]]
[79, Variables, getBoolean, 1:NeedToBank, 3:true]
[79, MyPlayer, areaContainsPlayer, {false}, 1:[WizardsTower]]
[79, MyPlayer, areaContainsPlayer, {false}, 1:[FeroxEnclave]]
[79, MyPlayer, areaContainsPlayer, {false}, 1:[NatureAltar]]
[79, MyPlayer, areaContainsPlayer, {false}, 1:[Karamja]]
[79, Bank, isAtClosestBank, {false}]
[79, MyPlayer, isAnimating, {false}]
[79, WalkTo, walkToClosestBank]
[80, Debug, comment, 1:[Ferox Enclave - Walk to Chest]]
[81, Variables, getBoolean, 1:NeedToBank, 3:true]
[81, Variables, getBoolean, 1:InMiniBreak, 3:false]
[81, MyPlayer, areaContainsPlayer, {true}, 1:[FeroxEnclave]]
[81, Settings, getRunEnergy, 1:>=, 2:41]
[81, MyPlayer, getDistanceTo, 1:Bank chest, 1:RS2Object, 1:>=, 2:12, 3:true]
[81, WalkTo, walkToEntity, 1:Bank chest, 1:RS2Object]
[82, Debug, comment, 1:[Ferox Enclave - Restore Run Energy]]
[83, MyPlayer, areaContainsPlayer, {true}, 1:[FeroxEnclave]]
[83, Variables, getBoolean, 1:InMiniBreak, 3:false]
[83, MyPlayer, getDistanceTo, 1:Pool of Refreshment, 1:RS2Object, 1:>=, 2:6, 3:true]
[83, Settings, getRunEnergy, 1:<=, 2:40]
[83, Bank, isOpen, {false}]
[83, WalkTo, walkToEntity, 1:Pool of refreshment, 1:RS2Object]
[84, MyPlayer, areaContainsPlayer, {true}, 1:[FeroxEnclave]]
[84, Variables, getBoolean, 1:InMiniBreak, 3:false]
[84, MyPlayer, getDistanceTo, 1:Pool of Refreshment, 1:RS2Object, 1:<=, 2:11, 3:true]
[84, Settings, getRunEnergy, 1:<=, 2:40]
[84, Bank, isOpen, {false}]
[84, RS2Object, interactWithRS2ObjectWithinArea, 1:Pool of Refreshment, 1:Drink, 1:FeroxEnclave, 3:true, 3:false, 3:true, 3:false]
[84, Sleeping, sleep, 2:[600]]
[85, Debug, comment, 1:[Banking - Open Bank]]
[86, Variables, getBoolean, 1:NeedToBank, 3:true]
[86, MyPlayer, areaContainsPlayer, {false}, 1:[FeroxEnclave]]
[86, Bank, isAtClosestBank, {true}]
[86, Bank, isOpen, {false}]
[86, Variables, addOr]
[86, Variables, getBoolean, 1:NeedToBank, 3:true]
[86, NPC, isVisible, {true}, 1:[Banker]]
[86, MyPlayer, areaContainsPlayer, {false}, 1:[FeroxEnclave]]
[86, Bank, isOpen, {false}]
[86, Variables, addOr]
[86, Variables, getBoolean, 1:NeedToBank, 3:true]
[86, RS2Object, isVisible, {true}, 1:[Bank chest]]
[86, MyPlayer, areaContainsPlayer, {true}, 1:[FeroxEnclave]]
[86, MyPlayer, getDistanceTo, 1:Bank chest, 1:NPC, 1:<=, 2:11, 3:true]
[86, Settings, getRunEnergy, 1:>=, 2:41]
[86, Bank, isOpen, {false}]
[86, Bank, open]
[86, Variables, generateRandomInteger, 1:UABBankAFK, 2:1, 2:19]
[87, Debug, comment, 1:[Bank AFK]]
[88, Bank, isOpen, {true}]
[88, Variables, getInteger, 1:UABBankAFK, 1:==, 2:19]
[88, Mouse, moveOutsideScreen]
[88, Sleeping, sleepRandom, 2:9401, 2:31845]
[88, Variables, operationInteger, 1:UABBankAFK, 1:Set as, 2:0]
[89, Debug, comment, 1:[Deposit Inventory]]
[90, Variables, getBoolean, 1:NeedToBank, 3:true]
[90, Inventory, containsAnyOtherThan, 1:Pure essence, 1:Ring of dueling(8), 1:Necklace of passage(5)]
[90, Bank, isOpen, {true}]
[90, Variables, addOr]
[90, Variables, getBoolean, 1:NeedToBank, 3:true]
[90, Variables, getBoolean, 1:NeedDramenStaff, 3:true]
[90, Inventory, isFull, {true}]
[90, Bank, isOpen, {true}]
[90, Variables, addOr]
[90, Variables, getBoolean, 1:NeedToBank, 3:true]
[90, Variables, getBoolean, 1:NeedRingOfDueling, 3:true]
[90, Inventory, isFull, {true}]
[90, Bank, isOpen, {true}]
[90, Variables, addOr]
[90, Variables, getBoolean, 1:NeedToBank, 3:true]
[90, Variables, getBoolean, 1:NeedNecklaceOfPassage, 3:true]
[90, Inventory, isFull, {true}]
[90, Bank, isOpen, {true}]
[90, Variables, addOr]
[90, Variables, getBoolean, 1:NeedToBank, 3:true]
[90, Inventory, getAmount, 1:Ring of dueling(8), 2:2, 1:>=]
[90, Bank, isOpen, {true}]
[90, Variables, addOr]
[90, Variables, getBoolean, 1:NeedToBank, 3:true]
[90, Inventory, getAmount, 1:Necklace of passage(5), 2:2, 1:>=]
[90, Bank, isOpen, {true}]
[90, Bank, depositAll]
[90, Sleeping, sleep, 2:[400]]
[91, Debug, comment, 1:[Dramen Staff Interactions]]
[92, Variables, getBoolean, 1:NeedToBank, 3:true]
[92, Inventory, contains, {false}, 1:Dramen staff]
[92, Equipment, hasGearEquipped, {false}, 1:Dramen staff]
[92, Inventory, isFull, {false}]
[92, Bank, isOpen, {true}]
[92, Bank, withdrawX, 1:Dramen staff, 2:1]
[92, Sleeping, sleep, 2:[400]]
[93, Equipment, hasGearEquipped, {false}, 1:Dramen staff]
[93, Inventory, contains, {true}, 1:Dramen staff]
[93, Inventory, interactWith, 1:Dramen staff, 1:Wield]
[94, Debug, comment, 1:[Tiara Interactions]]
[95, Variables, getBoolean, 1:NeedToBank, 3:true]
[95, Inventory, contains, {false}, 1:Catalytic tiara]
[95, Equipment, isWearingItem, {false}, 1:Catalytic tiara, 1:HAT]
[95, Inventory, isFull, {false}]
[95, Bank, isOpen, {true}]
[95, Bank, withdrawX, 1:Catalytic tiara, 2:1]
[95, Sleeping, sleep, 2:[400]]
[96, Variables, getBoolean, 1:NeedToBank, 3:true]
[96, Inventory, contains, {false}, 1:Catalytic tiara]
[96, Inventory, contains, {false}, 1:Nature tiara]
[96, Equipment, isWearingItem, {false}, 1:Catalytic tiara, 1:HAT]
[96, Equipment, isWearingItem, {false}, 1:Nature tiara, 1:HAT]
[96, Inventory, isFull, {false}]
[96, Bank, isOpen, {true}]
[96, Bank, withdrawX, 1:Nature tiara, 2:1]
[96, Sleeping, sleep, 2:[400]]
[97, Equipment, isWearingItem, {false}, 1:Catalytic tiara, 1:HAT]
[97, Inventory, contains, {true}, 1:Catalytic tiara]
[97, Inventory, interactWith, 1:Catalytic tiara, 1:Wear]
[98, Equipment, isWearingItem, {false}, 1:Catalytic tiara, 1:HAT]
[98, Equipment, isWearingItem, {false}, 1:Nature tiara, 1:HAT]
[98, Inventory, contains, {true}, 1:Nature tiara]
[98, Inventory, interactWith, 1:Nature tiara, 1:Wear]
[99, Debug, comment, 1:[Necklace of passage Interactions]]
[100, Variables, getBoolean, 1:NeedToBank, 3:true]
[100, Inventory, inventoryContainsPartialName, {false}, 1:Necklace of passage, 3:false, 3:true]
[100, Equipment, isWearingItemThatContains, {false}, 1:Necklace of passage, 1:AMULET]
[100, Inventory, isFull, {false}]
[100, Bank, isOpen, {true}]
[100, Bank, withdrawX, 1:Necklace of passage(5), 2:1]
[100, Sleeping, sleep, 2:[400]]
[101, Equipment, isWearingItemThatContains, {false}, 1:Necklace of passage, 1:AMULET]
[101, Inventory, inventoryContainsPartialName, {true}, 1:Necklace of passage, 3:false, 3:true]
[101, Inventory, interactWithItemWithPartialName, 1:Necklace of passage, 3:false, 3:true, 1:Wear]
[102, Debug, comment, 1:[Ring of Dueling Interactions]]
[103, Variables, getBoolean, 1:NeedToBank, 3:true]
[103, Equipment, isWearingItemThatContains, {false}, 1:Ring of dueling, 1:RING]
[103, Inventory, inventoryContainsPartialName, {false}, 1:Ring of dueling, 3:false, 3:true]
[103, Inventory, isFull, {false}]
[103, Bank, isOpen, {true}]
[103, Bank, withdrawX, 1:Ring of dueling(8), 2:1]
[103, Sleeping, sleep, 2:[400]]
[104, Equipment, isWearingItemThatContains, {false}, 1:Ring of dueling, 1:RING]
[104, Inventory, inventoryContainsPartialName, {true}, 1:Ring of dueling, 3:false, 3:true]
[104, Inventory, interactWithItemWithPartialName, 1:Ring of dueling, 3:false, 3:true, 1:Wear]
[105, Debug, comment, 1:[Banking - Withdraw Pure Essence]]
[106, Variables, getBoolean, 1:NeedToBank, 3:true]
[106, Variables, getBoolean, 1:NeedDramenStaff, 3:false]
[106, Variables, getBoolean, 1:NeedNecklaceOfPassage, 3:false]
[106, Variables, getBoolean, 1:NeedRingOfDueling, 3:false]
[106, Variables, getBoolean, 1:NeedTiara, 3:false]
[106, Variables, getBoolean, 1:NeedPureEssence, 3:true]
[106, Bank, isOpen, {true}]
[106, Bank, withdrawAll, 1:[Pure essence]]
[107, Debug, comment, 1:[Closing Bank]]
[108, Variables, getBoolean, 1:NeedToBank, 3:false]
[108, Bank, isOpen, {true}]
[108, Bank, close]
[109, Debug, comment, 1:[Teleport to Wizards Tower]]
[110, Variables, getBoolean, 1:NeedToBank, 3:false]
[110, MyPlayer, areaContainsPlayer, {false}, 1:[WizardsTower]]
[110, MyPlayer, areaContainsPlayer, {false}, 1:[Karamja]]
[110, MyPlayer, areaContainsPlayer, {false}, 1:[NatureAltar]]
[110, Variables, getBoolean, 1:InMiniBreak, 3:false]
[110, Bank, isOpen, {false}]
[110, RS2Widget, interact, 2:387, 2:17, 1:Wizards' Tower]
[110, Sleeping, sleep, 2:[400]]
[110, Sleeping, sleepTeleporting]
[111, Debug, comment, 1:[Walk to Fairy Ring]]
[112, MyPlayer, areaContainsPlayer, {true}, 1:[WizardsTower]]
[112, Variables, getBoolean, 1:NeedRingOfDueling, 3:false]
[112, Variables, getBoolean, 1:NeedTiara, 3:false]
[112, Variables, getBoolean, 1:NeedDramenStaff, 3:false]
[112, Variables, getBoolean, 1:NeedPureEssence, 3:false]
[112, Variables, getBoolean, 1:InMiniBreak, 3:false]
[112, MyPlayer, getDistanceTo, 1:Fairy ring, 1:RS2Object, 1:>=, 2:6, 3:true]
[112, WalkTo, walkToPosition, 1:FairyRing, 3:true, 3:false, 3:false, 3:false, 3:false, 3:false, 3:false, 3:false]
[113, Debug, comment, 1:[Interact with Fairy Ring]]
[114, Variables, getBoolean, 1:NeedRingOfDueling, 3:false]
[114, Variables, getBoolean, 1:NeedTiara, 3:false]
[114, Variables, getBoolean, 1:NeedDramenStaff, 3:false]
[114, Variables, getBoolean, 1:NeedPureEssence, 3:false]
[114, Variables, getBoolean, 1:InMiniBreak, 3:false]
[114, MyPlayer, getDistanceTo, 1:Fairy ring, 1:RS2Object, 1:<=, 2:8, 3:true]
[114, MyPlayer, areaContainsPlayer, {true}, 1:[WizardsTower]]
[114, RS2Object, interactWithRS2ObjectWithinArea, 1:Fairy ring, 1:Last-destination (CKR), 1:WizardsTower, 3:true, 3:false, 3:true, 3:false]
[114, Sleeping, sleep, 2:[400]]
[114, Sleeping, sleepTeleporting]
[115, Debug, comment, 1:[Walk to Nature Ruins]]
[116, Variables, getBoolean, 1:NeedPureEssence, 3:false]
[116, Variables, getBoolean, 1:NeedTiara, 3:false]
[116, MyPlayer, areaContainsPlayer, {true}, 1:[Karamja]]
[116, MyPlayer, areaContainsPlayer, {false}, 1:[NatureRuins]]
[116, WalkTo, walkToPosition, 1:NatureRuins, 3:true, 3:false, 3:false, 3:false, 3:false, 3:false, 3:false, 3:false]
[117, Debug, comment, 1:[Enter Ruins]]
[118, Variables, getBoolean, 1:NeedPureEssence, 3:false]
[118, Variables, getBoolean, 1:NeedTiara, 3:false]
[118, MyPlayer, areaContainsPlayer, {true}, 1:[Karamja]]
[118, MyPlayer, getDistanceTo, 1:Mysterious ruins, 1:RS2Object, 1:<=, 2:12, 3:true]
[118, Variables, generateRandomInteger, 1:UABNatureRuinsAFK, 2:1, 2:13]
[118, RS2Object, interactWithRS2ObjectWithinArea, 1:Mysterious ruins, 1:Enter, 1:Karamja, 3:true, 3:false, 3:true, 3:false]
[119, Debug, comment, 1:[Nature Ruins AFK]]
[120, MyPlayer, areaContainsPlayer, {true}, 1:[NatureRuins]]
[120, Variables, getInteger, 1:UABNatureRuinsAFK, 1:==, 2:13]
[120, Variables, operationInteger, 1:UABNatureRuinsAFK, 1:Set as, 2:0]
[120, Sleeping, sleepRandom, 2:4208, 2:11498]
[121, Debug, comment, 1:[Craft Nature Runes]]
[122, Variables, getBoolean, 1:NeedPureEssence, 3:false]
[122, MyPlayer, areaContainsPlayer, {true}, 1:[NatureAltar]]
[122, RS2Object, interactWith, 1:Altar, 1:Craft-rune, 3:false, 3:false, 3:true, 3:false, 3:false]
[124, Debug, comment, 1:[End]]
