<Script>xHannyah:xMaster Farmer:1.0
<Description>Equips Rogue Outfit automatically. Banks and keeps only valuable seeds (Plus Barley seeds for Birdhouse Runs and Limpwurt for Farm Runs).
<Paint>https://i.ibb.co/vX6DcbQ/Master-Farmer.png
<Integer>ABC2GenerateTabSwitchPreference:0
<Integer>ABC2GenerateRunActivation:0
<Integer>ABC2ShouldMoveToAnticipated:0
<Integer>ABC2GenerateReactionTime:0
<Integer>ABC2GenerateEatAtHP:0
<Integer>ABC2GenerateOpenBankPreference:0
<Integer>ShortAFK:0
<Integer>ABC2ShouldLeaveGame:0
<Integer>ABC2ShouldCheckTabs:0
<Integer>FirstDeathStage:0
<Integer>ABC2ShouldHoverNextTarget:0
<Boolean>NeedRogueOutfit:false
<Boolean>NeedToHeal:false
<Boolean>IsAnimating:false
<Boolean>IsDead:false
<Boolean>Stunned:false
<Boolean>InBreak:true
<Boolean>FreshRun:true
<Boolean>InMiniBreak:false
<Boolean>EnableDeathHandler:true
<Boolean>ABC2GeneratedEatAtHp:false
<Boolean>NeedToHopWorlds:false
<Boolean>EnableCustomBreaks:true
<Boolean>EnableUniqueAntiban:true
<Boolean>NeedToBank:false
<Boolean>NeedThievingCape:false
<Boolean>EnableTribotAntiban:true
<Boolean>NeedFood:false
<Boolean>NeedToDrop:false
<Boolean>FirstDeath:false
<Position>VarrockMasterFarmer:3238,3345,0
<Position>VarrockBankWest:3182,3440,0
<Area>MasterFarmerSurroundings:3217,3370,3276,3331,0
<Area>VarrockBankWest:3181,3443,3184,3438,0
<Poly Area>VarrockMasterFarmer:Areaarea=newArea(newint{{3264,3359},{3255,3359},{3252,3356},{3250,3356},{3249,3357},{3245,3357},{3243,3359},{3233,3359},{3231,3357},{3231,3351},{3228,3348},{3228,3345},{3229,3344},{3229,3342},{3231,3340},{3232,3340},{3233,3339},{3245,3339},{3247,3341},{3247,3342},{3250,3345},{3250,3346},{3252,3348},{3259,3348},{3262,3345},{3269,3345},{3271,3347},{3271,3352}});:0
<Timer><Global>IsAnimating:6000,true,2000,false
<Timer>UABShouldCrazyClick:3360000,true,960000,true
<Timer>UABShouldTakeMiniBreak:1920000,true,1080000,true
<Timer>Stunned:7000,true,3000,false
<Timer>MiniBreak:22000,true,48000,false
<Timer>ABC2ShouldExamineEntity:3360000,true,1080000,true
<Timer>Botting:1080000,true,480000,true
<Timer>ABC2ShouldCheckTabs:900000,true,420000,true
<Timer>ABC2ShouldMoveMouse:300000,true,240000,true
<Timer>PreparingForBreak:10000,false,0,false
<Timer>UABShouldReplyToPlayer:5400000,false,0,true
<Timer>UABShouldHopWorlds:2520000,true,840000,true
<Timer>ABC2ShouldCheckXP:2520000,true,960000,true
<Timer>UABShouldInspectLoot:2160000,true,1320000,true
<Timer>ABC2ShouldPickupMouse:240000,true,180000,true
<Timer>ABC2ShouldRightClick:1140000,true,420000,true
<Timer>ABC2ShouldRotateCamera:1560000,true,660000,true
<User Input>Script Settings:EnableDeathHandler|Death Handler|true/~/EnableCustomBreaks|Custom Breaks|true/~/EnableTribotAntiban|Tribot ABC2 (Antiban)|true/~/EnableUniqueAntiban|Unique ABC (Antiban)|true/~/
[2, Variables, getBoolean, 1:FreshRun, 3:true]
[2, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[2, Timers, reset, 1:[ABC2ShouldCheckXP]]
[2, Timers, reset, 1:[ABC2ShouldExamineEntity]]
[2, Timers, reset, 1:[ABC2ShouldMoveMouse]]
[2, Timers, reset, 1:[ABC2ShouldPickupMouse]]
[2, Timers, reset, 1:[ABC2ShouldRightClick]]
[2, Timers, reset, 1:[ABC2ShouldRotateCamera]]
[2, Timers, reset, 1:[UABShouldCrazyClick]]
[2, Timers, reset, 1:[UABShouldHopWorlds]]
[2, Timers, reset, 1:[UABShouldInspectLoot]]
[2, Timers, reset, 1:[UABShouldTakeMiniBreak]]
[2, Variables, editBoolean, 1:FreshRun, 3:false]
[3, Debug, comment, 1:[First Death Handler]]
[4, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[4, Variables, getBoolean, 1:IsDead, 3:true]
[4, NPC, isExists, {false}, 1:[Death]]
[4, Debug, debug, 1:[Successfully left Death's Lair.]]
[4, Variables, editBoolean, 1:IsDead, 3:false]
[4, Variables, editBoolean, 1:FirstDeath, 3:false]
[5, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[5, Variables, getBoolean, 1:IsDead, 3:false]
[5, NPC, isExists, {true}, 1:[Death]]
[5, Debug, debug, 1:[Oh no. You are dead.]]
[5, Variables, editBoolean, 1:IsDead, 3:true]
[6, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[6, Variables, getBoolean, 1:IsDead, 3:true]
[6, Variables, getBoolean, 1:FirstDeath, 3:false]
[6, Debug, debug, 1:[Trying to leave Death's Lair.]]
[6, RS2Object, interactWith, 1:Portal, 1:Use, 3:true, 3:false, 3:true, 3:false, 3:false]
[7, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[7, Variables, getBoolean, 1:FirstDeath, 3:true]
[7, RS2Widget, isVisibleContainingText, {true}, 1:<str>Tell me about gravestones again.</str>, 3:false]
[7, RS2Widget, isVisibleContainingText, {true}, 1:<str>How do I pay a gravestone fee?</str>, 3:false]
[7, RS2Widget, isVisibleContainingText, {true}, 1:<str>How long do I have to return to my gravestone?</str>, 3:false]
[7, RS2Widget, isVisibleContainingText, {true}, 1:<str>How do I know what will happen to my items when I die?</str>, 3:false]
[7, Variables, editBoolean, 1:FirstDeath, 3:false]
[8, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[8, Variables, getBoolean, 1:IsDead, 3:true]
[8, Variables, getBoolean, 1:FirstDeath, 3:false]
[8, RS2Widget, isVisibleContainingText, {true}, 1:I haven't finished talking to you yet, 3:false]
[8, Variables, editBoolean, 1:FirstDeath, 3:true]
[9, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[9, Variables, getBoolean, 1:IsDead, 3:true]
[9, Variables, getBoolean, 1:FirstDeath, 3:true]
[9, Dialogues, isInDialogue, {false}]
[9, NPC, interactWith, 1:Death, 1:Talk-to, 3:true, 3:false, 3:true, 3:false, 3:false]
[10, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[10, Variables, getBoolean, 1:IsDead, 3:true]
[10, Dialogues, isInDialogue, {true}]
[10, Dialogues, clickContinue]
[11, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[11, Variables, getBoolean, 1:FirstDeath, 3:true]
[11, RS2Widget, isVisibleContainingText, {false}, 1:<str>Tell me about gravestones again.</str>, 3:false]
[11, RS2Widget, isVisibleContainingText, {true}, 1:Tell me about gravestones again., 3:true]
[11, RS2Widget, interactWithWidgetContainingText, 1:Tell me about gravestones again., 1:Continue, 3:false]
[12, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[12, Variables, getBoolean, 1:FirstDeath, 3:true]
[12, RS2Widget, isVisibleContainingText, {false}, 1:<str>How do I pay a gravestone fee?</str>, 3:false]
[12, RS2Widget, isVisibleContainingText, {true}, 1:How do I pay a gravestone fee?, 3:true]
[12, RS2Widget, interactWithWidgetContainingText, 1:How do I pay a gravestone fee?, 1:Continue, 3:false]
[13, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[13, Variables, getBoolean, 1:FirstDeath, 3:true]
[13, RS2Widget, isVisibleContainingText, {false}, 1:<str>How long do I have to return to my gravestone?</str>, 3:false]
[13, RS2Widget, isVisibleContainingText, {true}, 1:How long do I have to return to my gravestone?, 3:false]
[13, RS2Widget, interactWithWidgetContainingText, 1:How long do I have to return to my gravestone?, 1:Continue, 3:false]
[14, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[14, Variables, getBoolean, 1:FirstDeath, 3:true]
[14, RS2Widget, isVisibleContainingText, {false}, 1:<str>How do I know what will happen to my items when I die?</str>, 3:false]
[14, RS2Widget, isVisibleContainingText, {true}, 1:How do I know what will happen to my items when I die?, 3:false]
[14, RS2Widget, interactWithWidgetContainingText, 1:How do I know what will happen to my items when I die?, 1:Continue, 3:false]
[15, Debug, comment, 1:[Breaks]]
[20, Debug, comment, 1:[Antiban - Tribot ABC2]]
[21, Variables, getBoolean, 1:ABC2GeneratedEatAtHp, 3:false]
[21, Variables, editBoolean, 1:ABC2GeneratedEatAtHp, 3:true]
[21, Variables, generateRandomInteger, 1:ABC2GenerateEatAtHP, 2:1, 2:70]
[22, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[22, Variables, getBoolean, 1:FreshRun, 3:false]
[22, Timers, isRunning, {false}, 1:ABC2ShouldPickupMouse]
[22, Debug, debug, 1:[Antiban - Pretending to pick up mouse.]]
[22, Mouse, moveMouseSlightly, 2:[25]]
[22, Timers, reset, 1:[ABC2ShouldPickupMouse]]
[23, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[23, Variables, getBoolean, 1:FreshRun, 3:false]
[23, Timers, isRunning, {false}, 1:ABC2ShouldMoveMouse]
[23, Debug, debug, 1:[Antiban - Moving mouse.]]
[23, Mouse, moveMouse, 2:400, 2:250, 2:175]
[23, Timers, reset, 1:[ABC2ShouldMoveMouse]]
[24, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[24, Variables, getBoolean, 1:FreshRun, 3:false]
[24, Timers, isRunning, {false}, 1:ABC2ShouldRightClick]
[24, Debug, debug, 1:[Antiban - Right clicking.]]
[24, Mouse, moveMouse, 2:400, 2:250, 2:175]
[24, Mouse, rightClick]
[24, Sleeping, sleepRandom, 2:100, 2:900]
[24, Mouse, moveMouse, 2:400, 2:250, 2:175]
[24, Timers, reset, 1:[ABC2ShouldRightClick]]
[25, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[25, Variables, getBoolean, 1:FreshRun, 3:false]
[25, Timers, isRunning, {false}, 1:ABC2ShouldRotateCamera]
[25, Debug, debug, 1:[Antiban - Moving camera.]]
[25, Camera, movePitch, 2:55, 2:67]
[25, Camera, moveYaw, 2:1, 2:359]
[25, Timers, reset, 1:[ABC2ShouldRotateCamera]]
[26, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[26, Variables, getBoolean, 1:FreshRun, 3:false]
[26, Timers, isRunning, {false}, 1:ABC2ShouldCheckXP]
[26, Debug, debug, 1:[Antiban - Checking xp.]]
[26, Tabs, open, {false}, 1:[SKILLS]]
[26, RS2Widget, hoverWidget, 2:548, 2:80]
[26, Sleeping, sleepRandom, 2:300, 2:900]
[26, Timers, reset, 1:[ABC2ShouldCheckXP]]
[27, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[27, Variables, getBoolean, 1:FreshRun, 3:false]
[27, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[27, Debug, debug, 1:[Antiban - Preparing to check random tab.]]
[27, Variables, generateRandomInteger, 1:ABC2ShouldCheckTabs, 2:1, 2:11]
[28, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[28, Variables, getBoolean, 1:FreshRun, 3:false]
[28, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[28, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:1]
[28, Tabs, isOpen, {false}, 1:[ATTACK]]
[28, Debug, debug, 1:[Antiban - Checking attack tab.]]
[28, Tabs, open, {false}, 1:[ATTACK]]
[28, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[29, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[29, Variables, getBoolean, 1:FreshRun, 3:false]
[29, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[29, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:2]
[29, Tabs, isOpen, {false}, 1:[QUEST]]
[29, Debug, debug, 1:[Antiban - Checking quest tab.]]
[29, Tabs, open, {false}, 1:[QUEST]]
[29, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[30, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[30, Variables, getBoolean, 1:FreshRun, 3:false]
[30, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[30, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:3]
[30, Tabs, isOpen, {false}, 1:[EQUIPMENT]]
[30, Debug, debug, 1:[Antiban - Checking equipment tab.]]
[30, Tabs, open, {false}, 1:[EQUIPMENT]]
[30, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[31, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[31, Variables, getBoolean, 1:FreshRun, 3:false]
[31, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[31, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:4]
[31, Tabs, isOpen, {false}, 1:[PRAYER]]
[31, Debug, debug, 1:[Antiban - Checking prayer tab.]]
[31, Tabs, open, {false}, 1:[PRAYER]]
[31, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[32, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[32, Variables, getBoolean, 1:FreshRun, 3:false]
[32, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[32, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:5]
[32, Tabs, isOpen, {false}, 1:[MAGIC]]
[32, Debug, debug, 1:[Antiban - Checking magic tab.]]
[32, Tabs, open, {false}, 1:[MAGIC]]
[32, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[33, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[33, Variables, getBoolean, 1:FreshRun, 3:false]
[33, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[33, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:6]
[33, Tabs, isOpen, {false}, 1:[CLANCHAT]]
[33, Debug, debug, 1:[Antiban - Checking clanchat tab.]]
[33, Tabs, open, {false}, 1:[CLANCHAT]]
[33, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[34, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[34, Variables, getBoolean, 1:FreshRun, 3:false]
[34, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[34, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:7]
[34, Tabs, isOpen, {false}, 1:[FRIENDS]]
[34, Debug, debug, 1:[Antiban - Checking friends list.]]
[34, Tabs, open, {false}, 1:[FRIENDS]]
[34, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[35, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[35, Variables, getBoolean, 1:FreshRun, 3:false]
[35, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[35, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:8]
[35, Tabs, isOpen, {false}, 1:[ACCOUNT_MANAGEMENT]]
[35, Debug, debug, 1:[Antiban - Checking account tab.]]
[35, Tabs, open, {false}, 1:[ACCOUNT_MANAGEMENT]]
[35, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[36, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[36, Variables, getBoolean, 1:FreshRun, 3:false]
[36, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[36, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:9]
[36, Tabs, isOpen, {false}, 1:[SETTINGS]]
[36, Debug, debug, 1:[Antiban - Checking settings tab.]]
[36, Tabs, open, {false}, 1:[SETTINGS]]
[36, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[37, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[37, Variables, getBoolean, 1:FreshRun, 3:false]
[37, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[37, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:10]
[37, Tabs, isOpen, {false}, 1:[EMOTES]]
[37, Debug, debug, 1:[Antiban - Checking emotes tab.]]
[37, Tabs, open, {false}, 1:[EMOTES]]
[37, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[38, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[38, Variables, getBoolean, 1:FreshRun, 3:false]
[38, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[38, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:11]
[38, Tabs, isOpen, {false}, 1:[MUSIC]]
[38, Debug, debug, 1:[Antiban - Checking music tab.]]
[38, Tabs, open, {false}, 1:[MUSIC]]
[38, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[39, Debug, comment, 1:[Antiban - Unique]]
[40, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[40, Variables, getBoolean, 1:InMiniBreak, 3:false]
[40, Timers, isRunning, {true}, 1:MiniBreak]
[40, Variables, editBoolean, 1:InMiniBreak, 3:true]
[41, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[41, Variables, getBoolean, 1:InMiniBreak, 3:true]
[41, Timers, isRunning, {false}, 1:MiniBreak]
[41, Variables, editBoolean, 1:InMiniBreak, 3:false]
[42, Variables, getBoolean, 1:NeedToHopWorlds, 3:true]
[42, Debug, debug, 1:[Preparing to hop worlds.]]
[42, Timers, reset, 1:[UABShouldHopWorlds]]
[42, Variables, editBoolean, 1:NeedToHopWorlds, 3:false]
[42, Worlds, hopToRandomWorld]
[43, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[43, Variables, getBoolean, 1:NeedToHopWorlds, 3:false]
[43, Timers, isRunning, {false}, 1:UABShouldHopWorlds]
[43, Variables, addOr]
[43, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[43, Variables, getBoolean, 1:NeedToHopWorlds, 3:false]
[43, Messages, messageContains, {true}, 1:bot, 1:PLAYER]
[43, GrandExchange, isOpen, {false}]
[43, Bank, isOpen, {false}]
[43, Stores, isOpen, {false}]
[43, Variables, editBoolean, 1:NeedToHopWorlds, 3:true]
[44, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[44, Timers, isRunning, {false}, 1:UABShouldCrazyClick]
[44, GrandExchange, isOpen, {false}]
[44, Bank, isOpen, {false}]
[44, Stores, isOpen, {false}]
[44, Debug, debug, 1:[Antiban - Crazy clicks.]]
[44, Timers, reset, 1:[UABShouldCrazyClick]]
[44, Mouse, moveMouseAndClickMultipleTimes, 2:400, 2:250, 2:1, 2:4, 2:200]
[44, Mouse, moveMouseAndClickMultipleTimes, 2:400, 2:250, 2:1, 2:4, 2:200]
[45, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[45, Timers, isRunning, {false}, 1:UABShouldTakeMiniBreak]
[45, Debug, debug, 1:[Antiban - Taking Mini Break.]]
[45, Timers, reset, 1:[UABShouldTakeMiniBreak]]
[45, Timers, reset, 1:[MiniBreak]]
[46, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[46, Timers, isRunning, {false}, 1:UABShouldInspectLoot]
[46, Debug, debug, 1:[Antiban - Inspecting loot.]]
[46, Timers, reset, 1:[UABShouldInspectLoot]]
[46, Mouse, hoverEntity, 1:Bones, 1:GroundItem]
[46, Mouse, hoverEntity, 1:Big Bones, 1:GroundItem]
[46, Mouse, hoverEntity, 1:Dragon bones, 1:GroundItem]
[46, Mouse, rightClick]
[47, Debug, comment, 1:[Global Timers - Is Animating]]
[48, MyPlayer, isAnimating, {true}]
[48, Timers, reset, 1:[<Global>IsAnimating]]
[49, Variables, getBoolean, 1:IsAnimating, 3:false]
[49, Timers, isRunning, {true}, 1:<Global>IsAnimating]
[49, Variables, editBoolean, 1:IsAnimating, 3:true]
[50, Variables, getBoolean, 1:IsAnimating, 3:true]
[50, Timers, isRunning, {false}, 1:<Global>IsAnimating]
[50, Variables, editBoolean, 1:IsAnimating, 3:false]
[51, Debug, comment, 1:[Rogue Outfit Logic]]
[52, Variables, getBoolean, 1:NeedRogueOutfit, 3:false]
[52, Equipment, hasGearEquipped, {false}, 1:Rogue mask, 1:Rogue top, 1:Rogue trousers, 1:Rogue boots, 1:Rogue gloves]
[52, Variables, editBoolean, 1:NeedRogueOutfit, 3:true]
[53, Variables, getBoolean, 1:NeedRogueOutfit, 3:true]
[53, Equipment, hasGearEquipped, {true}, 1:Rogue mask, 1:Rogue top, 1:Rogue trousers, 1:Rogue boots, 1:Rogue gloves]
[53, Variables, editBoolean, 1:NeedRogueOutfit, 3:false]
[54, Debug, comment, 1:[Thieving Cape Logic]]
[54, Variables, getBoolean, 1:NeedThievingCape, 3:false]
[54, Equipment, hasGearEquipped, {false}, 1:Thieving cape]
[54, Skills, getSkillLevel, 1:THIEVING, 1:==, 2:99, 3:false]
[54, Variables, editBoolean, 1:NeedThievingCape, 3:true]
[55, Variables, getBoolean, 1:NeedThievingCape, 3:true]
[55, Skills, getSkillLevel, 1:THIEVING, 1:==, 2:99, 3:false]
[55, Equipment, hasGearEquipped, {true}, 1:Thieving cape]
[55, Variables, addOr]
[55, Variables, getBoolean, 1:NeedThievingCape, 3:true]
[55, Skills, getSkillLevel, 1:THIEVING, 1:!=, 2:99, 3:false]
[55, Variables, editBoolean, 1:NeedThievingCape, 3:false]
[56, Debug, comment, 1:[Food and Healing Logic]]
[57, Variables, getBoolean, 1:NeedFood, 3:false]
[57, Skills, getSkillLevel, 1:THIEVING, 1:<=, 2:98, 3:false]
[57, Inventory, contains, {false}, 1:Jug of wine]
[57, Variables, editBoolean, 1:NeedFood, 3:true]
[58, Variables, getBoolean, 1:NeedFood, 3:true]
[58, Skills, getSkillLevel, 1:THIEVING, 1:<=, 2:98, 3:false]
[58, Inventory, contains, {true}, 1:Jug of wine]
[58, Variables, addOr]
[58, Variables, getBoolean, 1:NeedFood, 3:true]
[58, Skills, getSkillLevel, 1:THIEVING, 1:==, 2:99, 3:false]
[58, Variables, editBoolean, 1:NeedFood, 3:false]
[59, Variables, getBoolean, 1:NeedToHeal, 3:false]
[59, Variables, getInteger, 1:ABC2GenerateEatAtHP, 1:<=, 2:50]
[59, MyPlayer, getCurrentHealthPercent, 1:<=, 2:50]
[59, Variables, addOr]
[59, Variables, getBoolean, 1:NeedToHeal, 3:false]
[59, Variables, getInteger, 1:ABC2GenerateEatAtHP, 1:>=, 2:51]
[59, MyPlayer, getCurrentHealthPercent, 1:<=, 2:70]
[59, Variables, editBoolean, 1:NeedToHeal, 3:true]
[59, Variables, editBoolean, 1:ABC2GeneratedEatAtHp, 3:false]
[60, Variables, getBoolean, 1:NeedToHeal, 3:true]
[60, MyPlayer, getCurrentHealthPercent, 1:>=, 2:71]
[60, Variables, addOr]
[60, Variables, getBoolean, 1:NeedToHeal, 3:true]
[60, MyPlayer, areaContainsPlayer, {false}, 1:[VarrockMasterFarmer]]
[60, Variables, editBoolean, 1:NeedToHeal, 3:false]
[61, Debug, comment, 1:[Stunned Logic]]
[62, Timers, isRunning, {false}, 1:Stunned]
[62, MyPlayer, isHitBarVisible, {true}]
[62, Timers, reset, 1:[Stunned]]
[63, Variables, getBoolean, 1:Stunned, 3:false]
[63, Timers, isRunning, {true}, 1:Stunned]
[63, Variables, editBoolean, 1:Stunned, 3:true]
[64, Variables, getBoolean, 1:Stunned, 3:true]
[64, Timers, isRunning, {false}, 1:Stunned]
[64, Variables, editBoolean, 1:Stunned, 3:false]
[65, Debug, comment, 1:[Dropping Logic]]
[66, Variables, getBoolean, 1:NeedToDrop, 3:false]
[66, MyPlayer, areaContainsPlayer, {true}, 1:[VarrockMasterFarmer]]
[66, Inventory, isFull, {true}]
[66, Variables, editBoolean, 1:NeedToDrop, 3:true]
[67, Variables, getBoolean, 1:NeedToDrop, 3:true]
[67, Inventory, isFull, {false}]
[67, Variables, editBoolean, 1:NeedToDrop, 3:false]
[68, Debug, comment, 1:[Banking Logic]]
[69, Variables, getBoolean, 1:NeedToBank, 3:false]
[69, Variables, getBoolean, 1:NeedRogueOutfit, 3:true]
[69, Variables, addOr]
[69, Variables, getBoolean, 1:NeedToBank, 3:false]
[69, Variables, getBoolean, 1:NeedFood, 3:true]
[69, Skills, getSkillLevel, 1:THIEVING, 1:!=, 2:99, 3:false]
[69, Variables, editBoolean, 1:NeedToBank, 3:true]
[70, Variables, getBoolean, 1:NeedToBank, 3:true]
[70, Variables, getBoolean, 1:NeedRogueOutfit, 3:false]
[70, Skills, getSkillLevel, 1:THIEVING, 1:==, 2:99, 3:false]
[70, Variables, addOr]
[70, Variables, getBoolean, 1:NeedToBank, 3:true]
[70, Variables, getBoolean, 1:NeedRogueOutfit, 3:false]
[70, Variables, getBoolean, 1:NeedFood, 3:false]
[70, Skills, getSkillLevel, 1:THIEVING, 1:!=, 2:99, 3:false]
[70, Variables, editBoolean, 1:NeedToBank, 3:false]
[71, Debug, comment, 1:[Walk to bank]]
[72, Variables, getBoolean, 1:NeedToBank, 3:true]
[72, Bank, isAtClosestBank, {false}]
[72, Debug, comment, 1:[Open Bank]]
[72, WalkTo, walkToPosition, 1:VarrockBankWest, 3:true, 3:false, 3:false, 3:false, 3:false, 3:false, 3:false, 3:false]
[73, Variables, getBoolean, 1:NeedToBank, 3:true]
[73, Bank, isOpen, {false}]
[73, Bank, isAtClosestBank, {true}]
[73, Variables, addOr]
[73, Variables, getBoolean, 1:NeedToBank, 3:true]
[73, Bank, isOpen, {false}]
[73, NPC, isVisible, {true}, 1:[Banker]]
[73, Bank, open]
[74, Debug, comment, 1:[Deposit Inventory]]
[75, Bank, isOpen, {true}]
[75, Inventory, containsAnyOtherThan, 1:Rogue mask, 1:Rogue top, 1:Rogue trousers, 1:Rogue boots, 1:Rogue gloves, 1:Jug of wine, 1:Dodgy necklace]
[75, Variables, addOr]
[75, Bank, isOpen, {true}]
[75, Inventory, isFull, {true}]
[75, Variables, addOr]
[75, Bank, isOpen, {true}]
[75, Inventory, getAmount, 1:Dodgy necklace, 2:5, 1:>=]
[75, Variables, addOr]
[75, Bank, isOpen, {true}]
[75, Inventory, contains, {true}, 1:Dodgy necklace]
[75, Skills, getSkillLevel, 1:THIEVING, 1:>=, 2:94, 3:false]
[75, Variables, addOr]
[75, Bank, isOpen, {true}]
[75, Skills, getSkillLevel, 1:THIEVING, 1:==, 2:99, 3:false]
[75, Inventory, containsAny, 1:Jug of wine, 1:Dodgy necklace]
[75, Variables, addOr]
[75, Bank, isOpen, {true}]
[75, Inventory, getAmount, 1:Jug of wine, 2:21, 1:>=]
[75, Bank, depositAll]
[76, Debug, comment, 1:[Withdraw Rogue Outfit]]
[77, Bank, isOpen, {true}]
[77, Inventory, isFull, {false}]
[77, Equipment, hasGearEquipped, {false}, 1:Rogue mask]
[77, Inventory, contains, {false}, 1:Rogue mask]
[77, Bank, withdrawX, 1:Rogue mask, 2:1]
[78, Bank, isOpen, {true}]
[78, Inventory, isFull, {false}]
[78, Equipment, hasGearEquipped, {false}, 1:Rogue top]
[78, Inventory, contains, {false}, 1:Rogue top]
[78, Bank, withdrawX, 1:Rogue top, 2:1]
[79, Bank, isOpen, {true}]
[79, Inventory, isFull, {false}]
[79, Equipment, hasGearEquipped, {false}, 1:Rogue trousers]
[79, Inventory, contains, {false}, 1:Rogue trousers]
[79, Bank, withdrawX, 1:Rogue trousers, 2:1]
[80, Bank, isOpen, {true}]
[80, Inventory, isFull, {false}]
[80, Equipment, hasGearEquipped, {false}, 1:Rogue gloves]
[80, Inventory, contains, {false}, 1:Rogue gloves]
[80, Bank, withdrawX, 1:Rogue gloves, 2:1]
[81, Bank, isOpen, {true}]
[81, Inventory, isFull, {false}]
[81, Equipment, hasGearEquipped, {false}, 1:Rogue boots]
[81, Inventory, contains, {false}, 1:Rogue boots]
[81, Bank, withdrawX, 1:Rogue boots, 2:1]
[82, Debug, comment, 1:[Equip Rogue Outfit]]
[83, Equipment, hasGearEquipped, {false}, 1:Rogue mask]
[83, Inventory, contains, {true}, 1:Rogue mask]
[83, Inventory, interactWith, 1:Rogue mask, 1:Wear]
[84, Equipment, hasGearEquipped, {false}, 1:Rogue top]
[84, Inventory, contains, {true}, 1:Rogue top]
[84, Inventory, interactWith, 1:Rogue top, 1:Wear]
[85, Equipment, hasGearEquipped, {false}, 1:Rogue trousers]
[85, Inventory, contains, {true}, 1:Rogue trousers]
[85, Inventory, interactWith, 1:Rogue trousers, 1:Wear]
[86, Equipment, hasGearEquipped, {false}, 1:Rogue gloves]
[86, Inventory, contains, {true}, 1:Rogue gloves]
[86, Inventory, interactWith, 1:Rogue gloves, 1:Wear]
[87, Equipment, hasGearEquipped, {false}, 1:Rogue boots]
[87, Inventory, contains, {true}, 1:Rogue boots]
[87, Debug, comment, 1:[Withdraw Thieving Cape]]
[87, Inventory, interactWith, 1:Rogue boots, 1:Wear]
[88, Bank, isOpen, {true}]
[88, Inventory, isFull, {false}]
[88, Bank, contains, {true}, 1:Thieving cape]
[88, Inventory, contains, {false}, 1:Thieving cape]
[88, Equipment, hasGearEquipped, {false}, 1:Thieving cape]
[88, Debug, comment, 1:[Equip Thieving Cape]]
[88, Bank, withdrawX, 1:Thieving cape, 2:1]
[89, Equipment, hasGearEquipped, {false}, 1:Thieving cape]
[89, Inventory, contains, {true}, 1:Thieving cape]
[89, Inventory, interactWith, 1:Thieving cape, 1:Wear]
[90, Debug, comment, 1:[Withdraw Dodgy Necklaces]]
[91, Bank, isOpen, {true}]
[91, Inventory, contains, {false}, 1:Dodgy necklace]
[91, Bank, contains, {true}, 1:Dodgy necklace]
[91, Skills, getSkillLevel, 1:THIEVING, 1:<=, 2:93, 3:false]
[91, Bank, withdrawRandomX, 1:Dodgy necklace, 2:3, 2:4]
[92, Debug, comment, 1:[Equip Dodgy necklaces]]
[93, Inventory, contains, {true}, 1:Dodgy necklace]
[93, Equipment, hasGearEquipped, {false}, 1:Dodgy necklace]
[93, Inventory, interactWith, 1:Dodgy necklace, 1:Wear]
[94, Debug, comment, 1:[Withdraw Jugs of Wine]]
[95, Bank, isOpen, {true}]
[95, Bank, contains, {true}, 1:Jug of wine]
[95, Inventory, getAmount, 1:Jug of wine, 2:19, 1:<=]
[95, Skills, getSkillLevel, 1:THIEVING, 1:<=, 2:76, 3:false]
[95, Bank, withdrawToEqualAmount, 1:Jug of wine, 2:20]
[96, Bank, isOpen, {true}]
[96, Bank, contains, {true}, 1:Jug of wine]
[96, Inventory, getAmount, 1:Jug of wine, 2:15, 1:<=]
[96, Skills, getSkillLevel, 1:THIEVING, 1:>=, 2:77, 3:false]
[96, Skills, getSkillLevel, 1:THIEVING, 1:<=, 2:93, 3:false]
[96, Bank, withdrawToEqualAmount, 1:Jug of wine, 2:16]
[97, Bank, isOpen, {true}]
[97, Bank, contains, {true}, 1:Jug of wine]
[97, Inventory, getAmount, 1:Jug of wine, 2:9, 1:<=]
[97, Skills, getSkillLevel, 1:THIEVING, 1:>=, 2:94, 3:false]
[97, Skills, getSkillLevel, 1:THIEVING, 1:<=, 2:98, 3:false]
[97, Bank, withdrawToEqualAmount, 1:Jug of wine, 2:10]
[98, Debug, comment, 1:[Walk to Farmer]]
[99, Variables, getBoolean, 1:NeedToBank, 3:false]
[99, Variables, getBoolean, 1:InMiniBreak, 3:false]
[99, MyPlayer, areaContainsPlayer, {false}, 1:[VarrockMasterFarmer]]
[99, Debug, debug, 1:[Walking to Master Farmer.]]
[99, WalkTo, walkToPosition, 1:VarrockMasterFarmer, 3:true, 3:false, 3:false, 3:false, 3:false, 3:false, 3:false, 3:false]
[102, Debug, comment, 1:[Pickpocket]]
[103, Variables, getBoolean, 1:NeedToBank, 3:false]
[103, Variables, getBoolean, 1:Stunned, 3:false]
[103, Variables, getBoolean, 1:NeedToHeal, 3:false]
[103, Variables, getBoolean, 1:NeedToDrop, 3:false]
[103, Variables, getBoolean, 1:InMiniBreak, 3:false]
[103, Debug, debug, 1:[Pickpocketting.]]
[103, Variables, generateRandomInteger, 1:ShortAFK, 2:1, 2:125]
[103, NPC, interactWithMultipleTimes, 1:Master farmer, 1:Pickpocket, 2:1, 2:4]
[104, Debug, comment, 1:[Drop Junk]]
[105, Variables, getBoolean, 1:NeedToDrop, 3:true]
[105, MyPlayer, areaContainsPlayer, {true}, 1:[VarrockMasterFarmer]]
[105, Debug, debug, 1:[Dropping junk seeds.]]
[105, Inventory, dropAllExcept, 1:Jug of wine, 1:Dodgy necklace, 1:Snape grass seed, 1:Barley seed, 1:Limpwurt seed, 1:Ranarr seed, 1:Toadflax seed, 1:Snapdragon seed, 1:Torstol seed, 1:Dwarf weed seed]
[106, Inventory, contains, {true}, 1:Jug]
[106, Debug, debug, 1:[Dropping empty jugs.]]
[106, Inventory, dropAllX, 1:Jug]
[107, Debug, comment, 1:[Heal]]
[108, Variables, getBoolean, 1:NeedToHeal, 3:true]
[108, Inventory, contains, {true}, 1:Jug of wine]
[108, Variables, addOr]
[108, Variables, getBoolean, 1:NeedToHeal, 3:false]
[108, Variables, getBoolean, 1:NeedToDrop, 3:false]
[108, Inventory, isFull, {true}]
[108, Debug, debug, 1:[Healing.]]
[108, Inventory, interactWith, 1:Jug of wine, 1:Drink]
[109, Debug, comment, 1:[Activate Run]]
[110, MyPlayer, areaContainsPlayer, {true}, 1:[VarrockMasterFarmer]]
[110, Settings, isRunning, {false}]
[110, Settings, getRunEnergy, 1:>=, 2:50]
[110, Settings, enableRunning]
[111, Debug, comment, 1:[Adjust Camera]]
[112, Camera, getPitch, 1:<=, 2:34]
[112, Camera, movePitch, 2:35, 2:67]
[113, Debug, comment, 1:[Avoid Players - World Hop]]
[114, MyPlayer, areaContainsPlayer, {true}, 1:[VarrockMasterFarmer]]
[114, Player, getPlayerCountInArea, 1:>=, 2:1, 1:MasterFarmerSurroundings]
[114, Variables, addOr]
[114, Worlds, isMembers, {false}]
[114, Worlds, hopToP2P]
[115, Debug, comment, 1:[Short AFK]]
[116, Variables, getInteger, 1:ShortAFK, 1:==, 2:50]
[116, Debug, debug, 1:[Short AFK.]]
[116, Variables, operationInteger, 1:ShortAFK, 1:Set as, 2:0]
[116, Mouse, moveOutsideScreen]
[116, Sleeping, sleepRandom, 2:9204, 2:31084]
[117, Debug, comment, 1:[Rearrange Inventory]]
[118, Inventory, contains, {true}, 1:Torstol seed]
[118, Inventory, slotContains, {false}, 1:Torstol seed, 2:27]
[118, Inventory, moveItemToSlot, 1:Torstol seed, 2:27]
[119, Inventory, contains, {true}, 1:Snapdragon seed]
[119, Inventory, slotContains, {false}, 1:Snapdragon seed, 2:26]
[119, Inventory, moveItemToSlot, 1:Snapdragon seed, 2:26]
[120, Inventory, contains, {true}, 1:Ranarr seed]
[120, Inventory, slotContains, {false}, 1:Ranarr seed, 2:25]
[120, Inventory, moveItemToSlot, 1:Ranarr seed, 2:25]
[121, Inventory, contains, {true}, 1:Toadflax seed]
[121, Inventory, slotContains, {false}, 1:Toadflax seed, 2:24]
[121, Inventory, moveItemToSlot, 1:Toadflax seed, 2:24]
[122, Inventory, contains, {true}, 1:Dwarf weed seed]
[122, Inventory, slotContains, {false}, 1:Dwarf weed seed, 2:23]
[122, Inventory, moveItemToSlot, 1:Dwarf weed seed, 2:23]
[123, Inventory, contains, {true}, 1:Snape grass seed]
[123, Inventory, slotContains, {false}, 1:Snape grass seed, 2:22]
[123, Inventory, moveItemToSlot, 1:Snape grass seed, 2:22]
[124, Inventory, contains, {true}, 1:Limpwurt seed]
[124, Inventory, slotContains, {false}, 1:Limpwurt seed, 2:21]
[124, Inventory, moveItemToSlot, 1:Limpwurt seed, 2:21]
[125, Inventory, contains, {true}, 1:Barley seed]
[125, Inventory, slotContains, {false}, 1:Barley seed, 2:20]
[125, Inventory, moveItemToSlot, 1:Barley seed, 2:20]
[126, Debug, comment, 1:[End]]
