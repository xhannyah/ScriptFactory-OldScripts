<Script>xHannyah:xGreen Dragons:1.0
<Description>REMOVE ALL PLACEHOLDERS AND DISABLE THEM. Kills Green Dragons. Restocks. Upgrades gear. Needs to have at least 1m+ gp in bank or it will go in a GE/bank loop. Once it reaches 70 atk, it will buy a whip. Make sure it has enough gp to buy it plus supplies. Please remove any expensive items you might be wearing.
<Integer>UABShouldSleepInBank:0
<Integer>ABC2GenerateTabSwitchPreference:0
<Integer>ABC2ShouldMoveToAnticipated:0
<Integer>UABShouldRandomizeEating:0
<Integer>ABC2GenerateEatAtHP:0
<Integer>ABC2ShouldLeaveGame:0
<Integer>ABC2ShouldCheckTabs:0
<Integer>ABC2GenerateRunActivation:0
<Integer>ABC2GenerateReactionTime:0
<Integer>ABC2GenerateOpenBankPreference:0
<Integer>ShouldEmptyLootingBag:0
<Integer>RestockBankCheck:0
<Integer>FirstDeathStage:0
<Integer>ABC2ShouldHoverNextTarget:0
<Boolean>NeedToRestockRunePlatelegs:false
<Boolean>NeedToRestockDragonSword:false
<Boolean>NeedToRestockAbyssalWhip:false
<Boolean>EnableRestocking:true
<Boolean>IsDead:false
<Boolean>InBreak:true
<Boolean>InMiniBreak:false
<Boolean>NeedShield:false
<Boolean>NeedToHopWorlds:false
<Boolean>NeedAmulet:false
<Boolean>NeedToRestockRingOfDueling:false
<Boolean>NeedBody:false
<Boolean>NeedLegs:false
<Boolean>NeedToRestock:false
<Boolean>NeedToBank:false
<Boolean>IsFighting:false
<Boolean>EnableProgressiveMode:true
<Boolean>EnableLootingBag:true
<Boolean>NeedToRestockRuneChain:false
<Boolean>NeedToRestockRuneScimitar:false
<Boolean>NeedToLoot:false
<Boolean>NeedToRestockAntidragonShield:false
<Boolean>NeedToEnableRun:false
<Boolean>FreshRun:true
<Boolean>NeedWeapon:false
<Boolean>EnableDeathHandler:true
<Boolean>EnableCustomBreaks:true
<Boolean>ShouldChangeSettings:false
<Boolean>EnableUniqueAntiban:true
<Boolean>NeedRing:false
<Boolean>NeedToRestockCombatPotion:false
<Boolean>EnableTribotAntiban:true
<Boolean>NeedToPot:false
<Boolean>NeedToEat:false
<Boolean>NeedToRestockBurningAmulet:false
<Boolean>FirstDeath:false
<Boolean>NeedToRestockLobsters:false
<Position>BankGrandExchange:3167,3487,0
<Position>WildernessTeleportPositionA:3067,3669,0
<Position>BankDuelArena:3383,3268,0
<Position>WildernessGreenDragonsA:3095,3815,0
<Area>BankGrandExchange:3161,3493,3168,3486,0
<Area>AlKharid:3266,3328,3412,3136,0
<Area>Varrock:3138,3517,3290,3374,0
<Area>GreenDragonsWalkTo:3102,3824,3115,3812,0
<Area>BankDuelArena:3380,3273,3384,3264,0
<Poly Area>WildernessGreenDragonsA:Areaarea=newArea(newint{{3069,3825},{3072,3825},{3073,3824},{3077,3824},{3084,3818},{3093,3826},{3096,3828},{3096,3830},{3100,3834},{3103,3833},{3108,3829},{3112,3829},{3115,3835},{3124,3835},{3124,3801},{3069,3801}});:0
<Timer>UABShouldCrazyClick:3360000,true,960000,true
<Timer>UABShouldTakeMiniBreak:1920000,true,1080000,true
<Timer>MiniBreak:22000,true,48000,false
<Timer>ABC2ShouldExamineEntity:3360000,true,1080000,true
<Timer>Botting:1080000,true,480000,true
<Timer>ABC2ShouldCheckTabs:900000,true,420000,true
<Timer>ABC2ShouldMoveMouse:300000,true,240000,true
<Timer>PreparingForBreak:10000,false,0,false
<Timer>UABShouldReplyToPlayer:5400000,false,0,true
<Timer>UABShouldHopWorlds:2520000,true,840000,true
<Timer>ABC2ShouldCheckXP:2520000,true,960000,true
<Timer>UABShouldInspectLoot:2160000,true,1320000,true
<Timer>ABC2ShouldPickupMouse:240000,true,180000,true
<Timer>IsFighting:8000,false,0,false
<Timer>ABC2ShouldRightClick:1140000,true,420000,true
<Timer>ABC2ShouldRotateCamera:1560000,true,660000,true
<User Input>Script Settings:EnableDeathHandler|Death Handler|true/~/EnableCustomBreaks|Custom Breaks|true/~/EnableTribotAntiban|Tribot ABC2 (Antiban)|true/~/EnableUniqueAntiban|Unique ABC (Antiban)|true/~/
<Custom Break Handler>ShortBreak:720000:0.25
[1, Debug, comment, 1:[Start]]
[2, Variables, getBoolean, 1:FreshRun, 3:true]
[2, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[2, Timers, reset, 1:[ABC2ShouldCheckXP]]
[2, Timers, reset, 1:[ABC2ShouldExamineEntity]]
[2, Timers, reset, 1:[ABC2ShouldMoveMouse]]
[2, Timers, reset, 1:[ABC2ShouldPickupMouse]]
[2, Timers, reset, 1:[ABC2ShouldRightClick]]
[2, Timers, reset, 1:[ABC2ShouldRotateCamera]]
[2, Timers, reset, 1:[UABShouldCrazyClick]]
[2, Timers, reset, 1:[UABShouldHopWorlds]]
[2, Timers, reset, 1:[UABShouldInspectLoot]]
[2, Timers, reset, 1:[UABShouldTakeMiniBreak]]
[2, Variables, editBoolean, 1:FreshRun, 3:false]
[2, Debug, debug, 1:[Resetting all timers.]]
[3, Debug, comment, 1:[First Death Handler]]
[4, Variables, getBoolean, 1:EnableDeathHandler, 3:false]
[4, NPC, isExists, {true}, 1:[Death]]
[4, Logout, stop, {false}]
[5, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[5, Variables, getBoolean, 1:IsDead, 3:true]
[5, NPC, isExists, {false}, 1:[Death]]
[5, Debug, debug, 1:[Successfully left Death's Lair.]]
[5, Variables, editBoolean, 1:IsDead, 3:false]
[5, Variables, editBoolean, 1:FirstDeath, 3:false]
[6, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[6, Variables, getBoolean, 1:IsDead, 3:false]
[6, NPC, isExists, {true}, 1:[Death]]
[6, Debug, debug, 1:[Oh no. You are dead.]]
[6, Variables, editBoolean, 1:IsDead, 3:true]
[7, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[7, Variables, getBoolean, 1:IsDead, 3:true]
[7, Variables, getBoolean, 1:FirstDeath, 3:false]
[7, Debug, debug, 1:[Trying to leave Death's Lair.]]
[7, RS2Object, interactWith, 1:Portal, 1:Use, 3:true, 3:false, 3:true, 3:false, 3:false]
[8, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[8, Variables, getBoolean, 1:FirstDeath, 3:true]
[8, RS2Widget, isVisibleContainingText, {true}, 1:<str>Tell me about gravestones again.</str>, 3:false]
[8, RS2Widget, isVisibleContainingText, {true}, 1:<str>How do I pay a gravestone fee?</str>, 3:false]
[8, RS2Widget, isVisibleContainingText, {true}, 1:<str>How long do I have to return to my gravestone?</str>, 3:false]
[8, RS2Widget, isVisibleContainingText, {true}, 1:<str>How do I know what will happen to my items when I die?</str>, 3:false]
[8, Variables, editBoolean, 1:FirstDeath, 3:false]
[9, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[9, Variables, getBoolean, 1:IsDead, 3:true]
[9, Variables, getBoolean, 1:FirstDeath, 3:false]
[9, RS2Widget, isVisibleContainingText, {true}, 1:I haven't finished talking to you yet, 3:false]
[9, Variables, editBoolean, 1:FirstDeath, 3:true]
[10, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[10, Variables, getBoolean, 1:IsDead, 3:true]
[10, Variables, getBoolean, 1:FirstDeath, 3:true]
[10, Dialogues, isInDialogue, {false}]
[10, NPC, interactWith, 1:Death, 1:Talk-to, 3:true, 3:false, 3:true, 3:false, 3:false]
[11, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[11, Variables, getBoolean, 1:IsDead, 3:true]
[11, Dialogues, isInDialogue, {true}]
[11, Dialogues, clickContinue]
[12, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[12, Variables, getBoolean, 1:FirstDeath, 3:true]
[12, RS2Widget, isVisibleContainingText, {false}, 1:<str>Tell me about gravestones again.</str>, 3:false]
[12, RS2Widget, isVisibleContainingText, {true}, 1:Tell me about gravestones again., 3:true]
[12, RS2Widget, interactWithWidgetContainingText, 1:Tell me about gravestones again., 1:Continue, 3:false]
[13, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[13, Variables, getBoolean, 1:FirstDeath, 3:true]
[13, RS2Widget, isVisibleContainingText, {false}, 1:<str>How do I pay a gravestone fee?</str>, 3:false]
[13, RS2Widget, isVisibleContainingText, {true}, 1:How do I pay a gravestone fee?, 3:true]
[13, RS2Widget, interactWithWidgetContainingText, 1:How do I pay a gravestone fee?, 1:Continue, 3:false]
[14, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[14, Variables, getBoolean, 1:FirstDeath, 3:true]
[14, RS2Widget, isVisibleContainingText, {false}, 1:<str>How long do I have to return to my gravestone?</str>, 3:false]
[14, RS2Widget, isVisibleContainingText, {true}, 1:How long do I have to return to my gravestone?, 3:false]
[14, RS2Widget, interactWithWidgetContainingText, 1:How long do I have to return to my gravestone?, 1:Continue, 3:false]
[15, Variables, getBoolean, 1:EnableDeathHandler, 3:true]
[15, Variables, getBoolean, 1:FirstDeath, 3:true]
[15, RS2Widget, isVisibleContainingText, {false}, 1:<str>How do I know what will happen to my items when I die?</str>, 3:false]
[15, RS2Widget, isVisibleContainingText, {true}, 1:How do I know what will happen to my items when I die?, 3:false]
[15, RS2Widget, interactWithWidgetContainingText, 1:How do I know what will happen to my items when I die?, 1:Continue, 3:false]
[16, Debug, comment, 1:[Breaks]]
[17, Variables, getBoolean, 1:EnableCustomBreaks, 3:true]
[17, Variables, getBoolean, 1:InBreak, 3:true]
[17, Timers, isRunning, {false}, 1:Botting]
[17, Timers, reset, 1:[Botting]]
[18, Variables, getBoolean, 1:EnableCustomBreaks, 3:true]
[18, Variables, getBoolean, 1:InBreak, 3:true]
[18, Timers, isRunning, {true}, 1:Botting]
[18, Variables, editBoolean, 1:InBreak, 3:false]
[19, Variables, getBoolean, 1:EnableCustomBreaks, 3:true]
[19, Variables, getBoolean, 1:InBreak, 3:false]
[19, Timers, isRunning, {false}, 1:Botting]
[19, MyPlayer, isUnderAttack, {true}]
[19, Wilderness, isInWilderness, {false}]
[19, Debug, debug, 1:[Under attack. Need to move to a safe area.]]
[19, Timers, reset, 1:[PreparingForBreak]]
[20, Variables, getBoolean, 1:EnableCustomBreaks, 3:true]
[20, Variables, getBoolean, 1:InBreak, 3:false]
[20, Variables, getBoolean, 1:NeedToRestock, 3:false]
[20, Timers, isRunning, {false}, 1:Botting]
[20, Timers, isRunning, {false}, 1:PreparingForBreak]
[20, Wilderness, isInWilderness, {false}]
[20, Variables, operationInteger, 1:RestockBankCheck, 1:Set as, 2:0]
[20, Debug, debug, 1:[Preparing for break.]]
[20, Sleeping, sleep, 2:[4000]]
[20, Debug, debug, 1:[Going on break.]]
[20, Variables, editBoolean, 1:InBreak, 3:true]
[20, Breaks, startBreak, 1:[ShortBreak]]
[21, Debug, comment, 1:[Antiban Logic - Tribot ABC2]]
[22, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[22, Variables, getBoolean, 1:NeedToRestock, 3:false]
[22, Variables, getBoolean, 1:FreshRun, 3:false]
[22, Timers, isRunning, {false}, 1:ABC2ShouldPickupMouse]
[22, Debug, debug, 1:[Antiban - Pretending to pick up mouse.]]
[22, Mouse, moveMouseSlightly, 2:[25]]
[22, Timers, reset, 1:[ABC2ShouldPickupMouse]]
[23, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[23, Variables, getBoolean, 1:NeedToRestock, 3:false]
[23, Variables, getBoolean, 1:FreshRun, 3:false]
[23, Timers, isRunning, {false}, 1:ABC2ShouldMoveMouse]
[23, Debug, debug, 1:[Antiban - Moving mouse.]]
[23, Mouse, moveMouse, 2:400, 2:250, 2:175]
[23, Timers, reset, 1:[ABC2ShouldMoveMouse]]
[24, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[24, Variables, getBoolean, 1:NeedToRestock, 3:false]
[24, Variables, getBoolean, 1:FreshRun, 3:false]
[24, Timers, isRunning, {false}, 1:ABC2ShouldRightClick]
[24, Debug, debug, 1:[Antiban - Right clicking.]]
[24, Mouse, moveMouse, 2:400, 2:250, 2:175]
[24, Mouse, rightClick]
[24, Sleeping, sleepRandom, 2:100, 2:900]
[24, Mouse, moveMouse, 2:400, 2:250, 2:175]
[24, Timers, reset, 1:[ABC2ShouldRightClick]]
[25, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[25, Variables, getBoolean, 1:NeedToRestock, 3:false]
[25, Variables, getBoolean, 1:FreshRun, 3:false]
[25, Timers, isRunning, {false}, 1:ABC2ShouldRotateCamera]
[25, Debug, debug, 1:[Antiban - Moving camera.]]
[25, Camera, movePitch, 2:55, 2:67]
[25, Camera, moveYaw, 2:1, 2:359]
[25, Timers, reset, 1:[ABC2ShouldRotateCamera]]
[26, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[26, Variables, getBoolean, 1:NeedToRestock, 3:false]
[26, Variables, getBoolean, 1:FreshRun, 3:false]
[26, Timers, isRunning, {false}, 1:ABC2ShouldCheckXP]
[26, Debug, debug, 1:[Antiban - Checking xp.]]
[26, Tabs, open, {false}, 1:[SKILLS]]
[26, RS2Widget, hoverWidget, 2:548, 2:80]
[26, Sleeping, sleepRandom, 2:300, 2:900]
[26, Timers, reset, 1:[ABC2ShouldCheckXP]]
[27, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[27, Variables, getBoolean, 1:NeedToRestock, 3:false]
[27, Variables, getBoolean, 1:FreshRun, 3:false]
[27, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[27, Debug, debug, 1:[Antiban - Preparing to check random tab.]]
[27, Variables, generateRandomInteger, 1:ABC2ShouldCheckTabs, 2:1, 2:11]
[28, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[28, Variables, getBoolean, 1:NeedToRestock, 3:false]
[28, Variables, getBoolean, 1:FreshRun, 3:false]
[28, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[28, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:1]
[28, Tabs, isOpen, {false}, 1:[ATTACK]]
[28, Debug, debug, 1:[Antiban - Checking attack tab.]]
[28, Tabs, open, {false}, 1:[ATTACK]]
[28, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[29, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[29, Variables, getBoolean, 1:NeedToRestock, 3:false]
[29, Variables, getBoolean, 1:FreshRun, 3:false]
[29, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[29, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:2]
[29, Tabs, isOpen, {false}, 1:[QUEST]]
[29, Debug, debug, 1:[Antiban - Checking quest tab.]]
[29, Tabs, open, {false}, 1:[QUEST]]
[29, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[30, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[30, Variables, getBoolean, 1:NeedToRestock, 3:false]
[30, Variables, getBoolean, 1:FreshRun, 3:false]
[30, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[30, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:3]
[30, Tabs, isOpen, {false}, 1:[EQUIPMENT]]
[30, Debug, debug, 1:[Antiban - Checking equipment tab.]]
[30, Tabs, open, {false}, 1:[EQUIPMENT]]
[30, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[31, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[31, Variables, getBoolean, 1:NeedToRestock, 3:false]
[31, Variables, getBoolean, 1:FreshRun, 3:false]
[31, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[31, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:4]
[31, Tabs, isOpen, {false}, 1:[PRAYER]]
[31, Debug, debug, 1:[Antiban - Checking prayer tab.]]
[31, Tabs, open, {false}, 1:[PRAYER]]
[31, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[32, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[32, Variables, getBoolean, 1:NeedToRestock, 3:false]
[32, Variables, getBoolean, 1:FreshRun, 3:false]
[32, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[32, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:5]
[32, Tabs, isOpen, {false}, 1:[MAGIC]]
[32, Debug, debug, 1:[Antiban - Checking magic tab.]]
[32, Tabs, open, {false}, 1:[MAGIC]]
[32, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[33, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[33, Variables, getBoolean, 1:NeedToRestock, 3:false]
[33, Variables, getBoolean, 1:FreshRun, 3:false]
[33, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[33, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:6]
[33, Tabs, isOpen, {false}, 1:[CLANCHAT]]
[33, Debug, debug, 1:[Antiban - Checking clanchat tab.]]
[33, Tabs, open, {false}, 1:[CLANCHAT]]
[33, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[34, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[34, Variables, getBoolean, 1:NeedToRestock, 3:false]
[34, Variables, getBoolean, 1:FreshRun, 3:false]
[34, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[34, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:7]
[34, Tabs, isOpen, {false}, 1:[FRIENDS]]
[34, Debug, debug, 1:[Antiban - Checking friends list.]]
[34, Tabs, open, {false}, 1:[FRIENDS]]
[34, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[35, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[35, Variables, getBoolean, 1:NeedToRestock, 3:false]
[35, Variables, getBoolean, 1:FreshRun, 3:false]
[35, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[35, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:8]
[35, Tabs, isOpen, {false}, 1:[ACCOUNT_MANAGEMENT]]
[35, Debug, debug, 1:[Antiban - Checking account tab.]]
[35, Tabs, open, {false}, 1:[ACCOUNT_MANAGEMENT]]
[35, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[36, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[36, Variables, getBoolean, 1:NeedToRestock, 3:false]
[36, Variables, getBoolean, 1:FreshRun, 3:false]
[36, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[36, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:9]
[36, Tabs, isOpen, {false}, 1:[SETTINGS]]
[36, Debug, debug, 1:[Antiban - Checking settings tab.]]
[36, Tabs, open, {false}, 1:[SETTINGS]]
[36, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[37, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[37, Variables, getBoolean, 1:NeedToRestock, 3:false]
[37, Variables, getBoolean, 1:FreshRun, 3:false]
[37, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[37, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:10]
[37, Tabs, isOpen, {false}, 1:[EMOTES]]
[37, Debug, debug, 1:[Antiban - Checking emotes tab.]]
[37, Tabs, open, {false}, 1:[EMOTES]]
[37, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[38, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[38, Variables, getBoolean, 1:NeedToRestock, 3:false]
[38, Variables, getBoolean, 1:FreshRun, 3:false]
[38, Timers, isRunning, {false}, 1:ABC2ShouldCheckTabs]
[38, Variables, getInteger, 1:ABC2ShouldCheckTabs, 1:==, 2:11]
[38, Tabs, isOpen, {false}, 1:[MUSIC]]
[38, Debug, debug, 1:[Antiban - Checking music tab.]]
[38, Tabs, open, {false}, 1:[MUSIC]]
[38, Timers, reset, 1:[ABC2ShouldCheckTabs]]
[39, Debug, comment, 1:[Antiban Logic - Unique]]
[40, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[40, Variables, getBoolean, 1:NeedToRestock, 3:false]
[40, Variables, getBoolean, 1:InMiniBreak, 3:false]
[40, Timers, isRunning, {true}, 1:MiniBreak]
[40, Variables, editBoolean, 1:InMiniBreak, 3:true]
[41, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[41, Variables, getBoolean, 1:InMiniBreak, 3:true]
[41, Timers, isRunning, {false}, 1:MiniBreak]
[41, Variables, editBoolean, 1:InMiniBreak, 3:false]
[42, Variables, getBoolean, 1:NeedToHopWorlds, 3:true]
[42, Variables, getBoolean, 1:NeedToRestock, 3:false]
[42, Wilderness, isInWilderness, {false}]
[42, Debug, debug, 1:[Preparing to hop worlds.]]
[42, Sleeping, sleep, 2:[9000]]
[42, Variables, editBoolean, 1:NeedToHopWorlds, 3:false]
[42, Timers, reset, 1:[UABShouldHopWorlds]]
[42, Worlds, hopToRandomWorld]
[43, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[43, Variables, getBoolean, 1:NeedToRestock, 3:false]
[43, Variables, getBoolean, 1:NeedToHopWorlds, 3:false]
[43, Timers, isRunning, {false}, 1:UABShouldHopWorlds]
[43, Variables, addOr]
[43, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[43, Variables, getBoolean, 1:NeedToRestock, 3:false]
[43, Variables, getBoolean, 1:NeedToHopWorlds, 3:false]
[43, Messages, messageContains, {true}, 1:bot, 1:PLAYER]
[43, GrandExchange, isOpen, {false}]
[43, Variables, addOr]
[43, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[43, Variables, getBoolean, 1:NeedToRestock, 3:false]
[43, Variables, getBoolean, 1:NeedToHopWorlds, 3:false]
[43, Wilderness, isInWilderness, {true}]
[43, Combat, isPlayerAttackingMyPlayer, {true}]
[43, Variables, addOr]
[43, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[43, Variables, getBoolean, 1:NeedToRestock, 3:false]
[43, Variables, getBoolean, 1:NeedToHopWorlds, 3:false]
[43, Wilderness, isInWilderness, {true}]
[43, Player, getPlayerCountInArea, 1:>=, 2:2, 1:WildernessGreenDragonsA]
[43, Variables, editBoolean, 1:NeedToHopWorlds, 3:true]
[44, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[44, Variables, getBoolean, 1:NeedToRestock, 3:false]
[44, Timers, isRunning, {false}, 1:UABShouldCrazyClick]
[44, GrandExchange, isOpen, {false}]
[44, Bank, isOpen, {false}]
[44, Debug, debug, 1:[Antiban - Crazy clicks.]]
[44, Mouse, moveMouseAndClickMultipleTimes, 2:400, 2:250, 2:1, 2:4, 2:200]
[44, Timers, reset, 1:[UABShouldCrazyClick]]
[45, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[45, Variables, getBoolean, 1:NeedToRestock, 3:false]
[45, Timers, isRunning, {false}, 1:UABShouldTakeMiniBreak]
[45, Debug, debug, 1:[Antiban - Taking Mini Break.]]
[45, Timers, reset, 1:[UABShouldTakeMiniBreak]]
[45, Timers, reset, 1:[MiniBreak]]
[46, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[46, Variables, getBoolean, 1:NeedToRestock, 3:false]
[46, Timers, isRunning, {false}, 1:UABShouldInspectLoot]
[46, Bank, isOpen, {false}]
[46, GrandExchange, isOpen, {false}]
[46, Wilderness, isInWilderness, {true}]
[46, Debug, debug, 1:[Antiban - Inspecting loot.]]
[46, Mouse, hoverEntity, 1:Coins, 1:GroundItem]
[46, Mouse, rightClick]
[46, Timers, reset, 1:[UABShouldInspectLoot]]
[47, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[47, Variables, getBoolean, 1:NeedToRestock, 3:false]
[47, Variables, getInteger, 1:UABShouldSleepInBank, 1:==, 2:1]
[47, Bank, isOpen, {true}]
[47, Debug, debug, 1:[Antiban - Bank sleep.]]
[47, Variables, operationInteger, 1:UABShouldSleepInBank, 1:Set as, 2:0]
[47, Sleeping, sleepRandom, 2:20000, 2:60000]
[48, Variables, getBoolean, 1:EnableUniqueAntiban, 3:true]
[48, Variables, getInteger, 1:UABShouldRandomizeEating, 1:!=, 2:1]
[48, MyPlayer, getCurrentHealthPercent, 1:<=, 2:64]
[48, Variables, generateRandomInteger, 1:UABShouldRandomizeEating, 2:1, 2:250]
[49, Debug, comment, 1:[Script Logic - Miscellaneous]]
[49, Variables, getBoolean, 1:NeedToBank, 3:false]
[49, Inventory, isFull, {true}]
[49, Inventory, contains, {false}, 2:379]
[49, Variables, addOr]
[49, Variables, getBoolean, 1:NeedToBank, 3:false]
[49, Inventory, contains, {false}, 2:379]
[49, Wilderness, isInWilderness, {true}]
[49, MyPlayer, getCurrentHealthPercent, 1:<=, 2:60]
[49, Variables, addOr]
[49, Variables, getBoolean, 1:NeedToBank, 3:false]
[49, Variables, getBoolean, 1:NeedRing, 3:true]
[49, Variables, addOr]
[49, Variables, getBoolean, 1:NeedToBank, 3:false]
[49, Inventory, inventoryContainsPartialName, {false}, 1:Burning amulet, 3:false, 3:true]
[49, Equipment, isWearingItemThatContains, {false}, 1:Burning amulet, 1:AMULET]
[49, Wilderness, isInWilderness, {false}]
[49, Variables, addOr]
[49, Variables, getBoolean, 1:NeedToBank, 3:false]
[49, Variables, getBoolean, 1:NeedWeapon, 3:true]
[49, Variables, addOr]
[49, Variables, getBoolean, 1:NeedToBank, 3:false]
[49, Variables, getBoolean, 1:NeedBody, 3:true]
[49, Variables, addOr]
[49, Variables, getBoolean, 1:NeedToBank, 3:false]
[49, Variables, getBoolean, 1:NeedLegs, 3:true]
[49, Variables, addOr]
[49, Variables, getBoolean, 1:NeedToBank, 3:false]
[49, Variables, getBoolean, 1:NeedLegs, 3:true]
[49, Variables, addOr]
[49, Variables, getBoolean, 1:NeedToBank, 3:false]
[49, Inventory, containsAny, 2:380, 2:21167, 2:2553, 2:1541]
[49, Variables, addOr]
[49, Variables, getBoolean, 1:NeedToBank, 3:false]
[49, Inventory, getAmount, 1:Coins, 2:100000, 1:>=]
[49, Variables, addOr]
[49, Variables, getBoolean, 1:NeedToBank, 3:false]
[49, Inventory, contains, {false}, 2:379]
[49, Wilderness, isInWilderness, {false}]
[49, Variables, editBoolean, 1:NeedToBank, 3:true]
[50, Variables, getBoolean, 1:NeedToBank, 3:true]
[50, Variables, getBoolean, 1:NeedBody, 3:false]
[50, Variables, getBoolean, 1:NeedRing, 3:false]
[50, Variables, getBoolean, 1:NeedShield, 3:false]
[50, Variables, getBoolean, 1:NeedWeapon, 3:false]
[50, Variables, getBoolean, 1:NeedLegs, 3:false]
[50, Inventory, contains, {true}, 2:379]
[50, Equipment, isWearingItemThatContains, {true}, 1:Burning amulet, 1:AMULET]
[50, Inventory, contains, {false}, 2:380, 2:21167, 2:2553, 2:1541]
[50, Variables, editBoolean, 1:NeedToBank, 3:false]
[51, Variables, getBoolean, 1:ShouldChangeSettings, 3:false]
[51, Configs, getValue, 2:3075, 1:!=, 2:458752]
[51, Variables, addOr]
[51, Variables, getBoolean, 1:ShouldChangeSettings, 3:false]
[51, Configs, getValue, 2:1306, 1:!=, 2:2]
[51, Variables, editBoolean, 1:ShouldChangeSettings, 3:true]
[52, Variables, getBoolean, 1:ShouldChangeSettings, 3:true]
[52, Configs, getValue, 2:3075, 1:==, 2:458752]
[52, Configs, getValue, 2:1306, 1:==, 2:2]
[52, Variables, editBoolean, 1:ShouldChangeSettings, 3:false]
[53, Debug, comment, 1:[Script Logic - Looting Bag]]
[54, Inventory, contains, {true}, 1:Looting bag]
[54, Bank, isOpen, {false}]
[54, Inventory, contains, {true}, 2:11941]
[54, Inventory, interactWith, 1:Looting bag, 1:Open]
[54, Sleeping, sleep, 2:[1200]]
[55, Debug, comment, 1:[Script Logic - Equipment]]
[56, Variables, getBoolean, 1:NeedRing, 3:true]
[56, Equipment, isWearingItemThatContains, {true}, 1:Ring of dueling, 1:RING]
[56, Variables, editBoolean, 1:NeedRing, 3:false]
[57, Variables, getBoolean, 1:NeedRing, 3:false]
[57, Equipment, isWearingItemThatContains, {false}, 1:Ring of dueling, 1:RING]
[57, Debug, debug, 1:[Need to get Ring of dueling.]]
[57, Variables, editBoolean, 1:NeedRing, 3:true]
[59, Variables, getBoolean, 1:NeedWeapon, 3:true]
[59, Equipment, isWieldingWeapon, {true}, 1:Abyssal whip, 1:WEAPON]
[59, Variables, addOr]
[59, Variables, getBoolean, 1:NeedWeapon, 3:true]
[59, Equipment, isWieldingWeapon, {true}, 1:Dragon sword, 1:WEAPON]
[59, Variables, addOr]
[59, Variables, getBoolean, 1:NeedWeapon, 3:true]
[59, Equipment, isWieldingWeapon, {true}, 1:Rune scimitar, 1:WEAPON]
[59, Variables, editBoolean, 1:NeedWeapon, 3:false]
[60, Variables, getBoolean, 1:NeedWeapon, 3:false]
[60, Equipment, isWieldingWeapon, {false}, 1:Abyssal whip, 1:WEAPON]
[60, Equipment, isWieldingWeapon, {false}, 1:Dragon sword, 1:WEAPON]
[60, Equipment, isWieldingWeapon, {false}, 1:Rune scimitar, 1:WEAPON]
[60, Debug, debug, 1:[Need to get weapon.]]
[60, Variables, editBoolean, 1:NeedWeapon, 3:true]
[61, Variables, getBoolean, 1:NeedShield, 3:true]
[61, Equipment, isWearingItem, {true}, 1:Anti-dragon shield, 1:SHIELD]
[61, Variables, editBoolean, 1:NeedShield, 3:false]
[62, Variables, getBoolean, 1:NeedShield, 3:false]
[62, Equipment, isWearingItem, {false}, 1:Anti-dragon shield, 1:SHIELD]
[62, Debug, debug, 1:[Need to get shield.]]
[62, Variables, editBoolean, 1:NeedShield, 3:true]
[63, Variables, getBoolean, 1:NeedBody, 3:true]
[63, Equipment, isWearingItem, {true}, 1:Rune chainbody, 1:CHEST]
[63, Variables, editBoolean, 1:NeedBody, 3:false]
[64, Variables, getBoolean, 1:NeedBody, 3:false]
[64, Equipment, isWearingItem, {false}, 1:Rune chainbody, 1:CHEST]
[64, Debug, debug, 1:[Need to get Rune chainbody.]]
[64, Variables, editBoolean, 1:NeedBody, 3:true]
[65, Variables, getBoolean, 1:NeedLegs, 3:true]
[65, Equipment, isWearingItem, {true}, 1:Rune platelegs, 1:LEGS]
[65, Variables, editBoolean, 1:NeedLegs, 3:false]
[66, Variables, getBoolean, 1:NeedLegs, 3:false]
[66, Equipment, isWearingItem, {false}, 1:Rune platelegs, 1:LEGS]
[66, Debug, debug, 1:[Need to get Rune platelegs.]]
[66, Variables, editBoolean, 1:NeedLegs, 3:true]
[67, Debug, comment, 1:[Script Logic - Attack Styles]]
[68, Variables, getBoolean, 1:EnableProgressiveMode, 3:true]
[68, Variables, getBoolean, 1:NeedToBank, 3:false]
[68, Skills, getSkillLevel, 1:ATTACK, 1:<=, 2:69, 3:false]
[68, Combat, isCombatStyle, {false}, 1:[ATTACK]]
[68, Combat, switchCombatStyle, 1:[ATTACK]]
[69, Debug, comment, 1:[Script Logic - Running]]
[70, Variables, getBoolean, 1:NeedToEnableRun, 3:false]
[70, Wilderness, isInWilderness, {true}]
[70, Settings, isRunning, {false}]
[70, Settings, getRunEnergy, 1:>=, 2:25]
[70, Variables, editBoolean, 1:NeedToEnableRun, 3:true]
[71, Variables, getBoolean, 1:NeedToEnableRun, 3:true]
[71, Settings, isRunning, {true}]
[71, Variables, editBoolean, 1:NeedToEnableRun, 3:false]
[73, Debug, comment, 1:[Script Logic - Fighting]]
[74, Wilderness, isInWilderness, {true}]
[74, Combat, isFighting, {true}]
[74, Variables, addOr]
[74, Wilderness, isInWilderness, {true}]
[74, MyPlayer, isUnderAttack, {true}]
[74, Timers, reset, 1:[IsFighting]]
[75, Variables, getBoolean, 1:IsFighting, 3:false]
[75, Timers, isRunning, {true}, 1:IsFighting]
[75, Debug, debug, 1:[Fighting.]]
[75, Variables, editBoolean, 1:IsFighting, 3:true]
[76, Variables, getBoolean, 1:IsFighting, 3:true]
[76, Timers, isRunning, {false}, 1:IsFighting]
[76, Variables, editBoolean, 1:IsFighting, 3:false]
[77, Debug, comment, 1:[Script Logic - Looting]]
[77, Variables, getBoolean, 1:NeedToLoot, 3:false]
[77, Variables, getBoolean, 1:NeedToBank, 3:false]
[77, GroundItem, isExistsOverXGPInArea, {true}, 1:WildernessGreenDragonsA, 2:800]
[77, Variables, addOr]
[77, Variables, getBoolean, 1:NeedToLoot, 3:false]
[77, Variables, getBoolean, 1:NeedToBank, 3:false]
[77, GroundItem, areaContainsGroundItem, {true}, 1:Looting bag, 1:WildernessGreenDragonsA]
[77, Variables, editBoolean, 1:NeedToLoot, 3:true]
[78, Variables, getBoolean, 1:NeedToLoot, 3:true]
[78, GroundItem, isExistsOverXGPInArea, {false}, 1:WildernessGreenDragonsA, 2:800]
[78, GroundItem, areaContainsGroundItem, {false}, 1:Looting bag, 1:WildernessGreenDragonsA]
[78, Variables, addOr]
[78, Variables, getBoolean, 1:NeedToLoot, 3:true]
[78, Wilderness, isInWilderness, {false}]
[78, Variables, editBoolean, 1:NeedToLoot, 3:false]
[79, Debug, comment, 1:[Script Logic - Healing]]
[80, Variables, getBoolean, 1:NeedToEat, 3:false]
[80, MyPlayer, getCurrentHealthPercent, 1:<=, 2:40]
[80, Inventory, contains, {true}, 1:Lobster]
[80, Wilderness, isInWilderness, {true}]
[80, Variables, addOr]
[80, Variables, getBoolean, 1:NeedToEat, 3:false]
[80, Inventory, contains, {true}, 1:Lobster]
[80, Wilderness, isInWilderness, {true}]
[80, Variables, getInteger, 1:UABShouldRandomizeEating, 1:==, 2:1]
[80, Variables, editBoolean, 1:NeedToEat, 3:true]
[80, Variables, operationInteger, 1:UABShouldRandomizeEating, 1:Set as, 2:0]
[81, Variables, getBoolean, 1:NeedToEat, 3:true]
[81, Wilderness, isInWilderness, {true}]
[81, MyPlayer, getCurrentHealthPercent, 1:>=, 2:65]
[81, Variables, addOr]
[81, Variables, getBoolean, 1:NeedToEat, 3:true]
[81, Wilderness, isInWilderness, {false}]
[81, Variables, addOr]
[81, Variables, getBoolean, 1:NeedToEat, 3:true]
[81, Inventory, contains, {false}, 2:379]
[81, Variables, editBoolean, 1:NeedToEat, 3:false]
[82, Debug, comment, 1:[Script Logic - Potting]]
[83, Variables, getBoolean, 1:NeedToPot, 3:false]
[83, Wilderness, isInWilderness, {true}]
[83, Skills, getDynamicSkillLevelCompare, 1:ATTACK, 1:<=, 2:3]
[83, Inventory, inventoryContainsPartialName, {true}, 1:Combat potion, 3:false, 3:true]
[83, Variables, editBoolean, 1:NeedToPot, 3:true]
[84, Variables, getBoolean, 1:NeedToPot, 3:true]
[84, Wilderness, isInWilderness, {true}]
[84, Skills, getDynamicSkillLevelCompare, 1:ATTACK, 1:>=, 2:4]
[84, Variables, addOr]
[84, Variables, getBoolean, 1:NeedToPot, 3:true]
[84, Wilderness, isInWilderness, {false}]
[84, Variables, addOr]
[84, Variables, getBoolean, 1:NeedToPot, 3:true]
[84, Inventory, inventoryContainsPartialName, {false}, 1:Combat potion, 3:false, 3:true]
[84, Variables, editBoolean, 1:NeedToPot, 3:false]
[86, Debug, comment, 1:[Settings - Change Settings]]
[87, Variables, getBoolean, 1:ShouldChangeSettings, 3:true]
[87, Bank, isOpen, {false}]
[87, GrandExchange, isOpen, {false}]
[87, Tabs, isOpen, {false}, 1:[SETTINGS]]
[87, Tabs, open, {false}, 1:[SETTINGS]]
[87, Debug, debug, 1:[Opening settings.]]
[87, Sleeping, sleep, 2:[1200]]
[88, Variables, getBoolean, 1:ShouldChangeSettings, 3:true]
[88, Bank, isOpen, {false}]
[88, GrandExchange, isOpen, {false}]
[88, Tabs, isOpen, {true}, 1:[SETTINGS]]
[88, RS2Widget, isVisibleContainingText, {false}, 1:Controls Settings, 3:false]
[88, RS2Widget, clickWidget, 2:116, 2:106]
[88, Debug, debug, 1:[Controls Settings not visible. Attempting to open it.]]
[88, Sleeping, sleep, 2:[1200]]
[89, Variables, getBoolean, 1:ShouldChangeSettings, 3:true]
[89, Tabs, isOpen, {true}, 1:[SETTINGS]]
[89, RS2Widget, isVisibleContainingText, {true}, 1:Controls Settings, 3:false]
[89, Bank, isOpen, {false}]
[89, GrandExchange, isOpen, {false}]
[89, Configs, getValue, 2:3075, 1:!=, 2:458752]
[89, RS2Widget, clickWidget, 2:116, 2:5, 2:1]
[89, Debug, debug, 1:[Enabling PK Skull Prevention.]]
[89, Sleeping, sleep, 2:[1200]]
[90, Variables, getBoolean, 1:ShouldChangeSettings, 3:true]
[90, Tabs, isOpen, {true}, 1:[SETTINGS]]
[90, Bank, isOpen, {false}]
[90, GrandExchange, isOpen, {false}]
[90, RS2Widget, isVisibleContainingText, {true}, 1:Controls Settings, 3:false]
[90, RS2Widget, isRelativePosition, 2:116, 2:82, 2:3, 1:<=, 1:x, 2:399]
[90, Configs, getValue, 2:3075, 1:==, 2:458752]
[90, Configs, getValue, 2:1306, 1:!=, 2:2]
[90, RS2Widget, clickWidget, 2:116, 2:7, 2:1]
[90, Debug, debug, 1:[Attempting to enable NPC left clicking.]]
[90, Sleeping, sleep, 2:[1200]]
[91, Variables, getBoolean, 1:ShouldChangeSettings, 3:true]
[91, Tabs, isOpen, {true}, 1:[SETTINGS]]
[91, Bank, isOpen, {false}]
[91, GrandExchange, isOpen, {false}]
[91, RS2Widget, isVisibleContainingText, {true}, 1:Controls Settings, 3:false]
[91, RS2Widget, isRelativePosition, 2:116, 2:82, 2:3, 1:>=, 1:x, 2:400]
[91, Configs, getValue, 2:3075, 1:==, 2:458752]
[91, Configs, getValue, 2:1306, 1:!=, 2:2]
[91, RS2Widget, clickWidget, 2:116, 2:82, 2:3]
[91, Debug, debug, 1:[Done!]]
[91, Sleeping, sleep, 2:[1200]]
[92, Debug, comment, 1:[Script Logic - Restocking]]
[93, Variables, getBoolean, 1:NeedToRestock, 3:true]
[93, Variables, getBoolean, 1:NeedToRestockRuneScimitar, 3:false]
[93, Variables, getBoolean, 1:NeedToRestockAbyssalWhip, 3:false]
[93, Variables, getBoolean, 1:NeedToRestockAntidragonShield, 3:false]
[93, Variables, getBoolean, 1:NeedToRestockBurningAmulet, 3:false]
[93, Variables, getBoolean, 1:NeedToRestockCombatPotion, 3:false]
[93, Variables, getBoolean, 1:NeedToRestockDragonSword, 3:false]
[93, Variables, getBoolean, 1:NeedToRestockLobsters, 3:false]
[93, Variables, getBoolean, 1:NeedToRestockRingOfDueling, 3:false]
[93, Variables, getBoolean, 1:NeedToRestockRuneChain, 3:false]
[93, Variables, getBoolean, 1:NeedToRestockRunePlatelegs, 3:false]
[93, Variables, editBoolean, 1:NeedToRestock, 3:false]
[94, Variables, getBoolean, 1:NeedToRestockLobsters, 3:true]
[94, Inventory, getAmount, 1:Lobster, 2:150, 1:>=]
[94, Variables, addOr]
[95, Variables, getBoolean, 1:NeedToRestockLobsters, 3:true]
[95, Bank, getAmount, 1:Lobster, 2:150, 1:>=]
[95, Variables, editBoolean, 1:NeedToRestockLobsters, 3:false]
[96, Variables, getBoolean, 1:NeedToRestockAbyssalWhip, 3:true]
[96, Inventory, contains, {true}, 1:Abyssal whip]
[96, Variables, addOr]
[96, Variables, getBoolean, 1:NeedToRestockAbyssalWhip, 3:true]
[96, Bank, contains, {true}, 1:Abyssal whip]
[96, Variables, addOr]
[96, Variables, getBoolean, 1:NeedToRestockAbyssalWhip, 3:true]
[96, Equipment, isWieldingWeapon, {true}, 1:Abyssal whip, 1:WEAPON]
[96, Variables, editBoolean, 1:NeedToRestockAbyssalWhip, 3:false]
[97, Variables, getBoolean, 1:NeedToRestockDragonSword, 3:true]
[97, Inventory, contains, {true}, 1:Dragon sword]
[97, Variables, addOr]
[97, Variables, getBoolean, 1:NeedToRestockDragonSword, 3:true]
[97, Bank, contains, {true}, 1:Dragon sword]
[97, Variables, addOr]
[97, Variables, getBoolean, 1:NeedToRestockDragonSword, 3:true]
[97, Equipment, isWieldingWeapon, {true}, 1:Dragon sword, 1:WEAPON]
[97, Variables, editBoolean, 1:NeedToRestockDragonSword, 3:false]
[98, Variables, getBoolean, 1:NeedToRestockRuneScimitar, 3:true]
[98, Inventory, contains, {true}, 1:Rune scimitar]
[98, Variables, addOr]
[98, Variables, getBoolean, 1:NeedToRestockRuneScimitar, 3:true]
[98, Bank, contains, {true}, 1:Rune scimitar]
[98, Variables, addOr]
[98, Variables, getBoolean, 1:NeedToRestockRuneScimitar, 3:true]
[98, Equipment, isWieldingWeapon, {true}, 1:Rune scimitar, 1:WEAPON]
[98, Variables, editBoolean, 1:NeedToRestockRuneScimitar, 3:false]
[99, Variables, getBoolean, 1:NeedToRestockCombatPotion, 3:true]
[99, Inventory, contains, {true}, 1:Combat potion(4)]
[99, Variables, addOr]
[99, Variables, getBoolean, 1:NeedToRestockCombatPotion, 3:true]
[99, Bank, contains, {true}, 1:Combat potion(4)]
[99, Variables, editBoolean, 1:NeedToRestockCombatPotion, 3:false]
[100, Variables, getBoolean, 1:NeedToRestockBurningAmulet, 3:true]
[100, Inventory, contains, {true}, 1:Burning amulet(5)]
[100, Variables, addOr]
[100, Variables, getBoolean, 1:NeedToRestockBurningAmulet, 3:true]
[100, Bank, contains, {true}, 1:Burning amulet(5)]
[100, Variables, addOr]
[100, Variables, getBoolean, 1:NeedToRestockBurningAmulet, 3:true]
[100, Equipment, isWearingItemThatContains, {true}, 1:Burning amulet, 1:AMULET]
[100, Variables, editBoolean, 1:NeedToRestockBurningAmulet, 3:false]
[101, Variables, getBoolean, 1:NeedToRestockRingOfDueling, 3:true]
[101, Inventory, contains, {true}, 1:Ring of dueling(8)]
[101, Variables, addOr]
[101, Variables, getBoolean, 1:NeedToRestockRingOfDueling, 3:true]
[101, Bank, contains, {true}, 1:Ring of dueling(8)]
[101, Variables, addOr]
[101, Variables, getBoolean, 1:NeedToRestockRingOfDueling, 3:true]
[101, Equipment, isWearingItemThatContains, {true}, 1:Ring of dueling, 1:AMULET]
[101, Variables, editBoolean, 1:NeedToRestockRingOfDueling, 3:false]
[102, Variables, getBoolean, 1:NeedToRestockAntidragonShield, 3:true]
[102, Inventory, contains, {true}, 1:Anti-dragon shield]
[102, Variables, addOr]
[102, Variables, getBoolean, 1:NeedToRestockAntidragonShield, 3:true]
[102, Bank, contains, {true}, 1:Anti-dragon shield]
[102, Variables, addOr]
[102, Variables, getBoolean, 1:NeedToRestockAntidragonShield, 3:true]
[102, Equipment, isWearingItem, {true}, 1:Anti-dragon shield, 1:SHIELD]
[102, Variables, editBoolean, 1:NeedToRestockAntidragonShield, 3:false]
[103, Variables, getBoolean, 1:NeedToRestockRuneChain, 3:true]
[103, Inventory, contains, {true}, 1:Rune chainbody]
[103, Variables, addOr]
[103, Variables, getBoolean, 1:NeedToRestockRuneChain, 3:true]
[103, Bank, contains, {true}, 1:Rune chainbody]
[103, Variables, addOr]
[103, Variables, getBoolean, 1:NeedToRestockRuneChain, 3:true]
[103, Equipment, isWearingItem, {true}, 1:Rune chainbody, 1:CHEST]
[103, Variables, editBoolean, 1:NeedToRestockRuneChain, 3:false]
[104, Variables, getBoolean, 1:NeedToRestockRunePlatelegs, 3:true]
[104, Inventory, contains, {true}, 1:Rune platelegs]
[104, Variables, addOr]
[104, Variables, getBoolean, 1:NeedToRestockRunePlatelegs, 3:true]
[104, Bank, contains, {true}, 1:Rune platelegs]
[104, Variables, addOr]
[104, Variables, getBoolean, 1:NeedToRestockRunePlatelegs, 3:true]
[104, Equipment, isWearingItem, {true}, 1:Rune platelegs, 1:LEGS]
[104, Variables, editBoolean, 1:NeedToRestockRunePlatelegs, 3:false]
[105, Debug, comment, 1:[Equipment - Re Equip Gear]]
[106, Inventory, contains, {true}, 2:1540]
[106, Equipment, isWearingItem, {false}, 1:Anti-dragon shield, 1:SHIELD]
[106, GrandExchange, isOpen, {false}]
[106, Inventory, interactWith, 1:Anti-dragon shield, 1:Wear]
[107, Inventory, contains, {true}, 2:1113]
[107, Equipment, isWearingItem, {false}, 1:Rune chainbody, 1:CHEST]
[107, GrandExchange, isOpen, {false}]
[107, Inventory, interactWith, 1:Rune chainbody, 1:Wear]
[107, Sleeping, sleep, 2:[800]]
[108, Inventory, contains, {true}, 2:1079]
[108, Equipment, isWearingItem, {false}, 1:Rune platelegs, 1:LEGS]
[108, GrandExchange, isOpen, {false}]
[108, Inventory, interactWith, 1:Rune platelegs, 1:Wear]
[108, Sleeping, sleep, 2:[800]]
[109, Skills, getSkillLevel, 1:ATTACK, 1:>=, 2:70, 3:false]
[109, Inventory, contains, {true}, 2:4151]
[109, Equipment, isWieldingWeapon, {false}, 1:Abyssal whip, 1:WEAPON]
[109, GrandExchange, isOpen, {false}]
[109, Inventory, interactWith, 1:Abyssal whip, 1:Wield]
[109, Sleeping, sleep, 2:[800]]
[110, Skills, getSkillLevel, 1:ATTACK, 1:>=, 2:60, 3:false]
[110, Equipment, isWieldingWeapon, {false}, 1:Abyssal whip, 1:WEAPON]
[110, Equipment, isWieldingWeapon, {false}, 1:Dragon sword, 1:WEAPON]
[110, Inventory, contains, {true}, 1:Dragon sword]
[110, GrandExchange, isOpen, {false}]
[110, Inventory, interactWith, 1:Dragon sword, 1:Wield]
[110, Sleeping, sleep, 2:[800]]
[111, Equipment, isWieldingWeapon, {false}, 1:Abyssal whip, 1:WEAPON]
[111, Equipment, isWieldingWeapon, {false}, 1:Dragon sword, 1:WEAPON]
[111, Equipment, isWieldingWeapon, {false}, 1:Rune scimitar, 1:WEAPON]
[111, Inventory, contains, {true}, 1:Rune scimitar]
[111, GrandExchange, isOpen, {false}]
[111, Inventory, interactWith, 1:Rune scimitar, 1:Wield]
[111, Sleeping, sleep, 2:[800]]
[112, Debug, comment, 1:[Restock - Walk to Grand Exchange]]
[113, Variables, getBoolean, 1:NeedToRestock, 3:true]
[113, MyPlayer, areaContainsPlayer, {false}, 1:[Varrock]]
[113, Inventory, contains, {true}, 1:Varrock teleport]
[113, Bank, isOpen, {false}]
[113, Inventory, interactWith, 1:Varrock teleport, 1:Break]
[113, Sleeping, sleep, 2:[1200]]
[113, Sleeping, sleepTeleporting]
[114, Variables, getBoolean, 1:NeedToRestock, 3:true]
[114, MyPlayer, areaContainsPlayer, {true}, 1:[Varrock]]
[114, MyPlayer, areaContainsPlayer, {false}, 1:[BankGrandExchange]]
[114, Bank, isOpen, {false}]
[114, Variables, addOr]
[114, Variables, getBoolean, 1:NeedToRestock, 3:true]
[114, Bank, isOpen, {false}]
[114, MyPlayer, areaContainsPlayer, {false}, 1:[BankGrandExchange]]
[114, Inventory, contains, {false}, 1:Varrock teleport]
[114, WalkTo, walkToPosition, 1:BankGrandExchange, 3:true, 3:false, 3:false, 3:false, 3:false, 3:false, 3:false, 3:false]
[115, Debug, comment, 1:[Restock - Bank Interactions]]
[117, Variables, getBoolean, 1:NeedToRestock, 3:true]
[117, Inventory, isEmpty, {true}]
[117, Variables, getInteger, 1:RestockBankCheck, 1:!=, 2:0]
[117, Variables, addOr]
[117, Variables, getBoolean, 1:NeedToRestock, 3:true]
[117, Variables, getInteger, 1:RestockBankCheck, 1:!=, 2:0]
[117, Inventory, getAmount, 1:Coins, 2:249999, 1:<=]
[117, Variables, addOr]
[117, Variables, getBoolean, 1:NeedToRestock, 3:false]
[117, Variables, getInteger, 1:RestockBankCheck, 1:!=, 2:0]
[117, Variables, operationInteger, 1:RestockBankCheck, 1:Set as, 2:0]
[118, Variables, getBoolean, 1:NeedToRestock, 3:true]
[118, NPC, isVisible, {true}, 1:[Grand Exchange Clerk]]
[118, Variables, getInteger, 1:RestockBankCheck, 1:==, 2:0]
[118, GrandExchange, isOpen, {false}]
[118, Bank, isOpen, {false}]
[118, Bank, open]
[118, Debug, debug, 1:[Opening bank.]]
[119, Variables, getBoolean, 1:NeedToRestock, 3:true]
[119, Variables, getInteger, 1:RestockBankCheck, 1:==, 2:0]
[119, MyPlayer, areaContainsPlayer, {true}, 1:[BankGrandExchange]]
[119, Bank, isOpen, {true}]
[119, Bank, isNoted, {false}]
[119, Bank, enableNoted, {true}]
[120, Variables, getBoolean, 1:NeedToRestock, 3:true]
[120, MyPlayer, areaContainsPlayer, {true}, 1:[BankGrandExchange]]
[120, Bank, isOpen, {true}]
[120, Bank, isNoted, {true}]
[120, Bank, containsAny, {true}, 1:Coins, 1:Dragon bones, 1:Green dragonhide, 1:Varrock teleport]
[120, Bank, withdrawAllX, 1:Coins, 1:Dragon bones, 1:Green dragonhide, 1:Varrock teleport]
[120, Debug, debug, 1:[Withdrawing loot to sell.]]
[121, Variables, getBoolean, 1:NeedToRestock, 3:true]
[121, MyPlayer, areaContainsPlayer, {true}, 1:[BankGrandExchange]]
[121, Bank, isOpen, {true}]
[121, Bank, contains, {false}, 1:Coins, 1:Dragon bones, 1:Green dragonhide, 1:Varrock teleport]
[121, Bank, close]
[121, Variables, operationInteger, 1:RestockBankCheck, 1:Set as, 2:1]
[122, Debug, comment, 1:[Restock - Grand Exchange Interactions]]
[123, Variables, getBoolean, 1:NeedToRestock, 3:true]
[123, Bank, isOpen, {false}]
[123, GrandExchange, isOpen, {false}]
[123, Variables, getInteger, 1:RestockBankCheck, 1:==, 2:1]
[123, GrandExchange, open]
[124, Variables, getBoolean, 1:NeedToRestock, 3:true]
[124, GrandExchange, isOpen, {true}]
[124, RS2Widget, isVisibleContainingText, {true}, 1:Collect, 3:false]
[124, GrandExchange, collect]
[124, Sleeping, sleep, 2:[2400]]
[125, Variables, getBoolean, 1:NeedToRestock, 3:true]
[125, GrandExchange, isOpen, {true}]
[125, Messages, messageContains, {true}, 1:You haven't got enough, 1:GAME]
[125, Logout, stop, {false}]
[126, GrandExchange, isBuyOfferOpen, {true}]
[126, Variables, addOr]
[126, GrandExchange, isSellOfferOpen, {true}]
[126, RS2Widget, clickWidget, 2:465, 2:4]
[126, Sleeping, sleep, 2:[1200]]
[127, GrandExchange, isOpen, {true}]
[127, GrandExchange, isEmpty, {true}]
[127, Inventory, contains, {true}, 1:Dragon bones]
[127, Debug, debug, 1:[Selling Dragon bones.]]
[127, GrandExchange, sellDynamic, 2:537, 2:0, 1:Default, 2:25, 1:negative, 3:true]
[127, GrandExchange, sellDynamic, 2:536, 2:0, 1:Default, 2:25, 1:negative, 3:false]
[127, Sleeping, sleep, 2:[2400]]
[128, GrandExchange, isOpen, {true}]
[128, GrandExchange, isEmpty, {true}]
[128, Inventory, contains, {true}, 1:Green dragonhide]
[128, Debug, debug, 1:[Selling Green dragonhide.]]
[128, GrandExchange, sellDynamic, 2:1754, 2:0, 1:Default, 2:25, 1:negative, 3:true]
[128, GrandExchange, sellDynamic, 2:1753, 2:0, 1:Default, 2:25, 1:negative, 3:false]
[128, Sleeping, sleep, 2:[2400]]
[129, GrandExchange, isOpen, {true}]
[129, GrandExchange, isEmpty, {true}]
[129, Inventory, contains, {false}, 1:Dragon bones, 1:Green dragonhide]
[129, Inventory, getAmount, 1:Varrock teleport, 2:9, 1:<=]
[129, Debug, debug, 1:[Restocking Varrock teleports.]]
[129, GrandExchange, buyDynamic, 2:8007, 1:Varrock teleport, 2:25, 1:Default, 2:25, 1:positive]
[129, Sleeping, sleep, 2:[2400]]
[130, Variables, getBoolean, 1:NeedToRestockCombatPotion, 3:true]
[130, GrandExchange, isOpen, {true}]
[130, GrandExchange, isEmpty, {true}]
[130, Inventory, contains, {false}, 1:Dragon bones, 1:Green dragonhide]
[130, Inventory, inventoryContainsPartialName, {false}, 1:Combat potion, 3:false, 3:true]
[130, Debug, debug, 1:[Restocking Combat potions.]]
[130, GrandExchange, buyDynamic, 2:9739, 1:Combat potion, 2:100, 1:Default, 2:25, 1:positive]
[130, Sleeping, sleep, 2:[2400]]
[131, Variables, getBoolean, 1:NeedToRestockBurningAmulet, 3:true]
[131, GrandExchange, isOpen, {true}]
[131, GrandExchange, isEmpty, {true}]
[131, Inventory, contains, {false}, 1:Dragon bones, 1:Green dragonhide]
[131, Inventory, inventoryContainsPartialName, {false}, 1:Burning amulet, 3:false, 3:true]
[131, Debug, debug, 1:[Restocking Burning amulets.]]
[131, GrandExchange, buyDynamic, 2:21166, 1:Burning amulet, 2:10, 1:Default, 2:25, 1:positive]
[131, Sleeping, sleep, 2:[2400]]
[132, Variables, getBoolean, 1:NeedToRestockRingOfDueling, 3:true]
[132, GrandExchange, isOpen, {true}]
[132, GrandExchange, isEmpty, {true}]
[132, Inventory, contains, {false}, 1:Dragon bones, 1:Green dragonhide]
[132, Inventory, inventoryContainsPartialName, {false}, 1:Ring of dueling, 3:false, 3:true]
[132, Debug, debug, 1:[Restocking Rings of dueling.]]
[132, GrandExchange, buyDynamic, 2:2552, 1:Ring of dueling, 2:10, 1:Default, 2:25, 1:positive]
[132, Sleeping, sleep, 2:[2400]]
[133, Variables, getBoolean, 1:NeedToRestockLobsters, 3:true]
[133, GrandExchange, isOpen, {true}]
[133, GrandExchange, isEmpty, {true}]
[133, Inventory, contains, {false}, 1:Dragon bones, 1:Green dragonhide]
[133, Inventory, contains, {false}, 1:Lobster]
[133, Debug, debug, 1:[Restocking Lobsters.]]
[133, GrandExchange, buyDynamic, 2:379, 1:Lobster, 2:1500, 1:High, 2:50, 1:positive]
[133, Sleeping, sleep, 2:[2400]]
[134, Variables, getBoolean, 1:NeedToRestockAntidragonShield, 3:true]
[134, GrandExchange, isOpen, {true}]
[134, GrandExchange, isEmpty, {true}]
[134, Inventory, contains, {false}, 1:Dragon bones, 1:Green dragonhide]
[134, Inventory, contains, {false}, 1:Anti-dragon shield]
[134, Debug, debug, 1:[Buying Anti-dragon shield.]]
[134, GrandExchange, buyStatic, 2:1540, 1:Anti-dragon shield, 2:2000, 2:20]
[134, Sleeping, sleep, 2:[2400]]
[135, Variables, getBoolean, 1:NeedToRestockRuneChain, 3:true]
[135, GrandExchange, isOpen, {true}]
[135, GrandExchange, isEmpty, {true}]
[135, Inventory, contains, {false}, 1:Dragon bones, 1:Green dragonhide]
[135, Inventory, contains, {false}, 1:Rune chainbody]
[135, Debug, debug, 1:[Buying rune chainbody.]]
[135, GrandExchange, buyDynamic, 2:1113, 1:Rune chainbody, 2:1, 1:Default, 2:50, 1:positive]
[135, Sleeping, sleep, 2:[2400]]
[136, Variables, getBoolean, 1:NeedToRestockRunePlatelegs, 3:true]
[136, GrandExchange, isOpen, {true}]
[136, GrandExchange, isEmpty, {true}]
[136, Inventory, contains, {false}, 1:Dragon bones, 1:Green dragonhide]
[136, Inventory, contains, {false}, 1:Rune platelegs]
[136, Debug, debug, 1:[Buying Rune platelegs.]]
[136, GrandExchange, buyDynamic, 2:1079, 1:Rune platelegs, 2:1, 1:Default, 2:50, 1:positive]
[136, Sleeping, sleep, 2:[2400]]
[137, Variables, getBoolean, 1:NeedToRestockRuneScimitar, 3:true]
[137, GrandExchange, isOpen, {true}]
[137, GrandExchange, isEmpty, {true}]
[137, Inventory, contains, {false}, 1:Dragon bones, 1:Green dragonhide]
[137, Inventory, contains, {false}, 1:Rune scimitar]
[137, Debug, debug, 1:[Buying Rune scimitar.]]
[137, GrandExchange, buyDynamic, 2:1333, 1:Rune scimitar, 2:1, 1:Default, 2:50, 1:positive]
[137, Sleeping, sleep, 2:[2400]]
[138, Variables, getBoolean, 1:NeedToRestockDragonSword, 3:true]
[138, GrandExchange, isOpen, {true}]
[138, GrandExchange, isEmpty, {true}]
[138, Inventory, contains, {false}, 1:Dragon bones, 1:Green dragonhide]
[138, Inventory, contains, {false}, 1:Dragon sword]
[138, Debug, debug, 1:[Buying Dragon sword.]]
[138, GrandExchange, buyDynamic, 2:21009, 1:Dragon sword, 2:1, 1:Default, 2:50, 1:positive]
[138, Sleeping, sleep, 2:[2400]]
[139, Variables, getBoolean, 1:NeedToRestockAbyssalWhip, 3:true]
[139, GrandExchange, isOpen, {true}]
[139, GrandExchange, isEmpty, {true}]
[139, Inventory, contains, {false}, 1:Dragon bones, 1:Green dragonhide]
[139, Inventory, contains, {false}, 1:Abyssal whip]
[139, Debug, debug, 1:[Buying Abyssal whip.]]
[139, GrandExchange, buyDynamic, 2:4151, 1:Abyssal whip, 2:1, 1:Default, 2:25, 1:positive]
[139, Sleeping, sleep, 2:[2400]]
[140, Debug, comment, 1:[Banking - Get out of Wilderness]]
[141, Variables, getBoolean, 1:NeedToBank, 3:true]
[141, Variables, getBoolean, 1:NeedToRestock, 3:false]
[141, Equipment, isWearingItemThatContains, {true}, 1:Ring of dueling, 1:RING]
[141, Wilderness, isInWilderness, {true}]
[141, Wilderness, getCurrentWildernessLevel, 1:>=, 2:21]
[141, WalkTo, walkToPosition, 1:WildernessTeleportPositionA, 3:true, 3:false, 3:false, 3:false, 3:false, 3:false, 3:false, 3:false]
[142, Variables, getBoolean, 1:NeedToBank, 3:true]
[142, Variables, getBoolean, 1:NeedToRestock, 3:false]
[142, Equipment, isWearingItemThatContains, {true}, 1:Ring of dueling, 1:RING]
[142, Wilderness, isInWilderness, {true}]
[142, Wilderness, getCurrentWildernessLevel, 1:<=, 2:20]
[142, Tabs, open, {false}, 1:[EQUIPMENT]]
[142, RS2Widget, interactWithWidgetContainingAction, 1:Duel Arena, 3:false]
[142, Sleeping, sleep, 2:[300]]
[142, Sleeping, sleepTeleporting]
[142, Sleeping, sleep, 2:[300]]
[143, Debug, comment, 1:[Banking - Walk to Bank]]
[144, Variables, getBoolean, 1:NeedToBank, 3:true]
[144, Variables, getBoolean, 1:NeedToRestock, 3:false]
[144, MyPlayer, areaContainsPlayer, {false}, 1:[AlKharid]]
[144, Wilderness, isInWilderness, {false}]
[144, Equipment, isWearingItemThatContains, {true}, 1:Ring of dueling, 1:RING]
[144, Tabs, open, {false}, 1:[EQUIPMENT]]
[144, RS2Widget, interactWithWidgetContainingAction, 1:Duel Arena, 3:false]
[144, Sleeping, sleep, 2:[300]]
[144, Sleeping, sleepTeleporting]
[144, Sleeping, sleep, 2:[300]]
[145, Variables, getBoolean, 1:NeedToBank, 3:true]
[145, Variables, getBoolean, 1:NeedToRestock, 3:false]
[145, MyPlayer, areaContainsPlayer, {false}, 1:[BankDuelArena]]
[145, Equipment, isWearingItemThatContains, {false}, 1:Ring of dueling, 1:RING]
[145, Variables, addOr]
[145, Variables, getBoolean, 1:NeedToBank, 3:true]
[145, Variables, getBoolean, 1:NeedToRestock, 3:false]
[145, Wilderness, isInWilderness, {false}]
[145, MyPlayer, areaContainsPlayer, {true}, 1:[AlKharid]]
[145, MyPlayer, areaContainsPlayer, {false}, 1:[BankDuelArena]]
[145, WalkTo, walkToPosition, 1:BankDuelArena, 3:true, 3:false, 3:false, 3:false, 3:false, 3:false, 3:false, 3:false]
[146, Variables, getBoolean, 1:NeedToBank, 3:true]
[146, Variables, getBoolean, 1:NeedToRestock, 3:false]
[146, Bank, isOpen, {false}]
[146, Bank, isAtClosestBank, {true}]
[146, Variables, addOr]
[146, Variables, getBoolean, 1:NeedToBank, 3:true]
[146, Variables, getBoolean, 1:NeedToRestock, 3:false]
[146, Bank, isOpen, {false}]
[146, RS2Object, isVisible, {true}, 1:[Bank booth]]
[146, Variables, addOr]
[146, Variables, getBoolean, 1:NeedToBank, 3:true]
[146, Variables, getBoolean, 1:NeedToRestock, 3:false]
[146, Bank, isOpen, {false}]
[146, RS2Object, isVisible, {true}, 1:[Open chest]]
[146, Bank, open]
[146, Variables, operationInteger, 1:ShouldEmptyLootingBag, 1:Set as, 2:1]
[146, Variables, generateRandomInteger, 1:UABShouldSleepInBank, 2:1, 2:6]
[146, Debug, debug, 1:[Opening bank.]]
[147, Debug, comment, 1:[Banking - Equipping Gear]]
[148, Variables, getBoolean, 1:NeedToRestock, 3:false]
[148, Inventory, isFull, {false}]
[148, Bank, isOpen, {true}]
[148, Skills, getSkillLevel, 1:ATTACK, 1:>=, 2:70, 3:false]
[148, Bank, contains, {true}, 1:Abyssal whip]
[148, Inventory, contains, {false}, 1:Abyssal whip]
[148, Equipment, isWieldingWeapon, {false}, 1:Abyssal whip, 1:WEAPON]
[148, Bank, withdrawX, 1:Abyssal whip, 2:1]
[148, Sleeping, sleep, 2:[1200]]
[148, Inventory, interactWith, 1:Abyssal whip, 1:Wield]
[148, Sleeping, sleep, 2:[400]]
[149, Variables, getBoolean, 1:NeedToRestock, 3:false]
[149, Inventory, isFull, {false}]
[149, Bank, isOpen, {true}]
[149, Skills, getSkillLevel, 1:ATTACK, 1:>=, 2:60, 3:false]
[149, Bank, contains, {true}, 1:Dragon sword]
[149, Inventory, contains, {false}, 1:Dragon sword]
[149, Equipment, isWieldingWeapon, {false}, 1:Abyssal whip, 1:WEAPON]
[149, Equipment, isWieldingWeapon, {false}, 1:Dragon sword, 1:WEAPON]
[149, Bank, withdrawX, 1:Dragon sword, 2:1]
[149, Sleeping, sleep, 2:[1200]]
[149, Inventory, interactWith, 1:Dragon sword, 1:Wield]
[149, Sleeping, sleep, 2:[400]]
[150, Variables, getBoolean, 1:NeedToRestock, 3:false]
[150, Inventory, isFull, {false}]
[150, Bank, isOpen, {true}]
[150, Skills, getSkillLevel, 1:ATTACK, 1:>=, 2:40, 3:false]
[150, Bank, contains, {true}, 1:Rune scimitar]
[150, Inventory, contains, {false}, 1:Rune scimitar]
[150, Equipment, isWieldingWeapon, {false}, 1:Abyssal whip, 1:WEAPON]
[150, Equipment, isWieldingWeapon, {false}, 1:Dragon sword, 1:WEAPON]
[150, Equipment, isWieldingWeapon, {false}, 1:Rune scimitar, 1:WEAPON]
[150, Bank, withdrawX, 1:Rune scimitar, 2:1]
[150, Sleeping, sleep, 2:[1200]]
[150, Inventory, interactWith, 1:Rune scimitar, 1:Wield]
[150, Sleeping, sleep, 2:[400]]
[151, Variables, getBoolean, 1:NeedToRestock, 3:false]
[151, Inventory, isFull, {false}]
[151, Bank, isOpen, {true}]
[151, Bank, contains, {true}, 1:Anti-dragon shield]
[151, Inventory, contains, {false}, 1:Anti-dragon shield]
[151, Equipment, isWearingItem, {false}, 1:Anti-dragon shield, 1:SHIELD]
[151, Bank, withdrawX, 1:Anti-dragon shield, 2:1]
[151, Sleeping, sleep, 2:[1200]]
[151, Inventory, interactWith, 1:Anti-dragon shield, 1:Wear]
[151, Sleeping, sleep, 2:[400]]
[152, Variables, getBoolean, 1:NeedToRestock, 3:false]
[152, Inventory, isFull, {false}]
[152, Bank, isOpen, {true}]
[152, Bank, contains, {true}, 1:Rune chainbody]
[152, Inventory, contains, {false}, 1:Rune chainbody]
[152, Equipment, isWearingItem, {false}, 1:Rune chainbody, 1:CHEST]
[152, Bank, withdrawX, 1:Rune chainbody, 2:1]
[152, Sleeping, sleep, 2:[1200]]
[152, Inventory, interactWith, 1:Rune chainbody, 1:Wear]
[152, Sleeping, sleep, 2:[400]]
[153, Variables, getBoolean, 1:NeedToRestock, 3:false]
[153, Inventory, isFull, {false}]
[153, Bank, isOpen, {true}]
[153, Bank, contains, {true}, 1:Rune platelegs]
[153, Inventory, contains, {false}, 1:Rune platelegs]
[153, Equipment, isWearingItem, {false}, 1:Rune platelegs, 1:LEGS]
[153, Bank, withdrawX, 1:Rune platelegs, 2:1]
[153, Sleeping, sleep, 2:[1200]]
[153, Inventory, interactWith, 1:Rune platelegs, 1:Wear]
[153, Sleeping, sleep, 2:[400]]
[154, Variables, getBoolean, 1:NeedToRestock, 3:false]
[154, Inventory, isFull, {false}]
[154, Bank, isOpen, {true}]
[154, Bank, bankContainsPartialName, {true}, 1:Ring of dueling, 3:false, 3:true]
[154, Inventory, inventoryContainsPartialName, {false}, 1:Ring of dueling, 3:false, 3:true]
[154, Equipment, isWearingItemThatContains, {false}, 1:Ring of dueling, 1:RING]
[154, Bank, withdrawItemWithPartialName, 1:Ring of dueling, 3:false, 3:true, 2:1]
[154, Sleeping, sleep, 2:[1200]]
[154, Inventory, interactWithItemWithPartialName, 1:Ring of dueling, 3:false, 3:true, 1:Wear]
[154, Sleeping, sleep, 2:[400]]
[155, Variables, getBoolean, 1:NeedToRestock, 3:false]
[155, Inventory, isFull, {false}]
[155, Bank, isOpen, {true}]
[155, Bank, bankContainsPartialName, {true}, 1:Burning amulet, 3:false, 3:true]
[155, Inventory, inventoryContainsPartialName, {false}, 1:Burning amulet, 3:false, 3:true]
[155, Equipment, isWearingItemThatContains, {false}, 1:Burning amulet, 1:AMULET]
[155, Bank, withdrawItemWithPartialName, 1:Burning amulet, 3:false, 3:true, 2:1]
[155, Sleeping, sleep, 2:[1200]]
[155, Inventory, interactWithItemWithPartialName, 1:Burning amulet, 3:false, 3:true, 1:Wear]
[155, Sleeping, sleep, 2:[400]]
[156, Debug, comment, 1:[Banking - Restocking Checks]]
[157, MyPlayer, areaContainsPlayer, {false}, 1:[BankGrandExchange]]
[157, Bank, isOpen, {true}]
[157, Skills, getSkillLevel, 1:ATTACK, 1:>=, 2:70, 3:false]
[157, Bank, contains, {false}, 1:Abyssal whip]
[157, Inventory, contains, {false}, 1:Abyssal whip]
[157, Equipment, isWieldingWeapon, {false}, 1:Abyssal whip, 1:WEAPON]
[157, Bank, getAmount, 1:Coins, 2:3000000, 1:>=]
[157, Variables, addOr]
[157, MyPlayer, areaContainsPlayer, {false}, 1:[BankGrandExchange]]
[157, Bank, isOpen, {true}]
[157, Skills, getSkillLevel, 1:ATTACK, 1:>=, 2:70, 3:false]
[157, Bank, contains, {false}, 1:Abyssal whip]
[157, Inventory, contains, {false}, 1:Abyssal whip]
[157, Equipment, isWieldingWeapon, {false}, 1:Abyssal whip, 1:WEAPON]
[157, Bank, getAmount, 1:Green dragonhide, 2:600, 1:>=]
[157, Bank, getAmount, 1:Dragon bones, 2:600, 1:>=]
[157, Variables, editBoolean, 1:NeedToRestock, 3:true]
[157, Variables, editBoolean, 1:NeedToRestockAbyssalWhip, 3:true]
[158, Variables, getBoolean, 1:NeedToRestockAbyssalWhip, 3:false]
[158, Bank, isOpen, {true}]
[158, Skills, getSkillLevel, 1:ATTACK, 1:>=, 2:60, 3:false]
[158, Bank, contains, {false}, 1:Dragon sword]
[158, Inventory, contains, {false}, 1:Dragon sword]
[158, Equipment, isWieldingWeapon, {false}, 1:Dragon sword, 1:WEAPON]
[158, Variables, editBoolean, 1:NeedToRestock, 3:true]
[158, Variables, editBoolean, 1:NeedToRestockDragonSword, 3:true]
[159, Variables, getBoolean, 1:NeedToRestockAbyssalWhip, 3:false]
[159, Variables, getBoolean, 1:NeedToRestockDragonSword, 3:false]
[159, Bank, isOpen, {true}]
[159, Skills, getSkillLevel, 1:ATTACK, 1:<=, 2:59, 3:false]
[159, Bank, contains, {false}, 1:Rune scimitar]
[159, Inventory, contains, {false}, 1:Rune scimitar]
[159, Equipment, isWieldingWeapon, {false}, 1:Rune scimitar, 1:WEAPON]
[159, Variables, editBoolean, 1:NeedToRestock, 3:true]
[159, Variables, editBoolean, 1:NeedToRestockRuneScimitar, 3:true]
[160, Bank, isOpen, {true}]
[160, Bank, contains, {false}, 1:Rune chainbody]
[160, Inventory, contains, {false}, 1:Rune chainbody]
[160, Equipment, isWearingItem, {false}, 1:Rune chainbody, 1:CHEST]
[160, Variables, editBoolean, 1:NeedToRestock, 3:true]
[160, Variables, editBoolean, 1:NeedToRestockRuneChain, 3:true]
[161, Bank, isOpen, {true}]
[161, Bank, contains, {false}, 1:Rune platelegs]
[161, Inventory, contains, {false}, 1:Rune platelegs]
[161, Equipment, isWearingItem, {false}, 1:Rune platelegs, 1:LEGS]
[161, Variables, editBoolean, 1:NeedToRestock, 3:true]
[161, Variables, editBoolean, 1:NeedToRestockRunePlatelegs, 3:true]
[162, Variables, getBoolean, 1:NeedToRestockAntidragonShield, 3:false]
[162, Bank, isOpen, {true}]
[162, Bank, contains, {false}, 1:Anti-dragon shield]
[162, Inventory, contains, {false}, 1:Anti-dragon shield]
[162, Equipment, isWearingItem, {false}, 1:Anti-dragon shield, 1:SHIELD]
[162, Variables, editBoolean, 1:NeedToRestock, 3:true]
[162, Variables, editBoolean, 1:NeedToRestockAntidragonShield, 3:true]
[163, Variables, getBoolean, 1:NeedToRestockRingOfDueling, 3:false]
[163, Bank, isOpen, {true}]
[163, Bank, bankContainsPartialName, {false}, 1:Ring of dueling, 3:false, 3:true]
[163, Inventory, inventoryContainsPartialName, {false}, 1:Ring of dueling, 3:false, 3:true]
[163, Equipment, isWearingItemThatContains, {false}, 1:Ring of dueling, 1:RING]
[163, Variables, editBoolean, 1:NeedToRestock, 3:true]
[163, Variables, editBoolean, 1:NeedToRestockRingOfDueling, 3:true]
[164, Variables, getBoolean, 1:NeedToRestockBurningAmulet, 3:false]
[164, Bank, isOpen, {true}]
[164, Bank, bankContainsPartialName, {false}, 1:Burning amulet, 3:false, 3:true]
[164, Inventory, inventoryContainsPartialName, {false}, 1:Burning amulet, 3:false, 3:true]
[164, Equipment, isWearingItemThatContains, {false}, 1:Burning amulet, 1:AMULET]
[164, Variables, editBoolean, 1:NeedToRestock, 3:true]
[164, Variables, editBoolean, 1:NeedToRestockBurningAmulet, 3:true]
[165, Variables, getBoolean, 1:NeedToRestockLobsters, 3:false]
[165, Bank, isOpen, {true}]
[165, Bank, getAmount, 1:Lobster, 2:99, 1:<=]
[165, Inventory, getAmount, 1:Lobster, 2:99, 1:<=]
[165, Variables, editBoolean, 1:NeedToRestock, 3:true]
[165, Variables, editBoolean, 1:NeedToRestockLobsters, 3:true]
[166, Variables, getBoolean, 1:NeedToRestockCombatPotion, 3:false]
[166, Bank, isOpen, {true}]
[166, Bank, contains, {false}, 1:Combat potion(4)]
[166, Inventory, contains, {false}, 1:Combat potion(4)]
[166, Variables, editBoolean, 1:NeedToRestock, 3:true]
[166, Variables, editBoolean, 1:NeedToRestockCombatPotion, 3:true]
[167, Debug, comment, 1:[Banking - Banking]]
[168, Variables, getBoolean, 1:NeedToRestock, 3:true]
[168, Bank, isOpen, {true}]
[168, MyPlayer, areaContainsPlayer, {false}, 1:[BankGrandExchange]]
[168, Inventory, containsAnyOtherThan, 1:Varrock teleport]
[168, Bank, depositAllExcept, 1:Varrock teleport]
[169, Variables, getBoolean, 1:NeedToBank, 3:true]
[169, Variables, getBoolean, 1:NeedToRestock, 3:false]
[169, Bank, isOpen, {true}]
[169, Bank, isNoted, {false}]
[169, Inventory, containsAnyOtherThan, 1:Lobster, 1:Looting bag, 1:Combat potion(4), 1:Combat potion(3), 1:Combat potion(2), 1:Combat potion(1)]
[169, Variables, addOr]
[169, Variables, getBoolean, 1:NeedToBank, 3:true]
[169, Variables, getBoolean, 1:NeedToRestock, 3:false]
[169, Bank, isOpen, {true}]
[169, Inventory, containsAny, 2:380, 2:9740]
[169, Variables, addOr]
[169, Variables, getBoolean, 1:NeedToBank, 3:true]
[169, Variables, getBoolean, 1:NeedToRestock, 3:false]
[169, Bank, isOpen, {true}]
[169, Inventory, getAmountWithPartialName, 1:Ring of dueling, 3:false, 3:true, 1:>=, 2:2]
[169, Variables, addOr]
[169, Variables, getBoolean, 1:NeedToBank, 3:true]
[169, Variables, getBoolean, 1:NeedToRestock, 3:false]
[169, Bank, isOpen, {true}]
[169, Inventory, getAmountWithPartialName, 1:Burning amulet, 3:false, 3:true, 1:>=, 2:2]
[169, Variables, addOr]
[169, Variables, getBoolean, 1:NeedToBank, 3:true]
[169, Variables, getBoolean, 1:NeedToRestock, 3:false]
[169, Equipment, isWearingItemThatContains, {false}, 1:Burning amulet, 1:AMULET]
[169, Bank, isOpen, {true}]
[169, Inventory, isFull, {true}]
[169, Variables, addOr]
[169, Variables, getBoolean, 1:NeedToBank, 3:true]
[169, Variables, getBoolean, 1:NeedToRestock, 3:false]
[169, Variables, getBoolean, 1:NeedRing, 3:true]
[169, Bank, isOpen, {true}]
[169, Inventory, isFull, {true}]
[169, Bank, depositAllExcept, 1:Looting bag]
[169, Sleeping, sleep, 2:[600]]
[170, Variables, getBoolean, 1:NeedToBank, 3:true]
[170, Bank, isOpen, {true}]
[170, Bank, isNoted, {false}]
[170, Bank, contains, {true}, 1:Looting bag]
[170, Inventory, contains, {false}, 1:Looting bag]
[170, Inventory, isFull, {false}]
[170, Bank, withdrawX, 1:Looting bag, 2:1]
[170, Sleeping, sleep, 2:[600]]
[171, Variables, getBoolean, 1:NeedToBank, 3:true]
[171, Variables, getInteger, 1:ShouldEmptyLootingBag, 1:==, 2:1]
[171, Bank, isOpen, {true}]
[171, Bank, isNoted, {false}]
[171, RS2Widget, isVisibleContainingText, {false}, 1:Bank your loot, 3:false]
[171, Inventory, interactWith, 1:Looting bag, 1:View]
[171, Variables, operationInteger, 1:ShouldEmptyLootingBag, 1:Set as, 2:0]
[171, Sleeping, sleep, 2:[1200]]
[172, Variables, getBoolean, 1:NeedToBank, 3:true]
[172, Bank, isOpen, {true}]
[172, RS2Widget, isVisibleContainingText, {true}, 1:Bank your loot, 3:false]
[172, RS2Widget, isVisibleContainingText, {false}, 1:The bag is empty, 3:false]
[172, Debug, debug, 1:[Depositing Looting bag's loot.]]
[172, RS2Widget, clickWidget, 2:15, 2:8]
[172, Sleeping, sleep, 2:[600]]
[172, Variables, operationInteger, 1:ShouldEmptyLootingBag, 1:Set as, 2:0]
[172, RS2Widget, clickWidget, 2:15, 2:10]
[173, Variables, getBoolean, 1:NeedToBank, 3:true]
[173, Bank, isOpen, {true}]
[173, RS2Widget, isVisibleContainingText, {true}, 1:The bag is empty, 3:false]
[174, Variables, getBoolean, 1:NeedToBank, 3:true]
[174, Variables, getInteger, 1:ShouldEmptyLootingBag, 1:!=, 2:0]
[174, Bank, isOpen, {true}]
[174, Bank, contains, {false}, 1:Looting bag]
[174, Inventory, contains, {false}, 1:Looting bag]
[174, Variables, operationInteger, 1:ShouldEmptyLootingBag, 1:Set as, 2:0]
[175, Variables, getBoolean, 1:NeedToBank, 3:true]
[175, Variables, getBoolean, 1:NeedToRestock, 3:false]
[175, Variables, getInteger, 1:ShouldEmptyLootingBag, 1:==, 2:0]
[175, Bank, isOpen, {true}]
[175, Bank, isNoted, {false}]
[175, Inventory, inventoryContainsPartialName, {false}, 1:Combat potion, 3:false, 3:true]
[175, Bank, withdrawItemWithPartialName, 1:Combat potion, 3:false, 3:true, 2:1]
[175, Sleeping, sleep, 2:[600]]
[176, Variables, getBoolean, 1:NeedToBank, 3:true]
[176, Variables, getBoolean, 1:NeedToRestock, 3:false]
[176, Variables, getBoolean, 1:NeedRing, 3:false]
[176, Equipment, isWearingItemThatContains, {true}, 1:Burning amulet, 1:AMULET]
[176, Variables, getInteger, 1:ShouldEmptyLootingBag, 1:==, 2:0]
[176, Bank, isOpen, {true}]
[176, Bank, isNoted, {false}]
[176, Inventory, inventoryContainsPartialName, {true}, 1:Combat potion, 3:false, 3:true]
[176, Inventory, getAmount, 1:Lobster, 2:24, 1:<=]
[176, Bank, withdrawAll, 1:[Lobster]]
[176, Sleeping, sleep, 2:[600]]
[177, Variables, getBoolean, 1:NeedToRestock, 3:true]
[177, MyPlayer, areaContainsPlayer, {false}, 1:[Varrock]]
[177, Bank, contains, {true}, 1:Varrock teleport]
[177, Bank, withdrawAll, 1:[Varrock teleport]]
[178, Variables, getBoolean, 1:NeedToRestock, 3:true]
[178, MyPlayer, areaContainsPlayer, {false}, 1:[Varrock]]
[178, Bank, contains, {false}, 1:Varrock teleport]
[178, Variables, addOr]
[178, Variables, getBoolean, 1:NeedToBank, 3:false]
[178, Bank, isOpen, {true}]
[178, Bank, close]
[179, Debug, comment, 1:[Green Dragons - Walking to Area]]
[180, Variables, getBoolean, 1:NeedToBank, 3:false]
[180, Variables, getBoolean, 1:ShouldChangeSettings, 3:false]
[180, Equipment, isWearingItemThatContains, {true}, 1:Ring of dueling, 1:RING]
[180, Bank, isOpen, {false}]
[180, Wilderness, isInWilderness, {false}]
[180, Tabs, isOpen, {false}, 1:[EQUIPMENT]]
[180, Tabs, open, {false}, 1:[EQUIPMENT]]
[181, Variables, getBoolean, 1:NeedToBank, 3:false]
[181, Variables, getBoolean, 1:ShouldChangeSettings, 3:false]
[181, Equipment, isWearingItemThatContains, {true}, 1:Ring of dueling, 1:RING]
[181, RS2Widget, isVisibleContainingText, {false}, 1:That's in level 41, 3:false]
[181, Bank, isOpen, {false}]
[181, Wilderness, isInWilderness, {false}]
[181, Tabs, isOpen, {true}, 1:[EQUIPMENT]]
[181, RS2Widget, interact, 2:387, 2:17, 1:Lava Maze]
[181, Sleeping, sleep, 2:[1200]]
[182, Variables, getBoolean, 1:NeedToBank, 3:false]
[182, Variables, getBoolean, 1:ShouldChangeSettings, 3:false]
[182, Equipment, isWearingItemThatContains, {true}, 1:Ring of dueling, 1:RING]
[182, RS2Widget, isVisibleContainingText, {true}, 1:That's in level 41, 3:false]
[182, Bank, isOpen, {false}]
[182, Wilderness, isInWilderness, {false}]
[182, RS2Widget, isVisibleContainingText, {true}, 1:That's in level 41, 3:false]
[182, RS2Widget, interactWithWidgetContainingText, 1:teleport to level 41, 1:Continue, 3:false]
[182, Sleeping, sleep, 2:[600]]
[182, Sleeping, sleepTeleporting]
[182, Sleeping, sleep, 2:[4800]]
[183, Variables, getBoolean, 1:NeedToBank, 3:false]
[183, Variables, getBoolean, 1:InMiniBreak, 3:false]
[183, MyPlayer, areaContainsPlayer, {false}, 1:[WildernessGreenDragonsA]]
[183, Wilderness, isInWilderness, {true}]
[183, WalkTo, walkToArea, 1:GreenDragonsWalkTo, 3:true, 3:false, 3:false, 3:false, 3:false, 3:false, 3:false]
[184, Variables, getBoolean, 1:NeedToBank, 3:false]
[184, Variables, getBoolean, 1:IsFighting, 3:false]
[184, Variables, getBoolean, 1:NeedToLoot, 3:false]
[184, Variables, getBoolean, 1:InMiniBreak, 3:false]
[184, MyPlayer, getDistanceTo, 1:Green dragon, 1:NPC, 1:>=, 2:15, 3:true]
[184, MyPlayer, areaContainsPlayer, {true}, 1:[WildernessGreenDragonsA]]
[184, WalkTo, walkToArea, 1:GreenDragonsWalkTo, 3:true, 3:false, 3:false, 3:false, 3:false, 3:false, 3:false]
[184, WalkTo, walkToEntity, 1:Green dragon, 1:NPC]
[185, Debug, comment, 1:[Green Dragons - Eating]]
[186, Variables, getBoolean, 1:NeedToEat, 3:true]
[186, Variables, addOr]
[186, Variables, getBoolean, 1:NeedToLoot, 3:true]
[186, Inventory, isFull, {true}]
[186, Inventory, interactWith, 1:Lobster, 1:Eat]
[186, Debug, debug, 1:[Healing.]]
[186, Sleeping, sleep, 2:[400]]
[187, Debug, comment, 1:[Green Dragons - Looting]]
[188, Variables, getBoolean, 1:NeedToLoot, 3:true]
[188, GroundItem, lootItemsOverXGPWithinArea, 1:WildernessGreenDragonsA, 2:799]
[188, Debug, debug, 1:[Looting.]]
[189, Variables, getBoolean, 1:NeedToLoot, 3:true]
[189, GroundItem, isExists, {true}, 1:[Looting bag]]
[189, GroundItem, interactWith, 1:Looting bag, 1:Take, 3:false, 3:false, 3:true, 3:false, 3:false]
[189, Debug, debug, 1:[Looting bag!]]
[190, Debug, comment, 1:[Green Dragons - Fighting]]
[191, Variables, getBoolean, 1:NeedToBank, 3:false]
[191, Variables, getBoolean, 1:IsFighting, 3:false]
[191, Variables, getBoolean, 1:InMiniBreak, 3:false]
[191, Variables, getBoolean, 1:NeedToLoot, 3:false]
[191, MyPlayer, getDistanceTo, 1:Green dragon, 1:NPC, 1:<=, 2:14, 3:true]
[191, NPC, interactWith, 1:Green dragon, 1:Attack, 3:true, 3:false, 3:true, 3:true, 3:false]
[191, Variables, generateRandomInteger, 1:ABC2ShouldLeaveGame, 2:1, 2:5]
[191, Debug, debug, 1:[Attacking Green dragon.]]
[191, Sleeping, sleep, 2:[400]]
[192, Debug, comment, 1:[Green Dragons - Potting]]
[193, Variables, getBoolean, 1:NeedToPot, 3:true]
[193, Wilderness, isInWilderness, {true}]
[193, Inventory, interactWithItemWithPartialName, 1:Combat potion, 3:false, 3:true, 1:Drink]
[193, Sleeping, sleep, 2:[400]]
[194, Debug, comment, 1:[Green Dragons - Miscellaneous]]
[195, Variables, getBoolean, 1:NeedToEnableRun, 3:true]
[195, Settings, isRunning, {false}]
[195, Settings, enableRunning]
[196, Debug, comment, 1:[Green Dragons - AFK Antiban]]
[197, Variables, getBoolean, 1:EnableTribotAntiban, 3:true]
[197, Variables, getBoolean, 1:NeedToBank, 3:false]
[197, Variables, getInteger, 1:ABC2ShouldLeaveGame, 1:>=, 2:3]
[197, Wilderness, isInWilderness, {true}]
[197, Debug, debug, 1:[Antiban - Leaving screen.]]
[197, Mouse, moveOutsideScreen]
[197, Variables, operationInteger, 1:ABC2ShouldLeaveGame, 1:Set as, 2:0]
[198, Debug, comment, 1:[End]]
